     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020)
     9                              <1> 
    10                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                              <1> ;; system dependend part
    12                              <1> 
    13                              <1> ; generic 3-param syscall
    14                              <1> %macro _syscall_3 4
    15                              <1> 	push edx
    16                              <1> 	push ecx
    17                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    18                              <1> 	push %1
    19                              <1> 	push %2
    20                              <1> 	push %3
    21                              <1> 	push %4
    22                              <1> 	pop edx
    23                              <1> 	pop ecx
    24                              <1> 	pop ebx
    25                              <1> 	pop eax
    26                              <1> 	int 0x80
    27                              <1> 	pop ebx
    28                              <1> 	pop ecx
    29                              <1> 	pop edx
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    33                              <1> %macro _syscall_exit 1
    34                              <1> 	mov ebx, %1	; exit code
    35                              <1> 	mov eax, 1	; 1 = sys_exit
    36                              <1> 	int 0x80
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> ;; system dependent part ends here
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length
    43                              <1> ; output: eax: read bytes
    44                              <1> %macro _syscall_read 3
    45                              <1> 	_syscall_3 3,%1,%2,%3
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length
    49                              <1> ; output: eax: written bytes
    50                              <1> %macro _syscall_write 3
    51                              <1> 	_syscall_3 4,%1,%2,%3
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    55                              <1> %macro 	PRINT 1
    56                              <1> 	pusha
    57                              <1> 	pushf
    58                              <1> 	jmp %%astr
    59                              <1> %%str	db	%1     ;, 0
    60                              <1> %%strln	equ	$-%%str
    61                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    62                              <1> 	popf
    63                              <1> 	popa
    64                              <1> %endmacro
    65                              <1> 
    66                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    67                              <1> %macro	PUTCHAR 1
    68                              <1> 	pusha
    69                              <1> 	pushf
    70                              <1> %ifstr %1
    71                              <1> 	mov	al, %1
    72                              <1> %elifnum %1
    73                              <1> 	mov	al, %1
    74                              <1> %elifidni %1,al
    75                              <1> 	nop
    76                              <1> %elifidni %1,ah
    77                              <1> 	mov	al, ah
    78                              <1> %elifidni %1,bl
    79                              <1> 	mov	al, bl
    80                              <1> %elifidni %1,bh
    81                              <1> 	mov	al, bh
    82                              <1> %elifidni %1,cl
    83                              <1> 	mov	al, cl
    84                              <1> %elifidni %1,ch
    85                              <1> 	mov	al, ch
    86                              <1> %elifidni %1,dl
    87                              <1> 	mov	al, dl
    88                              <1> %elifidni %1,dh
    89                              <1> 	mov	al, dh
    90                              <1> %else
    91                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    92                              <1> %endif
    93                              <1> 	sub	esp, 2  ; reserve memory for buffer
    94                              <1> 	mov	edi, esp
    95                              <1> 	mov	[edi], al
    96                              <1> 	_syscall_write 1, edi, 1
    97                              <1> 	add	esp, 2
    98                              <1> 	popf
    99                              <1> 	popa
   100                              <1> %endmacro
   101                              <1> 
   102                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   103                              <1> %macro	GETCHAR 0
   104                              <1> 	pushf
   105                              <1> 	push	edi
   106                              <1> 	sub	esp, 2
   107                              <1> 	mov	edi, esp
   108                              <1> 	_syscall_read 0, edi, 1
   109                              <1> 	cmp	eax, 1
   110                              <1> 	jne	%%eof_reached
   111                              <1> 	xor	eax,eax
   112                              <1> 	mov	al, [edi]
   113                              <1> 	jmp	%%gcquit
   114                              <1> %%eof_reached:
   115                              <1> 	xor	eax, eax
   116                              <1> 	not	eax 		; eax := -1
   117                              <1> %%gcquit:
   118                              <1> 	add	esp, 2
   119                              <1> 	pop	edi
   120                              <1> 	popf
   121                              <1> %endmacro
   122                              <1> 
   123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   124                              <1> %macro FINISH 0-1 0
   125                              <1> 	_syscall_exit %1
   126                              <1> %endmacro
   127                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   128                              <1> %macro UNSINT 1
   129                              <1> pusha
   130                              <1> pushf
   131                              <1> push dword %1
   132                              <1> pop eax
   133                              <1> mov edi,eax
   134                              <1> mov esi,10
   135                              <1>   xor ebx,ebx
   136                              <1> %%m1:
   137                              <1>    xor edx,edx
   138                              <1>    div esi
   139                              <1>    inc ebx
   140                              <1>    cmp eax,0
   141                              <1>    jne %%m1
   142                              <1> 
   143                              <1>    mov eax,1
   144                              <1>    mov ecx,ebx
   145                              <1>    dec ecx
   146                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   147                              <1>     cmp ecx,0
   148                              <1>      je %%m4
   149                              <1> %%m2:  mul esi
   150                              <1>        loop %%m2
   151                              <1> 
   152                              <1>        mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155                              <1>       mov eax,edi
   156                              <1>       xor edx,edx
   157                              <1>       div ebx
   158                              <1>       add al,'0'
   159                              <1>       PUTCHAR al
   160                              <1>       mov edi,edx
   161                              <1>       xor edx,edx
   162                              <1>       mov eax,ebx
   163                              <1>       div esi
   164                              <1>       cmp eax,1
   165                              <1>       je %%m4
   166                              <1>       mov ebx,eax
   167                              <1>       jmp %%m3
   168                              <1>  %%m4:
   169                              <1>       mov edx,edi
   170                              <1>       add dl,'0'
   171                              <1>       PUTCHAR dl
   172                              <1> 
   173                              <1> 
   174                              <1> popf
   175                              <1> popa
   176                              <1> %endmacro
   177                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                              <1> %macro SIGNINT 1
   179                              <1> pusha
   180                              <1> pushf
   181                              <1> push dword %1
   182                              <1> pop eax
   183                              <1>     cmp eax,0
   184                              <1>     jge %%m5
   185                              <1>     PUTCHAR '-'
   186                              <1>     neg eax
   187                              <1> %%m5:
   188                              <1>       UNSINT eax
   189                              <1> popf
   190                              <1> popa
   191                              <1> %endmacro
   192                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   193                              <1> %macro GETUN 1
   194                              <1> pushad
   195                              <1> pushfd
   196                              <1> ;;;;;;;;;;;;;;;;;;;;;;
   197                              <1> xor edi,edi
   198                              <1> xor esi,esi
   199                              <1> %%m1:
   200                              <1> GETCHAR
   201                              <1> cmp al,0xA
   202                              <1> je %%m2
   203                              <1> cmp al,'0'
   204                              <1> jb %%m_err
   205                              <1> cmp al,'9'
   206                              <1> ja %%m_err
   207                              <1> inc edi
   208                              <1> xor ecx,ecx
   209                              <1> mov cl,al
   210                              <1> mov eax,esi
   211                              <1> mov ebx,10
   212                              <1> mul ebx
   213                              <1> sub cl,48
   214                              <1> add eax,ecx
   215                              <1> jc %%m3
   216                              <1> mov esi,eax
   217                              <1> jmp %%m1
   218                              <1> %%m2:
   219                              <1> cmp edi,0
   220                              <1> je %%m1
   221                              <1> jmp %%m4
   222                              <1> %%m3: PRINT "too big number"
   223                              <1> PUTCHAR 10
   224                              <1> jmp %%m4
   225                              <1> %%m_err: PRINT "ERROR!!!"
   226                              <1> PUTCHAR 0xa
   227                              <1> %%m4:
   228                              <1> ;;;;;;;;;;;;;;;;;;
   229                              <1> push esi
   230                              <1> add esp,4
   231                              <1> popfd
   232                              <1> popad
   233                              <1> sub esp,40
   234                              <1> pop dword %1
   235                              <1> add esp,36
   236                              <1> %endmacro
   237                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   238                              <1> %macro GETSIG 1
   239                              <1> pushad
   240                              <1> pushfd
   241                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   242                              <1> xor edi,edi
   243                              <1> xor esi,esi
   244                              <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   246                              <1> cmp al,0xa
   247                              <1> je %%m_st1
   248                              <1> cmp al,'-'
   249                              <1> jne %%s1
   250                              <1> mov ebx,-10
   251                              <1> push ebx
   252                              <1> GETCHAR
   253                              <1> cmp al,0xa
   254                              <1> je %%m_err
   255                              <1> jmp %%m_st21
   256                              <1> %%s1: push ebx
   257                              <1> cmp al,'+'
   258                              <1> jne %%m_st21
   259                              <1> GETCHAR
   260                              <1> cmp al,0xa
   261                              <1> je %%m_err
   262                              <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   264                              <1> %%m_st21:  cmp al,0xa
   265                              <1> je %%pr_end
   266                              <1> cmp al,'0'
   267                              <1> jb %%m_err
   268                              <1> cmp al,'9'
   269                              <1> ja %%m_err
   270                              <1> inc edi
   271                              <1> xor ecx,ecx
   272                              <1> mov cl,al
   273                              <1> mov eax,esi
   274                              <1> imul ebx
   275                              <1> sub cl,48
   276                              <1> cmp dword[esp],-10
   277                              <1> je %%j_s
   278                              <1> add eax,ecx
   279                              <1> jmp %%j_per
   280                              <1> %%j_s: sub eax,ecx
   281                              <1> %%j_per: jo %%m_b
   282                              <1> mov esi,eax
   283                              <1> cmp dword[esp],-10
   284                              <1> jne %%m_st2
   285                              <1> neg esi
   286                              <1> jmp %%m_st2
   287                              <1> %%pr_end:  cmp edi,0
   288                              <1> je %%m_st2
   289                              <1> jmp %%m_k
   290                              <1> ;;;;;;;;;
   291                              <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
   293                              <1> PUTCHAR 0xa
   294                              <1> jmp %%m_end
   295                              <1> %%m_b: pop ebx
   296                              <1> cmp ebx,-10
   297                              <1> je  %%m_l
   298                              <1> PRINT "too big"
   299                              <1> PUTCHAR 0xa
   300                              <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   302                              <1> PUTCHAR 0xa
   303                              <1> jmp %%m_end
   304                              <1> %%m_k: pop ebx
   305                              <1> cmp ebx,-10
   306                              <1> jne %%m_p
   307                              <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> 
   312                              <1> push esi
   313                              <1> add esp,4
   314                              <1> popfd
   315                              <1> popad
   316                              <1> sub esp,40
   317                              <1> pop dword %1
   318                              <1> add esp,36
   319                              <1> jmp %%mm_e
   320                              <1> %%m_end:
   321                              <1> popfd
   322                              <1> popad
   323                              <1> %%mm_e:
   324                              <1> %endmacro
     2                                  
     3                                  ;  5.	Вычислить значение Y
     4                                  ;                               Y=
     5                                  ;        x=2 (байт)       a=7 (байт)
     6                                  
     7                                  section .data
     8 00000000 02                          x db 2
     9 00000001 07                          a db 7
    10                                  
    11                                  section .bss
    12 00000000 ????????                    y resd 1
    13                                  
    14                                  section .text
    15                                      global _start
    16                                  
    17                                  _start:
    18                                      PRINT "x = "
    56 00000000 60                  <1>  pusha
    57 00000001 9C                  <1>  pushf
    58 00000002 EB04                <1>  jmp %%astr
    59 00000004 78203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@4.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000008 52                  <3>  push edx
    16 00000009 51                  <3>  push ecx
    17 0000000A 53                  <3>  push ebx
    18 0000000B 6A04                <3>  push %1
    19 0000000D 6A01                <3>  push %2
    20 0000000F 68[04000000]        <3>  push %3
    21 00000014 6A04                <3>  push %4
    22 00000016 5A                  <3>  pop edx
    23 00000017 59                  <3>  pop ecx
    24 00000018 5B                  <3>  pop ebx
    25 00000019 58                  <3>  pop eax
    26 0000001A CD80                <3>  int 0x80
    27 0000001C 5B                  <3>  pop ebx
    28 0000001D 59                  <3>  pop ecx
    29 0000001E 5A                  <3>  pop edx
    62 0000001F 9D                  <1>  popf
    63 00000020 61                  <1>  popa
    19 00000021 0FBE05[00000000]            movsx eax, byte [x]
    20                                      SIGNINT eax
   179 00000028 60                  <1> pusha
   180 00000029 9C                  <1> pushf
   181 0000002A 50                  <1> push dword %1
   182 0000002B 58                  <1> pop eax
   183 0000002C 83F800              <1>  cmp eax,0
   184 0000002F 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000031 60                  <2>  pusha
    69 00000032 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000033 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000035 83EC02              <2>  sub esp, 2
    94 00000038 89E7                <2>  mov edi, esp
    95 0000003A 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000003C 52                  <4>  push edx
    16 0000003D 51                  <4>  push ecx
    17 0000003E 53                  <4>  push ebx
    18 0000003F 6A04                <4>  push %1
    19 00000041 6A01                <4>  push %2
    20 00000043 57                  <4>  push %3
    21 00000044 6A01                <4>  push %4
    22 00000046 5A                  <4>  pop edx
    23 00000047 59                  <4>  pop ecx
    24 00000048 5B                  <4>  pop ebx
    25 00000049 58                  <4>  pop eax
    26 0000004A CD80                <4>  int 0x80
    27 0000004C 5B                  <4>  pop ebx
    28 0000004D 59                  <4>  pop ecx
    29 0000004E 5A                  <4>  pop edx
    97 0000004F 83C402              <2>  add esp, 2
    98 00000052 9D                  <2>  popf
    99 00000053 61                  <2>  popa
   186 00000054 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000056 60                  <2> pusha
   130 00000057 9C                  <2> pushf
   131 00000058 50                  <2> push dword %1
   132 00000059 58                  <2> pop eax
   133 0000005A 89C7                <2> mov edi,eax
   134 0000005C BE0A000000          <2> mov esi,10
   135 00000061 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000063 31D2                <2>  xor edx,edx
   138 00000065 F7F6                <2>  div esi
   139 00000067 43                  <2>  inc ebx
   140 00000068 83F800              <2>  cmp eax,0
   141 0000006B 75F6                <2>  jne %%m1
   142                              <2> 
   143 0000006D B801000000          <2>  mov eax,1
   144 00000072 89D9                <2>  mov ecx,ebx
   145 00000074 49                  <2>  dec ecx
   146                              <2> 
   147 00000075 83F900              <2>  cmp ecx,0
   148 00000078 7441                <2>  je %%m4
   149 0000007A F7E6                <2> %%m2: mul esi
   150 0000007C E2FC                <2>  loop %%m2
   151                              <2> 
   152 0000007E 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000080 89F8                <2>  mov eax,edi
   156 00000082 31D2                <2>  xor edx,edx
   157 00000084 F7F3                <2>  div ebx
   158 00000086 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000088 60                  <3>  pusha
    69 00000089 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 0000008A 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 0000008B 83EC02              <3>  sub esp, 2
    94 0000008E 89E7                <3>  mov edi, esp
    95 00000090 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000092 52                  <5>  push edx
    16 00000093 51                  <5>  push ecx
    17 00000094 53                  <5>  push ebx
    18 00000095 6A04                <5>  push %1
    19 00000097 6A01                <5>  push %2
    20 00000099 57                  <5>  push %3
    21 0000009A 6A01                <5>  push %4
    22 0000009C 5A                  <5>  pop edx
    23 0000009D 59                  <5>  pop ecx
    24 0000009E 5B                  <5>  pop ebx
    25 0000009F 58                  <5>  pop eax
    26 000000A0 CD80                <5>  int 0x80
    27 000000A2 5B                  <5>  pop ebx
    28 000000A3 59                  <5>  pop ecx
    29 000000A4 5A                  <5>  pop edx
    97 000000A5 83C402              <3>  add esp, 2
    98 000000A8 9D                  <3>  popf
    99 000000A9 61                  <3>  popa
   160 000000AA 89D7                <2>  mov edi,edx
   161 000000AC 31D2                <2>  xor edx,edx
   162 000000AE 89D8                <2>  mov eax,ebx
   163 000000B0 F7F6                <2>  div esi
   164 000000B2 83F801              <2>  cmp eax,1
   165 000000B5 7404                <2>  je %%m4
   166 000000B7 89C3                <2>  mov ebx,eax
   167 000000B9 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 000000BB 89FA                <2>  mov edx,edi
   170 000000BD 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 000000C0 60                  <3>  pusha
    69 000000C1 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 000000C2 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000000C4 83EC02              <3>  sub esp, 2
    94 000000C7 89E7                <3>  mov edi, esp
    95 000000C9 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000000CB 52                  <5>  push edx
    16 000000CC 51                  <5>  push ecx
    17 000000CD 53                  <5>  push ebx
    18 000000CE 6A04                <5>  push %1
    19 000000D0 6A01                <5>  push %2
    20 000000D2 57                  <5>  push %3
    21 000000D3 6A01                <5>  push %4
    22 000000D5 5A                  <5>  pop edx
    23 000000D6 59                  <5>  pop ecx
    24 000000D7 5B                  <5>  pop ebx
    25 000000D8 58                  <5>  pop eax
    26 000000D9 CD80                <5>  int 0x80
    27 000000DB 5B                  <5>  pop ebx
    28 000000DC 59                  <5>  pop ecx
    29 000000DD 5A                  <5>  pop edx
    97 000000DE 83C402              <3>  add esp, 2
    98 000000E1 9D                  <3>  popf
    99 000000E2 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 000000E3 9D                  <2> popf
   175 000000E4 61                  <2> popa
   189 000000E5 9D                  <1> popf
   190 000000E6 61                  <1> popa
    21                                      PUTCHAR 10
    68 000000E7 60                  <1>  pusha
    69 000000E8 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 000000E9 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 000000EB 83EC02              <1>  sub esp, 2
    94 000000EE 89E7                <1>  mov edi, esp
    95 000000F0 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000000F2 52                  <3>  push edx
    16 000000F3 51                  <3>  push ecx
    17 000000F4 53                  <3>  push ebx
    18 000000F5 6A04                <3>  push %1
    19 000000F7 6A01                <3>  push %2
    20 000000F9 57                  <3>  push %3
    21 000000FA 6A01                <3>  push %4
    22 000000FC 5A                  <3>  pop edx
    23 000000FD 59                  <3>  pop ecx
    24 000000FE 5B                  <3>  pop ebx
    25 000000FF 58                  <3>  pop eax
    26 00000100 CD80                <3>  int 0x80
    27 00000102 5B                  <3>  pop ebx
    28 00000103 59                  <3>  pop ecx
    29 00000104 5A                  <3>  pop edx
    97 00000105 83C402              <1>  add esp, 2
    98 00000108 9D                  <1>  popf
    99 00000109 61                  <1>  popa
    22                                  
    23                                      PRINT "a = "
    56 0000010A 60                  <1>  pusha
    57 0000010B 9C                  <1>  pushf
    58 0000010C EB04                <1>  jmp %%astr
    59 0000010E 61203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@21.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000112 52                  <3>  push edx
    16 00000113 51                  <3>  push ecx
    17 00000114 53                  <3>  push ebx
    18 00000115 6A04                <3>  push %1
    19 00000117 6A01                <3>  push %2
    20 00000119 68[0E010000]        <3>  push %3
    21 0000011E 6A04                <3>  push %4
    22 00000120 5A                  <3>  pop edx
    23 00000121 59                  <3>  pop ecx
    24 00000122 5B                  <3>  pop ebx
    25 00000123 58                  <3>  pop eax
    26 00000124 CD80                <3>  int 0x80
    27 00000126 5B                  <3>  pop ebx
    28 00000127 59                  <3>  pop ecx
    29 00000128 5A                  <3>  pop edx
    62 00000129 9D                  <1>  popf
    63 0000012A 61                  <1>  popa
    24 0000012B 0FBE05[01000000]            movsx eax, byte [a]
    25                                      SIGNINT eax
   179 00000132 60                  <1> pusha
   180 00000133 9C                  <1> pushf
   181 00000134 50                  <1> push dword %1
   182 00000135 58                  <1> pop eax
   183 00000136 83F800              <1>  cmp eax,0
   184 00000139 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 0000013B 60                  <2>  pusha
    69 0000013C 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 0000013D B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000013F 83EC02              <2>  sub esp, 2
    94 00000142 89E7                <2>  mov edi, esp
    95 00000144 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000146 52                  <4>  push edx
    16 00000147 51                  <4>  push ecx
    17 00000148 53                  <4>  push ebx
    18 00000149 6A04                <4>  push %1
    19 0000014B 6A01                <4>  push %2
    20 0000014D 57                  <4>  push %3
    21 0000014E 6A01                <4>  push %4
    22 00000150 5A                  <4>  pop edx
    23 00000151 59                  <4>  pop ecx
    24 00000152 5B                  <4>  pop ebx
    25 00000153 58                  <4>  pop eax
    26 00000154 CD80                <4>  int 0x80
    27 00000156 5B                  <4>  pop ebx
    28 00000157 59                  <4>  pop ecx
    29 00000158 5A                  <4>  pop edx
    97 00000159 83C402              <2>  add esp, 2
    98 0000015C 9D                  <2>  popf
    99 0000015D 61                  <2>  popa
   186 0000015E F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000160 60                  <2> pusha
   130 00000161 9C                  <2> pushf
   131 00000162 50                  <2> push dword %1
   132 00000163 58                  <2> pop eax
   133 00000164 89C7                <2> mov edi,eax
   134 00000166 BE0A000000          <2> mov esi,10
   135 0000016B 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 0000016D 31D2                <2>  xor edx,edx
   138 0000016F F7F6                <2>  div esi
   139 00000171 43                  <2>  inc ebx
   140 00000172 83F800              <2>  cmp eax,0
   141 00000175 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000177 B801000000          <2>  mov eax,1
   144 0000017C 89D9                <2>  mov ecx,ebx
   145 0000017E 49                  <2>  dec ecx
   146                              <2> 
   147 0000017F 83F900              <2>  cmp ecx,0
   148 00000182 7441                <2>  je %%m4
   149 00000184 F7E6                <2> %%m2: mul esi
   150 00000186 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000188 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 0000018A 89F8                <2>  mov eax,edi
   156 0000018C 31D2                <2>  xor edx,edx
   157 0000018E F7F3                <2>  div ebx
   158 00000190 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000192 60                  <3>  pusha
    69 00000193 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000194 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000195 83EC02              <3>  sub esp, 2
    94 00000198 89E7                <3>  mov edi, esp
    95 0000019A 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 0000019C 52                  <5>  push edx
    16 0000019D 51                  <5>  push ecx
    17 0000019E 53                  <5>  push ebx
    18 0000019F 6A04                <5>  push %1
    19 000001A1 6A01                <5>  push %2
    20 000001A3 57                  <5>  push %3
    21 000001A4 6A01                <5>  push %4
    22 000001A6 5A                  <5>  pop edx
    23 000001A7 59                  <5>  pop ecx
    24 000001A8 5B                  <5>  pop ebx
    25 000001A9 58                  <5>  pop eax
    26 000001AA CD80                <5>  int 0x80
    27 000001AC 5B                  <5>  pop ebx
    28 000001AD 59                  <5>  pop ecx
    29 000001AE 5A                  <5>  pop edx
    97 000001AF 83C402              <3>  add esp, 2
    98 000001B2 9D                  <3>  popf
    99 000001B3 61                  <3>  popa
   160 000001B4 89D7                <2>  mov edi,edx
   161 000001B6 31D2                <2>  xor edx,edx
   162 000001B8 89D8                <2>  mov eax,ebx
   163 000001BA F7F6                <2>  div esi
   164 000001BC 83F801              <2>  cmp eax,1
   165 000001BF 7404                <2>  je %%m4
   166 000001C1 89C3                <2>  mov ebx,eax
   167 000001C3 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 000001C5 89FA                <2>  mov edx,edi
   170 000001C7 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 000001CA 60                  <3>  pusha
    69 000001CB 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 000001CC 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000001CE 83EC02              <3>  sub esp, 2
    94 000001D1 89E7                <3>  mov edi, esp
    95 000001D3 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000001D5 52                  <5>  push edx
    16 000001D6 51                  <5>  push ecx
    17 000001D7 53                  <5>  push ebx
    18 000001D8 6A04                <5>  push %1
    19 000001DA 6A01                <5>  push %2
    20 000001DC 57                  <5>  push %3
    21 000001DD 6A01                <5>  push %4
    22 000001DF 5A                  <5>  pop edx
    23 000001E0 59                  <5>  pop ecx
    24 000001E1 5B                  <5>  pop ebx
    25 000001E2 58                  <5>  pop eax
    26 000001E3 CD80                <5>  int 0x80
    27 000001E5 5B                  <5>  pop ebx
    28 000001E6 59                  <5>  pop ecx
    29 000001E7 5A                  <5>  pop edx
    97 000001E8 83C402              <3>  add esp, 2
    98 000001EB 9D                  <3>  popf
    99 000001EC 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 000001ED 9D                  <2> popf
   175 000001EE 61                  <2> popa
   189 000001EF 9D                  <1> popf
   190 000001F0 61                  <1> popa
    26                                      PUTCHAR 10
    68 000001F1 60                  <1>  pusha
    69 000001F2 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 000001F3 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 000001F5 83EC02              <1>  sub esp, 2
    94 000001F8 89E7                <1>  mov edi, esp
    95 000001FA 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000001FC 52                  <3>  push edx
    16 000001FD 51                  <3>  push ecx
    17 000001FE 53                  <3>  push ebx
    18 000001FF 6A04                <3>  push %1
    19 00000201 6A01                <3>  push %2
    20 00000203 57                  <3>  push %3
    21 00000204 6A01                <3>  push %4
    22 00000206 5A                  <3>  pop edx
    23 00000207 59                  <3>  pop ecx
    24 00000208 5B                  <3>  pop ebx
    25 00000209 58                  <3>  pop eax
    26 0000020A CD80                <3>  int 0x80
    27 0000020C 5B                  <3>  pop ebx
    28 0000020D 59                  <3>  pop ecx
    29 0000020E 5A                  <3>  pop edx
    97 0000020F 83C402              <1>  add esp, 2
    98 00000212 9D                  <1>  popf
    99 00000213 61                  <1>  popa
    27                                  
    28 00000214 0FBE05[00000000]            movsx eax, byte [x]
    29 0000021B F7E8                        imul eax
    30                                      PRINT "x^2 = "
    56 0000021D 60                  <1>  pusha
    57 0000021E 9C                  <1>  pushf
    58 0000021F EB06                <1>  jmp %%astr
    59 00000221 785E32203D20        <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@38.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000227 52                  <3>  push edx
    16 00000228 51                  <3>  push ecx
    17 00000229 53                  <3>  push ebx
    18 0000022A 6A04                <3>  push %1
    19 0000022C 6A01                <3>  push %2
    20 0000022E 68[21020000]        <3>  push %3
    21 00000233 6A06                <3>  push %4
    22 00000235 5A                  <3>  pop edx
    23 00000236 59                  <3>  pop ecx
    24 00000237 5B                  <3>  pop ebx
    25 00000238 58                  <3>  pop eax
    26 00000239 CD80                <3>  int 0x80
    27 0000023B 5B                  <3>  pop ebx
    28 0000023C 59                  <3>  pop ecx
    29 0000023D 5A                  <3>  pop edx
    62 0000023E 9D                  <1>  popf
    63 0000023F 61                  <1>  popa
    31                                      SIGNINT eax
   179 00000240 60                  <1> pusha
   180 00000241 9C                  <1> pushf
   181 00000242 50                  <1> push dword %1
   182 00000243 58                  <1> pop eax
   183 00000244 83F800              <1>  cmp eax,0
   184 00000247 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000249 60                  <2>  pusha
    69 0000024A 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 0000024B B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000024D 83EC02              <2>  sub esp, 2
    94 00000250 89E7                <2>  mov edi, esp
    95 00000252 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000254 52                  <4>  push edx
    16 00000255 51                  <4>  push ecx
    17 00000256 53                  <4>  push ebx
    18 00000257 6A04                <4>  push %1
    19 00000259 6A01                <4>  push %2
    20 0000025B 57                  <4>  push %3
    21 0000025C 6A01                <4>  push %4
    22 0000025E 5A                  <4>  pop edx
    23 0000025F 59                  <4>  pop ecx
    24 00000260 5B                  <4>  pop ebx
    25 00000261 58                  <4>  pop eax
    26 00000262 CD80                <4>  int 0x80
    27 00000264 5B                  <4>  pop ebx
    28 00000265 59                  <4>  pop ecx
    29 00000266 5A                  <4>  pop edx
    97 00000267 83C402              <2>  add esp, 2
    98 0000026A 9D                  <2>  popf
    99 0000026B 61                  <2>  popa
   186 0000026C F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 0000026E 60                  <2> pusha
   130 0000026F 9C                  <2> pushf
   131 00000270 50                  <2> push dword %1
   132 00000271 58                  <2> pop eax
   133 00000272 89C7                <2> mov edi,eax
   134 00000274 BE0A000000          <2> mov esi,10
   135 00000279 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 0000027B 31D2                <2>  xor edx,edx
   138 0000027D F7F6                <2>  div esi
   139 0000027F 43                  <2>  inc ebx
   140 00000280 83F800              <2>  cmp eax,0
   141 00000283 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000285 B801000000          <2>  mov eax,1
   144 0000028A 89D9                <2>  mov ecx,ebx
   145 0000028C 49                  <2>  dec ecx
   146                              <2> 
   147 0000028D 83F900              <2>  cmp ecx,0
   148 00000290 7441                <2>  je %%m4
   149 00000292 F7E6                <2> %%m2: mul esi
   150 00000294 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000296 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000298 89F8                <2>  mov eax,edi
   156 0000029A 31D2                <2>  xor edx,edx
   157 0000029C F7F3                <2>  div ebx
   158 0000029E 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 000002A0 60                  <3>  pusha
    69 000002A1 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 000002A2 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000002A3 83EC02              <3>  sub esp, 2
    94 000002A6 89E7                <3>  mov edi, esp
    95 000002A8 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000002AA 52                  <5>  push edx
    16 000002AB 51                  <5>  push ecx
    17 000002AC 53                  <5>  push ebx
    18 000002AD 6A04                <5>  push %1
    19 000002AF 6A01                <5>  push %2
    20 000002B1 57                  <5>  push %3
    21 000002B2 6A01                <5>  push %4
    22 000002B4 5A                  <5>  pop edx
    23 000002B5 59                  <5>  pop ecx
    24 000002B6 5B                  <5>  pop ebx
    25 000002B7 58                  <5>  pop eax
    26 000002B8 CD80                <5>  int 0x80
    27 000002BA 5B                  <5>  pop ebx
    28 000002BB 59                  <5>  pop ecx
    29 000002BC 5A                  <5>  pop edx
    97 000002BD 83C402              <3>  add esp, 2
    98 000002C0 9D                  <3>  popf
    99 000002C1 61                  <3>  popa
   160 000002C2 89D7                <2>  mov edi,edx
   161 000002C4 31D2                <2>  xor edx,edx
   162 000002C6 89D8                <2>  mov eax,ebx
   163 000002C8 F7F6                <2>  div esi
   164 000002CA 83F801              <2>  cmp eax,1
   165 000002CD 7404                <2>  je %%m4
   166 000002CF 89C3                <2>  mov ebx,eax
   167 000002D1 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 000002D3 89FA                <2>  mov edx,edi
   170 000002D5 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 000002D8 60                  <3>  pusha
    69 000002D9 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 000002DA 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000002DC 83EC02              <3>  sub esp, 2
    94 000002DF 89E7                <3>  mov edi, esp
    95 000002E1 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000002E3 52                  <5>  push edx
    16 000002E4 51                  <5>  push ecx
    17 000002E5 53                  <5>  push ebx
    18 000002E6 6A04                <5>  push %1
    19 000002E8 6A01                <5>  push %2
    20 000002EA 57                  <5>  push %3
    21 000002EB 6A01                <5>  push %4
    22 000002ED 5A                  <5>  pop edx
    23 000002EE 59                  <5>  pop ecx
    24 000002EF 5B                  <5>  pop ebx
    25 000002F0 58                  <5>  pop eax
    26 000002F1 CD80                <5>  int 0x80
    27 000002F3 5B                  <5>  pop ebx
    28 000002F4 59                  <5>  pop ecx
    29 000002F5 5A                  <5>  pop edx
    97 000002F6 83C402              <3>  add esp, 2
    98 000002F9 9D                  <3>  popf
    99 000002FA 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 000002FB 9D                  <2> popf
   175 000002FC 61                  <2> popa
   189 000002FD 9D                  <1> popf
   190 000002FE 61                  <1> popa
    32                                      PUTCHAR 10
    68 000002FF 60                  <1>  pusha
    69 00000300 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000301 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000303 83EC02              <1>  sub esp, 2
    94 00000306 89E7                <1>  mov edi, esp
    95 00000308 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000030A 52                  <3>  push edx
    16 0000030B 51                  <3>  push ecx
    17 0000030C 53                  <3>  push ebx
    18 0000030D 6A04                <3>  push %1
    19 0000030F 6A01                <3>  push %2
    20 00000311 57                  <3>  push %3
    21 00000312 6A01                <3>  push %4
    22 00000314 5A                  <3>  pop edx
    23 00000315 59                  <3>  pop ecx
    24 00000316 5B                  <3>  pop ebx
    25 00000317 58                  <3>  pop eax
    26 00000318 CD80                <3>  int 0x80
    27 0000031A 5B                  <3>  pop ebx
    28 0000031B 59                  <3>  pop ecx
    29 0000031C 5A                  <3>  pop edx
    97 0000031D 83C402              <1>  add esp, 2
    98 00000320 9D                  <1>  popf
    99 00000321 61                  <1>  popa
    33                                  
    34 00000322 BB0A000000                  mov ebx, 10
    35 00000327 F7EB                        imul ebx
    36 00000329 83C005                      add eax, 5
    37                                      PRINT "10 * x^2 + 5 = "
    56 0000032C 60                  <1>  pusha
    57 0000032D 9C                  <1>  pushf
    58 0000032E EB0F                <1>  jmp %%astr
    59 00000330 3130202A20785E3220- <1> %%str db %1
    59 00000339 2B2035203D20        <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@55.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000033F 52                  <3>  push edx
    16 00000340 51                  <3>  push ecx
    17 00000341 53                  <3>  push ebx
    18 00000342 6A04                <3>  push %1
    19 00000344 6A01                <3>  push %2
    20 00000346 68[30030000]        <3>  push %3
    21 0000034B 6A0F                <3>  push %4
    22 0000034D 5A                  <3>  pop edx
    23 0000034E 59                  <3>  pop ecx
    24 0000034F 5B                  <3>  pop ebx
    25 00000350 58                  <3>  pop eax
    26 00000351 CD80                <3>  int 0x80
    27 00000353 5B                  <3>  pop ebx
    28 00000354 59                  <3>  pop ecx
    29 00000355 5A                  <3>  pop edx
    62 00000356 9D                  <1>  popf
    63 00000357 61                  <1>  popa
    38                                      SIGNINT eax
   179 00000358 60                  <1> pusha
   180 00000359 9C                  <1> pushf
   181 0000035A 50                  <1> push dword %1
   182 0000035B 58                  <1> pop eax
   183 0000035C 83F800              <1>  cmp eax,0
   184 0000035F 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000361 60                  <2>  pusha
    69 00000362 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000363 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000365 83EC02              <2>  sub esp, 2
    94 00000368 89E7                <2>  mov edi, esp
    95 0000036A 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000036C 52                  <4>  push edx
    16 0000036D 51                  <4>  push ecx
    17 0000036E 53                  <4>  push ebx
    18 0000036F 6A04                <4>  push %1
    19 00000371 6A01                <4>  push %2
    20 00000373 57                  <4>  push %3
    21 00000374 6A01                <4>  push %4
    22 00000376 5A                  <4>  pop edx
    23 00000377 59                  <4>  pop ecx
    24 00000378 5B                  <4>  pop ebx
    25 00000379 58                  <4>  pop eax
    26 0000037A CD80                <4>  int 0x80
    27 0000037C 5B                  <4>  pop ebx
    28 0000037D 59                  <4>  pop ecx
    29 0000037E 5A                  <4>  pop edx
    97 0000037F 83C402              <2>  add esp, 2
    98 00000382 9D                  <2>  popf
    99 00000383 61                  <2>  popa
   186 00000384 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000386 60                  <2> pusha
   130 00000387 9C                  <2> pushf
   131 00000388 50                  <2> push dword %1
   132 00000389 58                  <2> pop eax
   133 0000038A 89C7                <2> mov edi,eax
   134 0000038C BE0A000000          <2> mov esi,10
   135 00000391 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000393 31D2                <2>  xor edx,edx
   138 00000395 F7F6                <2>  div esi
   139 00000397 43                  <2>  inc ebx
   140 00000398 83F800              <2>  cmp eax,0
   141 0000039B 75F6                <2>  jne %%m1
   142                              <2> 
   143 0000039D B801000000          <2>  mov eax,1
   144 000003A2 89D9                <2>  mov ecx,ebx
   145 000003A4 49                  <2>  dec ecx
   146                              <2> 
   147 000003A5 83F900              <2>  cmp ecx,0
   148 000003A8 7441                <2>  je %%m4
   149 000003AA F7E6                <2> %%m2: mul esi
   150 000003AC E2FC                <2>  loop %%m2
   151                              <2> 
   152 000003AE 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 000003B0 89F8                <2>  mov eax,edi
   156 000003B2 31D2                <2>  xor edx,edx
   157 000003B4 F7F3                <2>  div ebx
   158 000003B6 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 000003B8 60                  <3>  pusha
    69 000003B9 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 000003BA 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000003BB 83EC02              <3>  sub esp, 2
    94 000003BE 89E7                <3>  mov edi, esp
    95 000003C0 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000003C2 52                  <5>  push edx
    16 000003C3 51                  <5>  push ecx
    17 000003C4 53                  <5>  push ebx
    18 000003C5 6A04                <5>  push %1
    19 000003C7 6A01                <5>  push %2
    20 000003C9 57                  <5>  push %3
    21 000003CA 6A01                <5>  push %4
    22 000003CC 5A                  <5>  pop edx
    23 000003CD 59                  <5>  pop ecx
    24 000003CE 5B                  <5>  pop ebx
    25 000003CF 58                  <5>  pop eax
    26 000003D0 CD80                <5>  int 0x80
    27 000003D2 5B                  <5>  pop ebx
    28 000003D3 59                  <5>  pop ecx
    29 000003D4 5A                  <5>  pop edx
    97 000003D5 83C402              <3>  add esp, 2
    98 000003D8 9D                  <3>  popf
    99 000003D9 61                  <3>  popa
   160 000003DA 89D7                <2>  mov edi,edx
   161 000003DC 31D2                <2>  xor edx,edx
   162 000003DE 89D8                <2>  mov eax,ebx
   163 000003E0 F7F6                <2>  div esi
   164 000003E2 83F801              <2>  cmp eax,1
   165 000003E5 7404                <2>  je %%m4
   166 000003E7 89C3                <2>  mov ebx,eax
   167 000003E9 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 000003EB 89FA                <2>  mov edx,edi
   170 000003ED 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 000003F0 60                  <3>  pusha
    69 000003F1 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 000003F2 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000003F4 83EC02              <3>  sub esp, 2
    94 000003F7 89E7                <3>  mov edi, esp
    95 000003F9 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000003FB 52                  <5>  push edx
    16 000003FC 51                  <5>  push ecx
    17 000003FD 53                  <5>  push ebx
    18 000003FE 6A04                <5>  push %1
    19 00000400 6A01                <5>  push %2
    20 00000402 57                  <5>  push %3
    21 00000403 6A01                <5>  push %4
    22 00000405 5A                  <5>  pop edx
    23 00000406 59                  <5>  pop ecx
    24 00000407 5B                  <5>  pop ebx
    25 00000408 58                  <5>  pop eax
    26 00000409 CD80                <5>  int 0x80
    27 0000040B 5B                  <5>  pop ebx
    28 0000040C 59                  <5>  pop ecx
    29 0000040D 5A                  <5>  pop edx
    97 0000040E 83C402              <3>  add esp, 2
    98 00000411 9D                  <3>  popf
    99 00000412 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000413 9D                  <2> popf
   175 00000414 61                  <2> popa
   189 00000415 9D                  <1> popf
   190 00000416 61                  <1> popa
    39                                      PUTCHAR 10
    68 00000417 60                  <1>  pusha
    69 00000418 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000419 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 0000041B 83EC02              <1>  sub esp, 2
    94 0000041E 89E7                <1>  mov edi, esp
    95 00000420 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000422 52                  <3>  push edx
    16 00000423 51                  <3>  push ecx
    17 00000424 53                  <3>  push ebx
    18 00000425 6A04                <3>  push %1
    19 00000427 6A01                <3>  push %2
    20 00000429 57                  <3>  push %3
    21 0000042A 6A01                <3>  push %4
    22 0000042C 5A                  <3>  pop edx
    23 0000042D 59                  <3>  pop ecx
    24 0000042E 5B                  <3>  pop ebx
    25 0000042F 58                  <3>  pop eax
    26 00000430 CD80                <3>  int 0x80
    27 00000432 5B                  <3>  pop ebx
    28 00000433 59                  <3>  pop ecx
    29 00000434 5A                  <3>  pop edx
    97 00000435 83C402              <1>  add esp, 2
    98 00000438 9D                  <1>  popf
    99 00000439 61                  <1>  popa
    40                                  
    41 0000043A 89C3                        mov ebx, eax
    42                                  
    43 0000043C 0FBE05[00000000]            movsx eax, byte [x]
    44 00000443 F7E8                        imul eax
    45 00000445 0FBE15[00000000]            movsx edx, byte [x]
    46 0000044C F7EA                        imul edx
    47 0000044E F7D8                        neg eax
    48                                      PRINT "-x^3 = "
    56 00000450 60                  <1>  pusha
    57 00000451 9C                  <1>  pushf
    58 00000452 EB07                <1>  jmp %%astr
    59 00000454 2D785E33203D20      <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@72.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000045B 52                  <3>  push edx
    16 0000045C 51                  <3>  push ecx
    17 0000045D 53                  <3>  push ebx
    18 0000045E 6A04                <3>  push %1
    19 00000460 6A01                <3>  push %2
    20 00000462 68[54040000]        <3>  push %3
    21 00000467 6A07                <3>  push %4
    22 00000469 5A                  <3>  pop edx
    23 0000046A 59                  <3>  pop ecx
    24 0000046B 5B                  <3>  pop ebx
    25 0000046C 58                  <3>  pop eax
    26 0000046D CD80                <3>  int 0x80
    27 0000046F 5B                  <3>  pop ebx
    28 00000470 59                  <3>  pop ecx
    29 00000471 5A                  <3>  pop edx
    62 00000472 9D                  <1>  popf
    63 00000473 61                  <1>  popa
    49                                      SIGNINT eax
   179 00000474 60                  <1> pusha
   180 00000475 9C                  <1> pushf
   181 00000476 50                  <1> push dword %1
   182 00000477 58                  <1> pop eax
   183 00000478 83F800              <1>  cmp eax,0
   184 0000047B 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 0000047D 60                  <2>  pusha
    69 0000047E 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 0000047F B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000481 83EC02              <2>  sub esp, 2
    94 00000484 89E7                <2>  mov edi, esp
    95 00000486 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000488 52                  <4>  push edx
    16 00000489 51                  <4>  push ecx
    17 0000048A 53                  <4>  push ebx
    18 0000048B 6A04                <4>  push %1
    19 0000048D 6A01                <4>  push %2
    20 0000048F 57                  <4>  push %3
    21 00000490 6A01                <4>  push %4
    22 00000492 5A                  <4>  pop edx
    23 00000493 59                  <4>  pop ecx
    24 00000494 5B                  <4>  pop ebx
    25 00000495 58                  <4>  pop eax
    26 00000496 CD80                <4>  int 0x80
    27 00000498 5B                  <4>  pop ebx
    28 00000499 59                  <4>  pop ecx
    29 0000049A 5A                  <4>  pop edx
    97 0000049B 83C402              <2>  add esp, 2
    98 0000049E 9D                  <2>  popf
    99 0000049F 61                  <2>  popa
   186 000004A0 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 000004A2 60                  <2> pusha
   130 000004A3 9C                  <2> pushf
   131 000004A4 50                  <2> push dword %1
   132 000004A5 58                  <2> pop eax
   133 000004A6 89C7                <2> mov edi,eax
   134 000004A8 BE0A000000          <2> mov esi,10
   135 000004AD 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 000004AF 31D2                <2>  xor edx,edx
   138 000004B1 F7F6                <2>  div esi
   139 000004B3 43                  <2>  inc ebx
   140 000004B4 83F800              <2>  cmp eax,0
   141 000004B7 75F6                <2>  jne %%m1
   142                              <2> 
   143 000004B9 B801000000          <2>  mov eax,1
   144 000004BE 89D9                <2>  mov ecx,ebx
   145 000004C0 49                  <2>  dec ecx
   146                              <2> 
   147 000004C1 83F900              <2>  cmp ecx,0
   148 000004C4 7441                <2>  je %%m4
   149 000004C6 F7E6                <2> %%m2: mul esi
   150 000004C8 E2FC                <2>  loop %%m2
   151                              <2> 
   152 000004CA 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 000004CC 89F8                <2>  mov eax,edi
   156 000004CE 31D2                <2>  xor edx,edx
   157 000004D0 F7F3                <2>  div ebx
   158 000004D2 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 000004D4 60                  <3>  pusha
    69 000004D5 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 000004D6 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000004D7 83EC02              <3>  sub esp, 2
    94 000004DA 89E7                <3>  mov edi, esp
    95 000004DC 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000004DE 52                  <5>  push edx
    16 000004DF 51                  <5>  push ecx
    17 000004E0 53                  <5>  push ebx
    18 000004E1 6A04                <5>  push %1
    19 000004E3 6A01                <5>  push %2
    20 000004E5 57                  <5>  push %3
    21 000004E6 6A01                <5>  push %4
    22 000004E8 5A                  <5>  pop edx
    23 000004E9 59                  <5>  pop ecx
    24 000004EA 5B                  <5>  pop ebx
    25 000004EB 58                  <5>  pop eax
    26 000004EC CD80                <5>  int 0x80
    27 000004EE 5B                  <5>  pop ebx
    28 000004EF 59                  <5>  pop ecx
    29 000004F0 5A                  <5>  pop edx
    97 000004F1 83C402              <3>  add esp, 2
    98 000004F4 9D                  <3>  popf
    99 000004F5 61                  <3>  popa
   160 000004F6 89D7                <2>  mov edi,edx
   161 000004F8 31D2                <2>  xor edx,edx
   162 000004FA 89D8                <2>  mov eax,ebx
   163 000004FC F7F6                <2>  div esi
   164 000004FE 83F801              <2>  cmp eax,1
   165 00000501 7404                <2>  je %%m4
   166 00000503 89C3                <2>  mov ebx,eax
   167 00000505 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000507 89FA                <2>  mov edx,edi
   170 00000509 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 0000050C 60                  <3>  pusha
    69 0000050D 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 0000050E 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000510 83EC02              <3>  sub esp, 2
    94 00000513 89E7                <3>  mov edi, esp
    95 00000515 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000517 52                  <5>  push edx
    16 00000518 51                  <5>  push ecx
    17 00000519 53                  <5>  push ebx
    18 0000051A 6A04                <5>  push %1
    19 0000051C 6A01                <5>  push %2
    20 0000051E 57                  <5>  push %3
    21 0000051F 6A01                <5>  push %4
    22 00000521 5A                  <5>  pop edx
    23 00000522 59                  <5>  pop ecx
    24 00000523 5B                  <5>  pop ebx
    25 00000524 58                  <5>  pop eax
    26 00000525 CD80                <5>  int 0x80
    27 00000527 5B                  <5>  pop ebx
    28 00000528 59                  <5>  pop ecx
    29 00000529 5A                  <5>  pop edx
    97 0000052A 83C402              <3>  add esp, 2
    98 0000052D 9D                  <3>  popf
    99 0000052E 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 0000052F 9D                  <2> popf
   175 00000530 61                  <2> popa
   189 00000531 9D                  <1> popf
   190 00000532 61                  <1> popa
    50                                      PUTCHAR 10
    68 00000533 60                  <1>  pusha
    69 00000534 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000535 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000537 83EC02              <1>  sub esp, 2
    94 0000053A 89E7                <1>  mov edi, esp
    95 0000053C 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000053E 52                  <3>  push edx
    16 0000053F 51                  <3>  push ecx
    17 00000540 53                  <3>  push ebx
    18 00000541 6A04                <3>  push %1
    19 00000543 6A01                <3>  push %2
    20 00000545 57                  <3>  push %3
    21 00000546 6A01                <3>  push %4
    22 00000548 5A                  <3>  pop edx
    23 00000549 59                  <3>  pop ecx
    24 0000054A 5B                  <3>  pop ebx
    25 0000054B 58                  <3>  pop eax
    26 0000054C CD80                <3>  int 0x80
    27 0000054E 5B                  <3>  pop ebx
    28 0000054F 59                  <3>  pop ecx
    29 00000550 5A                  <3>  pop edx
    97 00000551 83C402              <1>  add esp, 2
    98 00000554 9D                  <1>  popf
    99 00000555 61                  <1>  popa
    51                                  
    52 00000556 29D8                        sub eax, ebx
    53                                      PRINT "-x^3 - (10x^2 + 5) = "
    56 00000558 60                  <1>  pusha
    57 00000559 9C                  <1>  pushf
    58 0000055A EB15                <1>  jmp %%astr
    59 0000055C 2D785E33202D202831- <1> %%str db %1
    59 00000565 30785E32202B203529- <1>
    59 0000056E 203D20              <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@89.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000571 52                  <3>  push edx
    16 00000572 51                  <3>  push ecx
    17 00000573 53                  <3>  push ebx
    18 00000574 6A04                <3>  push %1
    19 00000576 6A01                <3>  push %2
    20 00000578 68[5C050000]        <3>  push %3
    21 0000057D 6A15                <3>  push %4
    22 0000057F 5A                  <3>  pop edx
    23 00000580 59                  <3>  pop ecx
    24 00000581 5B                  <3>  pop ebx
    25 00000582 58                  <3>  pop eax
    26 00000583 CD80                <3>  int 0x80
    27 00000585 5B                  <3>  pop ebx
    28 00000586 59                  <3>  pop ecx
    29 00000587 5A                  <3>  pop edx
    62 00000588 9D                  <1>  popf
    63 00000589 61                  <1>  popa
    54                                      SIGNINT eax
   179 0000058A 60                  <1> pusha
   180 0000058B 9C                  <1> pushf
   181 0000058C 50                  <1> push dword %1
   182 0000058D 58                  <1> pop eax
   183 0000058E 83F800              <1>  cmp eax,0
   184 00000591 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000593 60                  <2>  pusha
    69 00000594 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000595 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000597 83EC02              <2>  sub esp, 2
    94 0000059A 89E7                <2>  mov edi, esp
    95 0000059C 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000059E 52                  <4>  push edx
    16 0000059F 51                  <4>  push ecx
    17 000005A0 53                  <4>  push ebx
    18 000005A1 6A04                <4>  push %1
    19 000005A3 6A01                <4>  push %2
    20 000005A5 57                  <4>  push %3
    21 000005A6 6A01                <4>  push %4
    22 000005A8 5A                  <4>  pop edx
    23 000005A9 59                  <4>  pop ecx
    24 000005AA 5B                  <4>  pop ebx
    25 000005AB 58                  <4>  pop eax
    26 000005AC CD80                <4>  int 0x80
    27 000005AE 5B                  <4>  pop ebx
    28 000005AF 59                  <4>  pop ecx
    29 000005B0 5A                  <4>  pop edx
    97 000005B1 83C402              <2>  add esp, 2
    98 000005B4 9D                  <2>  popf
    99 000005B5 61                  <2>  popa
   186 000005B6 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 000005B8 60                  <2> pusha
   130 000005B9 9C                  <2> pushf
   131 000005BA 50                  <2> push dword %1
   132 000005BB 58                  <2> pop eax
   133 000005BC 89C7                <2> mov edi,eax
   134 000005BE BE0A000000          <2> mov esi,10
   135 000005C3 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 000005C5 31D2                <2>  xor edx,edx
   138 000005C7 F7F6                <2>  div esi
   139 000005C9 43                  <2>  inc ebx
   140 000005CA 83F800              <2>  cmp eax,0
   141 000005CD 75F6                <2>  jne %%m1
   142                              <2> 
   143 000005CF B801000000          <2>  mov eax,1
   144 000005D4 89D9                <2>  mov ecx,ebx
   145 000005D6 49                  <2>  dec ecx
   146                              <2> 
   147 000005D7 83F900              <2>  cmp ecx,0
   148 000005DA 7441                <2>  je %%m4
   149 000005DC F7E6                <2> %%m2: mul esi
   150 000005DE E2FC                <2>  loop %%m2
   151                              <2> 
   152 000005E0 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 000005E2 89F8                <2>  mov eax,edi
   156 000005E4 31D2                <2>  xor edx,edx
   157 000005E6 F7F3                <2>  div ebx
   158 000005E8 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 000005EA 60                  <3>  pusha
    69 000005EB 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 000005EC 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000005ED 83EC02              <3>  sub esp, 2
    94 000005F0 89E7                <3>  mov edi, esp
    95 000005F2 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000005F4 52                  <5>  push edx
    16 000005F5 51                  <5>  push ecx
    17 000005F6 53                  <5>  push ebx
    18 000005F7 6A04                <5>  push %1
    19 000005F9 6A01                <5>  push %2
    20 000005FB 57                  <5>  push %3
    21 000005FC 6A01                <5>  push %4
    22 000005FE 5A                  <5>  pop edx
    23 000005FF 59                  <5>  pop ecx
    24 00000600 5B                  <5>  pop ebx
    25 00000601 58                  <5>  pop eax
    26 00000602 CD80                <5>  int 0x80
    27 00000604 5B                  <5>  pop ebx
    28 00000605 59                  <5>  pop ecx
    29 00000606 5A                  <5>  pop edx
    97 00000607 83C402              <3>  add esp, 2
    98 0000060A 9D                  <3>  popf
    99 0000060B 61                  <3>  popa
   160 0000060C 89D7                <2>  mov edi,edx
   161 0000060E 31D2                <2>  xor edx,edx
   162 00000610 89D8                <2>  mov eax,ebx
   163 00000612 F7F6                <2>  div esi
   164 00000614 83F801              <2>  cmp eax,1
   165 00000617 7404                <2>  je %%m4
   166 00000619 89C3                <2>  mov ebx,eax
   167 0000061B EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 0000061D 89FA                <2>  mov edx,edi
   170 0000061F 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000622 60                  <3>  pusha
    69 00000623 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000624 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000626 83EC02              <3>  sub esp, 2
    94 00000629 89E7                <3>  mov edi, esp
    95 0000062B 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 0000062D 52                  <5>  push edx
    16 0000062E 51                  <5>  push ecx
    17 0000062F 53                  <5>  push ebx
    18 00000630 6A04                <5>  push %1
    19 00000632 6A01                <5>  push %2
    20 00000634 57                  <5>  push %3
    21 00000635 6A01                <5>  push %4
    22 00000637 5A                  <5>  pop edx
    23 00000638 59                  <5>  pop ecx
    24 00000639 5B                  <5>  pop ebx
    25 0000063A 58                  <5>  pop eax
    26 0000063B CD80                <5>  int 0x80
    27 0000063D 5B                  <5>  pop ebx
    28 0000063E 59                  <5>  pop ecx
    29 0000063F 5A                  <5>  pop edx
    97 00000640 83C402              <3>  add esp, 2
    98 00000643 9D                  <3>  popf
    99 00000644 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000645 9D                  <2> popf
   175 00000646 61                  <2> popa
   189 00000647 9D                  <1> popf
   190 00000648 61                  <1> popa
    55                                      PUTCHAR 10
    68 00000649 60                  <1>  pusha
    69 0000064A 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 0000064B B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 0000064D 83EC02              <1>  sub esp, 2
    94 00000650 89E7                <1>  mov edi, esp
    95 00000652 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000654 52                  <3>  push edx
    16 00000655 51                  <3>  push ecx
    17 00000656 53                  <3>  push ebx
    18 00000657 6A04                <3>  push %1
    19 00000659 6A01                <3>  push %2
    20 0000065B 57                  <3>  push %3
    21 0000065C 6A01                <3>  push %4
    22 0000065E 5A                  <3>  pop edx
    23 0000065F 59                  <3>  pop ecx
    24 00000660 5B                  <3>  pop ebx
    25 00000661 58                  <3>  pop eax
    26 00000662 CD80                <3>  int 0x80
    27 00000664 5B                  <3>  pop ebx
    28 00000665 59                  <3>  pop ecx
    29 00000666 5A                  <3>  pop edx
    97 00000667 83C402              <1>  add esp, 2
    98 0000066A 9D                  <1>  popf
    99 0000066B 61                  <1>  popa
    56                                  
    57 0000066C 99                          cdq
    58 0000066D 0FBE1D[01000000]            movsx ebx, byte [a]
    59 00000674 F7FB                        idiv dword ebx
    60                                      PRINT "Результат деления = "
    56 00000676 60                  <1>  pusha
    57 00000677 9C                  <1>  pushf
    58 00000678 EB24                <1>  jmp %%astr
    59 0000067A D0A0D0B5D0B7D183D0- <1> %%str db %1
    59 00000683 BBD18CD182D0B0D182- <1>
    59 0000068C 20D0B4D0B5D0BBD0B5- <1>
    59 00000695 D0BDD0B8D18F203D20  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@106.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000069E 52                  <3>  push edx
    16 0000069F 51                  <3>  push ecx
    17 000006A0 53                  <3>  push ebx
    18 000006A1 6A04                <3>  push %1
    19 000006A3 6A01                <3>  push %2
    20 000006A5 68[7A060000]        <3>  push %3
    21 000006AA 6A24                <3>  push %4
    22 000006AC 5A                  <3>  pop edx
    23 000006AD 59                  <3>  pop ecx
    24 000006AE 5B                  <3>  pop ebx
    25 000006AF 58                  <3>  pop eax
    26 000006B0 CD80                <3>  int 0x80
    27 000006B2 5B                  <3>  pop ebx
    28 000006B3 59                  <3>  pop ecx
    29 000006B4 5A                  <3>  pop edx
    62 000006B5 9D                  <1>  popf
    63 000006B6 61                  <1>  popa
    61                                      SIGNINT eax
   179 000006B7 60                  <1> pusha
   180 000006B8 9C                  <1> pushf
   181 000006B9 50                  <1> push dword %1
   182 000006BA 58                  <1> pop eax
   183 000006BB 83F800              <1>  cmp eax,0
   184 000006BE 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 000006C0 60                  <2>  pusha
    69 000006C1 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 000006C2 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000006C4 83EC02              <2>  sub esp, 2
    94 000006C7 89E7                <2>  mov edi, esp
    95 000006C9 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000006CB 52                  <4>  push edx
    16 000006CC 51                  <4>  push ecx
    17 000006CD 53                  <4>  push ebx
    18 000006CE 6A04                <4>  push %1
    19 000006D0 6A01                <4>  push %2
    20 000006D2 57                  <4>  push %3
    21 000006D3 6A01                <4>  push %4
    22 000006D5 5A                  <4>  pop edx
    23 000006D6 59                  <4>  pop ecx
    24 000006D7 5B                  <4>  pop ebx
    25 000006D8 58                  <4>  pop eax
    26 000006D9 CD80                <4>  int 0x80
    27 000006DB 5B                  <4>  pop ebx
    28 000006DC 59                  <4>  pop ecx
    29 000006DD 5A                  <4>  pop edx
    97 000006DE 83C402              <2>  add esp, 2
    98 000006E1 9D                  <2>  popf
    99 000006E2 61                  <2>  popa
   186 000006E3 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 000006E5 60                  <2> pusha
   130 000006E6 9C                  <2> pushf
   131 000006E7 50                  <2> push dword %1
   132 000006E8 58                  <2> pop eax
   133 000006E9 89C7                <2> mov edi,eax
   134 000006EB BE0A000000          <2> mov esi,10
   135 000006F0 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 000006F2 31D2                <2>  xor edx,edx
   138 000006F4 F7F6                <2>  div esi
   139 000006F6 43                  <2>  inc ebx
   140 000006F7 83F800              <2>  cmp eax,0
   141 000006FA 75F6                <2>  jne %%m1
   142                              <2> 
   143 000006FC B801000000          <2>  mov eax,1
   144 00000701 89D9                <2>  mov ecx,ebx
   145 00000703 49                  <2>  dec ecx
   146                              <2> 
   147 00000704 83F900              <2>  cmp ecx,0
   148 00000707 7441                <2>  je %%m4
   149 00000709 F7E6                <2> %%m2: mul esi
   150 0000070B E2FC                <2>  loop %%m2
   151                              <2> 
   152 0000070D 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 0000070F 89F8                <2>  mov eax,edi
   156 00000711 31D2                <2>  xor edx,edx
   157 00000713 F7F3                <2>  div ebx
   158 00000715 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000717 60                  <3>  pusha
    69 00000718 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000719 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 0000071A 83EC02              <3>  sub esp, 2
    94 0000071D 89E7                <3>  mov edi, esp
    95 0000071F 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000721 52                  <5>  push edx
    16 00000722 51                  <5>  push ecx
    17 00000723 53                  <5>  push ebx
    18 00000724 6A04                <5>  push %1
    19 00000726 6A01                <5>  push %2
    20 00000728 57                  <5>  push %3
    21 00000729 6A01                <5>  push %4
    22 0000072B 5A                  <5>  pop edx
    23 0000072C 59                  <5>  pop ecx
    24 0000072D 5B                  <5>  pop ebx
    25 0000072E 58                  <5>  pop eax
    26 0000072F CD80                <5>  int 0x80
    27 00000731 5B                  <5>  pop ebx
    28 00000732 59                  <5>  pop ecx
    29 00000733 5A                  <5>  pop edx
    97 00000734 83C402              <3>  add esp, 2
    98 00000737 9D                  <3>  popf
    99 00000738 61                  <3>  popa
   160 00000739 89D7                <2>  mov edi,edx
   161 0000073B 31D2                <2>  xor edx,edx
   162 0000073D 89D8                <2>  mov eax,ebx
   163 0000073F F7F6                <2>  div esi
   164 00000741 83F801              <2>  cmp eax,1
   165 00000744 7404                <2>  je %%m4
   166 00000746 89C3                <2>  mov ebx,eax
   167 00000748 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 0000074A 89FA                <2>  mov edx,edi
   170 0000074C 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 0000074F 60                  <3>  pusha
    69 00000750 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000751 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000753 83EC02              <3>  sub esp, 2
    94 00000756 89E7                <3>  mov edi, esp
    95 00000758 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 0000075A 52                  <5>  push edx
    16 0000075B 51                  <5>  push ecx
    17 0000075C 53                  <5>  push ebx
    18 0000075D 6A04                <5>  push %1
    19 0000075F 6A01                <5>  push %2
    20 00000761 57                  <5>  push %3
    21 00000762 6A01                <5>  push %4
    22 00000764 5A                  <5>  pop edx
    23 00000765 59                  <5>  pop ecx
    24 00000766 5B                  <5>  pop ebx
    25 00000767 58                  <5>  pop eax
    26 00000768 CD80                <5>  int 0x80
    27 0000076A 5B                  <5>  pop ebx
    28 0000076B 59                  <5>  pop ecx
    29 0000076C 5A                  <5>  pop edx
    97 0000076D 83C402              <3>  add esp, 2
    98 00000770 9D                  <3>  popf
    99 00000771 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000772 9D                  <2> popf
   175 00000773 61                  <2> popa
   189 00000774 9D                  <1> popf
   190 00000775 61                  <1> popa
    62                                      PUTCHAR 10
    68 00000776 60                  <1>  pusha
    69 00000777 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000778 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 0000077A 83EC02              <1>  sub esp, 2
    94 0000077D 89E7                <1>  mov edi, esp
    95 0000077F 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000781 52                  <3>  push edx
    16 00000782 51                  <3>  push ecx
    17 00000783 53                  <3>  push ebx
    18 00000784 6A04                <3>  push %1
    19 00000786 6A01                <3>  push %2
    20 00000788 57                  <3>  push %3
    21 00000789 6A01                <3>  push %4
    22 0000078B 5A                  <3>  pop edx
    23 0000078C 59                  <3>  pop ecx
    24 0000078D 5B                  <3>  pop ebx
    25 0000078E 58                  <3>  pop eax
    26 0000078F CD80                <3>  int 0x80
    27 00000791 5B                  <3>  pop ebx
    28 00000792 59                  <3>  pop ecx
    29 00000793 5A                  <3>  pop edx
    97 00000794 83C402              <1>  add esp, 2
    98 00000797 9D                  <1>  popf
    99 00000798 61                  <1>  popa
    63                                  
    64 00000799 A3[00000000]                mov [y], eax
    65                                  
    66                                      PRINT "Y = "
    56 0000079E 60                  <1>  pusha
    57 0000079F 9C                  <1>  pushf
    58 000007A0 EB04                <1>  jmp %%astr
    59 000007A2 59203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@123.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000007A6 52                  <3>  push edx
    16 000007A7 51                  <3>  push ecx
    17 000007A8 53                  <3>  push ebx
    18 000007A9 6A04                <3>  push %1
    19 000007AB 6A01                <3>  push %2
    20 000007AD 68[A2070000]        <3>  push %3
    21 000007B2 6A04                <3>  push %4
    22 000007B4 5A                  <3>  pop edx
    23 000007B5 59                  <3>  pop ecx
    24 000007B6 5B                  <3>  pop ebx
    25 000007B7 58                  <3>  pop eax
    26 000007B8 CD80                <3>  int 0x80
    27 000007BA 5B                  <3>  pop ebx
    28 000007BB 59                  <3>  pop ecx
    29 000007BC 5A                  <3>  pop edx
    62 000007BD 9D                  <1>  popf
    63 000007BE 61                  <1>  popa
    67                                      SIGNINT dword [y]
   179 000007BF 60                  <1> pusha
   180 000007C0 9C                  <1> pushf
   181 000007C1 FF35[00000000]      <1> push dword %1
   182 000007C7 58                  <1> pop eax
   183 000007C8 83F800              <1>  cmp eax,0
   184 000007CB 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 000007CD 60                  <2>  pusha
    69 000007CE 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 000007CF B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000007D1 83EC02              <2>  sub esp, 2
    94 000007D4 89E7                <2>  mov edi, esp
    95 000007D6 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000007D8 52                  <4>  push edx
    16 000007D9 51                  <4>  push ecx
    17 000007DA 53                  <4>  push ebx
    18 000007DB 6A04                <4>  push %1
    19 000007DD 6A01                <4>  push %2
    20 000007DF 57                  <4>  push %3
    21 000007E0 6A01                <4>  push %4
    22 000007E2 5A                  <4>  pop edx
    23 000007E3 59                  <4>  pop ecx
    24 000007E4 5B                  <4>  pop ebx
    25 000007E5 58                  <4>  pop eax
    26 000007E6 CD80                <4>  int 0x80
    27 000007E8 5B                  <4>  pop ebx
    28 000007E9 59                  <4>  pop ecx
    29 000007EA 5A                  <4>  pop edx
    97 000007EB 83C402              <2>  add esp, 2
    98 000007EE 9D                  <2>  popf
    99 000007EF 61                  <2>  popa
   186 000007F0 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 000007F2 60                  <2> pusha
   130 000007F3 9C                  <2> pushf
   131 000007F4 50                  <2> push dword %1
   132 000007F5 58                  <2> pop eax
   133 000007F6 89C7                <2> mov edi,eax
   134 000007F8 BE0A000000          <2> mov esi,10
   135 000007FD 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 000007FF 31D2                <2>  xor edx,edx
   138 00000801 F7F6                <2>  div esi
   139 00000803 43                  <2>  inc ebx
   140 00000804 83F800              <2>  cmp eax,0
   141 00000807 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000809 B801000000          <2>  mov eax,1
   144 0000080E 89D9                <2>  mov ecx,ebx
   145 00000810 49                  <2>  dec ecx
   146                              <2> 
   147 00000811 83F900              <2>  cmp ecx,0
   148 00000814 7441                <2>  je %%m4
   149 00000816 F7E6                <2> %%m2: mul esi
   150 00000818 E2FC                <2>  loop %%m2
   151                              <2> 
   152 0000081A 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 0000081C 89F8                <2>  mov eax,edi
   156 0000081E 31D2                <2>  xor edx,edx
   157 00000820 F7F3                <2>  div ebx
   158 00000822 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000824 60                  <3>  pusha
    69 00000825 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000826 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000827 83EC02              <3>  sub esp, 2
    94 0000082A 89E7                <3>  mov edi, esp
    95 0000082C 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 0000082E 52                  <5>  push edx
    16 0000082F 51                  <5>  push ecx
    17 00000830 53                  <5>  push ebx
    18 00000831 6A04                <5>  push %1
    19 00000833 6A01                <5>  push %2
    20 00000835 57                  <5>  push %3
    21 00000836 6A01                <5>  push %4
    22 00000838 5A                  <5>  pop edx
    23 00000839 59                  <5>  pop ecx
    24 0000083A 5B                  <5>  pop ebx
    25 0000083B 58                  <5>  pop eax
    26 0000083C CD80                <5>  int 0x80
    27 0000083E 5B                  <5>  pop ebx
    28 0000083F 59                  <5>  pop ecx
    29 00000840 5A                  <5>  pop edx
    97 00000841 83C402              <3>  add esp, 2
    98 00000844 9D                  <3>  popf
    99 00000845 61                  <3>  popa
   160 00000846 89D7                <2>  mov edi,edx
   161 00000848 31D2                <2>  xor edx,edx
   162 0000084A 89D8                <2>  mov eax,ebx
   163 0000084C F7F6                <2>  div esi
   164 0000084E 83F801              <2>  cmp eax,1
   165 00000851 7404                <2>  je %%m4
   166 00000853 89C3                <2>  mov ebx,eax
   167 00000855 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000857 89FA                <2>  mov edx,edi
   170 00000859 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 0000085C 60                  <3>  pusha
    69 0000085D 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 0000085E 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000860 83EC02              <3>  sub esp, 2
    94 00000863 89E7                <3>  mov edi, esp
    95 00000865 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000867 52                  <5>  push edx
    16 00000868 51                  <5>  push ecx
    17 00000869 53                  <5>  push ebx
    18 0000086A 6A04                <5>  push %1
    19 0000086C 6A01                <5>  push %2
    20 0000086E 57                  <5>  push %3
    21 0000086F 6A01                <5>  push %4
    22 00000871 5A                  <5>  pop edx
    23 00000872 59                  <5>  pop ecx
    24 00000873 5B                  <5>  pop ebx
    25 00000874 58                  <5>  pop eax
    26 00000875 CD80                <5>  int 0x80
    27 00000877 5B                  <5>  pop ebx
    28 00000878 59                  <5>  pop ecx
    29 00000879 5A                  <5>  pop edx
    97 0000087A 83C402              <3>  add esp, 2
    98 0000087D 9D                  <3>  popf
    99 0000087E 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 0000087F 9D                  <2> popf
   175 00000880 61                  <2> popa
   189 00000881 9D                  <1> popf
   190 00000882 61                  <1> popa
    68                                      PUTCHAR 10
    68 00000883 60                  <1>  pusha
    69 00000884 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000885 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000887 83EC02              <1>  sub esp, 2
    94 0000088A 89E7                <1>  mov edi, esp
    95 0000088C 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000088E 52                  <3>  push edx
    16 0000088F 51                  <3>  push ecx
    17 00000890 53                  <3>  push ebx
    18 00000891 6A04                <3>  push %1
    19 00000893 6A01                <3>  push %2
    20 00000895 57                  <3>  push %3
    21 00000896 6A01                <3>  push %4
    22 00000898 5A                  <3>  pop edx
    23 00000899 59                  <3>  pop ecx
    24 0000089A 5B                  <3>  pop ebx
    25 0000089B 58                  <3>  pop eax
    26 0000089C CD80                <3>  int 0x80
    27 0000089E 5B                  <3>  pop ebx
    28 0000089F 59                  <3>  pop ecx
    29 000008A0 5A                  <3>  pop edx
    97 000008A1 83C402              <1>  add esp, 2
    98 000008A4 9D                  <1>  popf
    99 000008A5 61                  <1>  popa
    69                                  
    70                                      FINISH
   125                              <1>  _syscall_exit %1
    34 000008A6 BB00000000          <2>  mov ebx, %1
    35 000008AB B801000000          <2>  mov eax, 1
    36 000008B0 CD80                <2>  int 0x80
