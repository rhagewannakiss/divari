     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020)
     9                              <1> 
    10                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                              <1> ;; system dependend part
    12                              <1> 
    13                              <1> ; generic 3-param syscall
    14                              <1> %macro _syscall_3 4
    15                              <1> 	push edx
    16                              <1> 	push ecx
    17                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    18                              <1> 	push %1
    19                              <1> 	push %2
    20                              <1> 	push %3
    21                              <1> 	push %4
    22                              <1> 	pop edx
    23                              <1> 	pop ecx
    24                              <1> 	pop ebx
    25                              <1> 	pop eax
    26                              <1> 	int 0x80
    27                              <1> 	pop ebx
    28                              <1> 	pop ecx
    29                              <1> 	pop edx
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    33                              <1> %macro _syscall_exit 1
    34                              <1> 	mov ebx, %1	; exit code
    35                              <1> 	mov eax, 1	; 1 = sys_exit
    36                              <1> 	int 0x80
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> ;; system dependent part ends here
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length
    43                              <1> ; output: eax: read bytes
    44                              <1> %macro _syscall_read 3
    45                              <1> 	_syscall_3 3,%1,%2,%3
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length
    49                              <1> ; output: eax: written bytes
    50                              <1> %macro _syscall_write 3
    51                              <1> 	_syscall_3 4,%1,%2,%3
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    55                              <1> %macro 	PRINT 1
    56                              <1> 	pusha
    57                              <1> 	pushf
    58                              <1> 	jmp %%astr
    59                              <1> %%str	db	%1     ;, 0
    60                              <1> %%strln	equ	$-%%str
    61                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    62                              <1> 	popf
    63                              <1> 	popa
    64                              <1> %endmacro
    65                              <1> 
    66                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    67                              <1> %macro	PUTCHAR 1
    68                              <1> 	pusha
    69                              <1> 	pushf
    70                              <1> %ifstr %1
    71                              <1> 	mov	al, %1
    72                              <1> %elifnum %1
    73                              <1> 	mov	al, %1
    74                              <1> %elifidni %1,al
    75                              <1> 	nop
    76                              <1> %elifidni %1,ah
    77                              <1> 	mov	al, ah
    78                              <1> %elifidni %1,bl
    79                              <1> 	mov	al, bl
    80                              <1> %elifidni %1,bh
    81                              <1> 	mov	al, bh
    82                              <1> %elifidni %1,cl
    83                              <1> 	mov	al, cl
    84                              <1> %elifidni %1,ch
    85                              <1> 	mov	al, ch
    86                              <1> %elifidni %1,dl
    87                              <1> 	mov	al, dl
    88                              <1> %elifidni %1,dh
    89                              <1> 	mov	al, dh
    90                              <1> %else
    91                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    92                              <1> %endif
    93                              <1> 	sub	esp, 2  ; reserve memory for buffer
    94                              <1> 	mov	edi, esp
    95                              <1> 	mov	[edi], al
    96                              <1> 	_syscall_write 1, edi, 1
    97                              <1> 	add	esp, 2
    98                              <1> 	popf
    99                              <1> 	popa
   100                              <1> %endmacro
   101                              <1> 
   102                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   103                              <1> %macro	GETCHAR 0
   104                              <1> 	pushf
   105                              <1> 	push	edi
   106                              <1> 	sub	esp, 2
   107                              <1> 	mov	edi, esp
   108                              <1> 	_syscall_read 0, edi, 1
   109                              <1> 	cmp	eax, 1
   110                              <1> 	jne	%%eof_reached
   111                              <1> 	xor	eax,eax
   112                              <1> 	mov	al, [edi]
   113                              <1> 	jmp	%%gcquit
   114                              <1> %%eof_reached:
   115                              <1> 	xor	eax, eax
   116                              <1> 	not	eax 		; eax := -1
   117                              <1> %%gcquit:
   118                              <1> 	add	esp, 2
   119                              <1> 	pop	edi
   120                              <1> 	popf
   121                              <1> %endmacro
   122                              <1> 
   123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   124                              <1> %macro FINISH 0-1 0
   125                              <1> 	_syscall_exit %1
   126                              <1> %endmacro
   127                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   128                              <1> %macro UNSINT 1
   129                              <1> pusha
   130                              <1> pushf
   131                              <1> push dword %1
   132                              <1> pop eax
   133                              <1> mov edi,eax
   134                              <1> mov esi,10
   135                              <1>   xor ebx,ebx
   136                              <1> %%m1:
   137                              <1>    xor edx,edx
   138                              <1>    div esi
   139                              <1>    inc ebx
   140                              <1>    cmp eax,0
   141                              <1>    jne %%m1
   142                              <1> 
   143                              <1>    mov eax,1
   144                              <1>    mov ecx,ebx
   145                              <1>    dec ecx
   146                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   147                              <1>     cmp ecx,0
   148                              <1>      je %%m4
   149                              <1> %%m2:  mul esi
   150                              <1>        loop %%m2
   151                              <1> 
   152                              <1>        mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155                              <1>       mov eax,edi
   156                              <1>       xor edx,edx
   157                              <1>       div ebx
   158                              <1>       add al,'0'
   159                              <1>       PUTCHAR al
   160                              <1>       mov edi,edx
   161                              <1>       xor edx,edx
   162                              <1>       mov eax,ebx
   163                              <1>       div esi
   164                              <1>       cmp eax,1
   165                              <1>       je %%m4
   166                              <1>       mov ebx,eax
   167                              <1>       jmp %%m3
   168                              <1>  %%m4:
   169                              <1>       mov edx,edi
   170                              <1>       add dl,'0'
   171                              <1>       PUTCHAR dl
   172                              <1> 
   173                              <1> 
   174                              <1> popf
   175                              <1> popa
   176                              <1> %endmacro
   177                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                              <1> %macro SIGNINT 1
   179                              <1> pusha
   180                              <1> pushf
   181                              <1> push dword %1
   182                              <1> pop eax
   183                              <1>     cmp eax,0
   184                              <1>     jge %%m5
   185                              <1>     PUTCHAR '-'
   186                              <1>     neg eax
   187                              <1> %%m5:
   188                              <1>       UNSINT eax
   189                              <1> popf
   190                              <1> popa
   191                              <1> %endmacro
   192                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   193                              <1> %macro GETUN 1
   194                              <1> pushad
   195                              <1> pushfd
   196                              <1> ;;;;;;;;;;;;;;;;;;;;;;
   197                              <1> xor edi,edi
   198                              <1> xor esi,esi
   199                              <1> %%m1:
   200                              <1> GETCHAR
   201                              <1> cmp al,0xA
   202                              <1> je %%m2
   203                              <1> cmp al,'0'
   204                              <1> jb %%m_err
   205                              <1> cmp al,'9'
   206                              <1> ja %%m_err
   207                              <1> inc edi
   208                              <1> xor ecx,ecx
   209                              <1> mov cl,al
   210                              <1> mov eax,esi
   211                              <1> mov ebx,10
   212                              <1> mul ebx
   213                              <1> sub cl,48
   214                              <1> add eax,ecx
   215                              <1> jc %%m3
   216                              <1> mov esi,eax
   217                              <1> jmp %%m1
   218                              <1> %%m2:
   219                              <1> cmp edi,0
   220                              <1> je %%m1
   221                              <1> jmp %%m4
   222                              <1> %%m3: PRINT "too big number"
   223                              <1> PUTCHAR 10
   224                              <1> jmp %%m4
   225                              <1> %%m_err: PRINT "ERROR!!!"
   226                              <1> PUTCHAR 0xa
   227                              <1> %%m4:
   228                              <1> ;;;;;;;;;;;;;;;;;;
   229                              <1> push esi
   230                              <1> add esp,4
   231                              <1> popfd
   232                              <1> popad
   233                              <1> sub esp,40
   234                              <1> pop dword %1
   235                              <1> add esp,36
   236                              <1> %endmacro
   237                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   238                              <1> %macro GETSIG 1
   239                              <1> pushad
   240                              <1> pushfd
   241                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   242                              <1> xor edi,edi
   243                              <1> xor esi,esi
   244                              <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   246                              <1> cmp al,0xa
   247                              <1> je %%m_st1
   248                              <1> cmp al,'-'
   249                              <1> jne %%s1
   250                              <1> mov ebx,-10
   251                              <1> push ebx
   252                              <1> GETCHAR
   253                              <1> cmp al,0xa
   254                              <1> je %%m_err
   255                              <1> jmp %%m_st21
   256                              <1> %%s1: push ebx
   257                              <1> cmp al,'+'
   258                              <1> jne %%m_st21
   259                              <1> GETCHAR
   260                              <1> cmp al,0xa
   261                              <1> je %%m_err
   262                              <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   264                              <1> %%m_st21:  cmp al,0xa
   265                              <1> je %%pr_end
   266                              <1> cmp al,'0'
   267                              <1> jb %%m_err
   268                              <1> cmp al,'9'
   269                              <1> ja %%m_err
   270                              <1> inc edi
   271                              <1> xor ecx,ecx
   272                              <1> mov cl,al
   273                              <1> mov eax,esi
   274                              <1> imul ebx
   275                              <1> sub cl,48
   276                              <1> cmp dword[esp],-10
   277                              <1> je %%j_s
   278                              <1> add eax,ecx
   279                              <1> jmp %%j_per
   280                              <1> %%j_s: sub eax,ecx
   281                              <1> %%j_per: jo %%m_b
   282                              <1> mov esi,eax
   283                              <1> cmp dword[esp],-10
   284                              <1> jne %%m_st2
   285                              <1> neg esi
   286                              <1> jmp %%m_st2
   287                              <1> %%pr_end:  cmp edi,0
   288                              <1> je %%m_st2
   289                              <1> jmp %%m_k
   290                              <1> ;;;;;;;;;
   291                              <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
   293                              <1> PUTCHAR 0xa
   294                              <1> jmp %%m_end
   295                              <1> %%m_b: pop ebx
   296                              <1> cmp ebx,-10
   297                              <1> je  %%m_l
   298                              <1> PRINT "too big"
   299                              <1> PUTCHAR 0xa
   300                              <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   302                              <1> PUTCHAR 0xa
   303                              <1> jmp %%m_end
   304                              <1> %%m_k: pop ebx
   305                              <1> cmp ebx,-10
   306                              <1> jne %%m_p
   307                              <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> 
   312                              <1> push esi
   313                              <1> add esp,4
   314                              <1> popfd
   315                              <1> popad
   316                              <1> sub esp,40
   317                              <1> pop dword %1
   318                              <1> add esp,36
   319                              <1> jmp %%mm_e
   320                              <1> %%m_end:
   321                              <1> popfd
   322                              <1> popad
   323                              <1> %%mm_e:
   324                              <1> %endmacro
     2                                  
     3                                  ; 3.	Реализовать присваивание b = a; (не более двух команд) при условии:
     4                                  ; // a
     5                                  ;  unsigned char a;
     6                                  ;  unsigned int b;
     7                                  ; // b
     8                                  ; char a;
     9                                  ; short b
    10                                  
    11                                  section .data
    12 00000000 01                          a db 1
    13 00000001 0700                        b dw 7
    14                                  
    15                                  ;section .bss
    16                                  ;    a resb 1
    17                                  ;    b resw 1
    18                                  
    19                                  section .TEXT
    20                                      global _start
    21                                  
    22                                  _start:
    23                                      PRINT "a = "
    56 00000000 60                  <1>  pusha
    57 00000001 9C                  <1>  pushf
    58 00000002 EB04                <1>  jmp %%astr
    59 00000004 61203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@3.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000008 52                  <3>  push edx
    16 00000009 51                  <3>  push ecx
    17 0000000A 53                  <3>  push ebx
    18 0000000B 6A04                <3>  push %1
    19 0000000D 6A01                <3>  push %2
    20 0000000F 68[04000000]        <3>  push %3
    21 00000014 6A04                <3>  push %4
    22 00000016 5A                  <3>  pop edx
    23 00000017 59                  <3>  pop ecx
    24 00000018 5B                  <3>  pop ebx
    25 00000019 58                  <3>  pop eax
    26 0000001A CD80                <3>  int 0x80
    27 0000001C 5B                  <3>  pop ebx
    28 0000001D 59                  <3>  pop ecx
    29 0000001E 5A                  <3>  pop edx
    62 0000001F 9D                  <1>  popf
    63 00000020 61                  <1>  popa
    24 00000021 0FB605[00000000]            movzx eax, byte [a]
    25                                      UNSINT eax
   129 00000028 60                  <1> pusha
   130 00000029 9C                  <1> pushf
   131 0000002A 50                  <1> push dword %1
   132 0000002B 58                  <1> pop eax
   133 0000002C 89C7                <1> mov edi,eax
   134 0000002E BE0A000000          <1> mov esi,10
   135 00000033 31DB                <1>  xor ebx,ebx
   136                              <1> %%m1:
   137 00000035 31D2                <1>  xor edx,edx
   138 00000037 F7F6                <1>  div esi
   139 00000039 43                  <1>  inc ebx
   140 0000003A 83F800              <1>  cmp eax,0
   141 0000003D 75F6                <1>  jne %%m1
   142                              <1> 
   143 0000003F B801000000          <1>  mov eax,1
   144 00000044 89D9                <1>  mov ecx,ebx
   145 00000046 49                  <1>  dec ecx
   146                              <1> 
   147 00000047 83F900              <1>  cmp ecx,0
   148 0000004A 7441                <1>  je %%m4
   149 0000004C F7E6                <1> %%m2: mul esi
   150 0000004E E2FC                <1>  loop %%m2
   151                              <1> 
   152 00000050 89C3                <1>  mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155 00000052 89F8                <1>  mov eax,edi
   156 00000054 31D2                <1>  xor edx,edx
   157 00000056 F7F3                <1>  div ebx
   158 00000058 0430                <1>  add al,'0'
   159                              <1>  PUTCHAR al
    68 0000005A 60                  <2>  pusha
    69 0000005B 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75 0000005C 90                  <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000005D 83EC02              <2>  sub esp, 2
    94 00000060 89E7                <2>  mov edi, esp
    95 00000062 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000064 52                  <4>  push edx
    16 00000065 51                  <4>  push ecx
    17 00000066 53                  <4>  push ebx
    18 00000067 6A04                <4>  push %1
    19 00000069 6A01                <4>  push %2
    20 0000006B 57                  <4>  push %3
    21 0000006C 6A01                <4>  push %4
    22 0000006E 5A                  <4>  pop edx
    23 0000006F 59                  <4>  pop ecx
    24 00000070 5B                  <4>  pop ebx
    25 00000071 58                  <4>  pop eax
    26 00000072 CD80                <4>  int 0x80
    27 00000074 5B                  <4>  pop ebx
    28 00000075 59                  <4>  pop ecx
    29 00000076 5A                  <4>  pop edx
    97 00000077 83C402              <2>  add esp, 2
    98 0000007A 9D                  <2>  popf
    99 0000007B 61                  <2>  popa
   160 0000007C 89D7                <1>  mov edi,edx
   161 0000007E 31D2                <1>  xor edx,edx
   162 00000080 89D8                <1>  mov eax,ebx
   163 00000082 F7F6                <1>  div esi
   164 00000084 83F801              <1>  cmp eax,1
   165 00000087 7404                <1>  je %%m4
   166 00000089 89C3                <1>  mov ebx,eax
   167 0000008B EBC5                <1>  jmp %%m3
   168                              <1>  %%m4:
   169 0000008D 89FA                <1>  mov edx,edi
   170 0000008F 80C230              <1>  add dl,'0'
   171                              <1>  PUTCHAR dl
    68 00000092 60                  <2>  pusha
    69 00000093 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87 00000094 88D0                <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000096 83EC02              <2>  sub esp, 2
    94 00000099 89E7                <2>  mov edi, esp
    95 0000009B 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000009D 52                  <4>  push edx
    16 0000009E 51                  <4>  push ecx
    17 0000009F 53                  <4>  push ebx
    18 000000A0 6A04                <4>  push %1
    19 000000A2 6A01                <4>  push %2
    20 000000A4 57                  <4>  push %3
    21 000000A5 6A01                <4>  push %4
    22 000000A7 5A                  <4>  pop edx
    23 000000A8 59                  <4>  pop ecx
    24 000000A9 5B                  <4>  pop ebx
    25 000000AA 58                  <4>  pop eax
    26 000000AB CD80                <4>  int 0x80
    27 000000AD 5B                  <4>  pop ebx
    28 000000AE 59                  <4>  pop ecx
    29 000000AF 5A                  <4>  pop edx
    97 000000B0 83C402              <2>  add esp, 2
    98 000000B3 9D                  <2>  popf
    99 000000B4 61                  <2>  popa
   172                              <1> 
   173                              <1> 
   174 000000B5 9D                  <1> popf
   175 000000B6 61                  <1> popa
    26                                      PUTCHAR 10
    68 000000B7 60                  <1>  pusha
    69 000000B8 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 000000B9 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 000000BB 83EC02              <1>  sub esp, 2
    94 000000BE 89E7                <1>  mov edi, esp
    95 000000C0 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000000C2 52                  <3>  push edx
    16 000000C3 51                  <3>  push ecx
    17 000000C4 53                  <3>  push ebx
    18 000000C5 6A04                <3>  push %1
    19 000000C7 6A01                <3>  push %2
    20 000000C9 57                  <3>  push %3
    21 000000CA 6A01                <3>  push %4
    22 000000CC 5A                  <3>  pop edx
    23 000000CD 59                  <3>  pop ecx
    24 000000CE 5B                  <3>  pop ebx
    25 000000CF 58                  <3>  pop eax
    26 000000D0 CD80                <3>  int 0x80
    27 000000D2 5B                  <3>  pop ebx
    28 000000D3 59                  <3>  pop ecx
    29 000000D4 5A                  <3>  pop edx
    97 000000D5 83C402              <1>  add esp, 2
    98 000000D8 9D                  <1>  popf
    99 000000D9 61                  <1>  popa
    27                                  
    28                                      PRINT "b = "
    56 000000DA 60                  <1>  pusha
    57 000000DB 9C                  <1>  pushf
    58 000000DC EB04                <1>  jmp %%astr
    59 000000DE 62203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@16.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000000E2 52                  <3>  push edx
    16 000000E3 51                  <3>  push ecx
    17 000000E4 53                  <3>  push ebx
    18 000000E5 6A04                <3>  push %1
    19 000000E7 6A01                <3>  push %2
    20 000000E9 68[DE000000]        <3>  push %3
    21 000000EE 6A04                <3>  push %4
    22 000000F0 5A                  <3>  pop edx
    23 000000F1 59                  <3>  pop ecx
    24 000000F2 5B                  <3>  pop ebx
    25 000000F3 58                  <3>  pop eax
    26 000000F4 CD80                <3>  int 0x80
    27 000000F6 5B                  <3>  pop ebx
    28 000000F7 59                  <3>  pop ecx
    29 000000F8 5A                  <3>  pop edx
    62 000000F9 9D                  <1>  popf
    63 000000FA 61                  <1>  popa
    29 000000FB 0FB605[01000000]            movzx eax, byte [b]
    30                                      UNSINT eax
   129 00000102 60                  <1> pusha
   130 00000103 9C                  <1> pushf
   131 00000104 50                  <1> push dword %1
   132 00000105 58                  <1> pop eax
   133 00000106 89C7                <1> mov edi,eax
   134 00000108 BE0A000000          <1> mov esi,10
   135 0000010D 31DB                <1>  xor ebx,ebx
   136                              <1> %%m1:
   137 0000010F 31D2                <1>  xor edx,edx
   138 00000111 F7F6                <1>  div esi
   139 00000113 43                  <1>  inc ebx
   140 00000114 83F800              <1>  cmp eax,0
   141 00000117 75F6                <1>  jne %%m1
   142                              <1> 
   143 00000119 B801000000          <1>  mov eax,1
   144 0000011E 89D9                <1>  mov ecx,ebx
   145 00000120 49                  <1>  dec ecx
   146                              <1> 
   147 00000121 83F900              <1>  cmp ecx,0
   148 00000124 7441                <1>  je %%m4
   149 00000126 F7E6                <1> %%m2: mul esi
   150 00000128 E2FC                <1>  loop %%m2
   151                              <1> 
   152 0000012A 89C3                <1>  mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155 0000012C 89F8                <1>  mov eax,edi
   156 0000012E 31D2                <1>  xor edx,edx
   157 00000130 F7F3                <1>  div ebx
   158 00000132 0430                <1>  add al,'0'
   159                              <1>  PUTCHAR al
    68 00000134 60                  <2>  pusha
    69 00000135 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75 00000136 90                  <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000137 83EC02              <2>  sub esp, 2
    94 0000013A 89E7                <2>  mov edi, esp
    95 0000013C 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000013E 52                  <4>  push edx
    16 0000013F 51                  <4>  push ecx
    17 00000140 53                  <4>  push ebx
    18 00000141 6A04                <4>  push %1
    19 00000143 6A01                <4>  push %2
    20 00000145 57                  <4>  push %3
    21 00000146 6A01                <4>  push %4
    22 00000148 5A                  <4>  pop edx
    23 00000149 59                  <4>  pop ecx
    24 0000014A 5B                  <4>  pop ebx
    25 0000014B 58                  <4>  pop eax
    26 0000014C CD80                <4>  int 0x80
    27 0000014E 5B                  <4>  pop ebx
    28 0000014F 59                  <4>  pop ecx
    29 00000150 5A                  <4>  pop edx
    97 00000151 83C402              <2>  add esp, 2
    98 00000154 9D                  <2>  popf
    99 00000155 61                  <2>  popa
   160 00000156 89D7                <1>  mov edi,edx
   161 00000158 31D2                <1>  xor edx,edx
   162 0000015A 89D8                <1>  mov eax,ebx
   163 0000015C F7F6                <1>  div esi
   164 0000015E 83F801              <1>  cmp eax,1
   165 00000161 7404                <1>  je %%m4
   166 00000163 89C3                <1>  mov ebx,eax
   167 00000165 EBC5                <1>  jmp %%m3
   168                              <1>  %%m4:
   169 00000167 89FA                <1>  mov edx,edi
   170 00000169 80C230              <1>  add dl,'0'
   171                              <1>  PUTCHAR dl
    68 0000016C 60                  <2>  pusha
    69 0000016D 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87 0000016E 88D0                <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000170 83EC02              <2>  sub esp, 2
    94 00000173 89E7                <2>  mov edi, esp
    95 00000175 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000177 52                  <4>  push edx
    16 00000178 51                  <4>  push ecx
    17 00000179 53                  <4>  push ebx
    18 0000017A 6A04                <4>  push %1
    19 0000017C 6A01                <4>  push %2
    20 0000017E 57                  <4>  push %3
    21 0000017F 6A01                <4>  push %4
    22 00000181 5A                  <4>  pop edx
    23 00000182 59                  <4>  pop ecx
    24 00000183 5B                  <4>  pop ebx
    25 00000184 58                  <4>  pop eax
    26 00000185 CD80                <4>  int 0x80
    27 00000187 5B                  <4>  pop ebx
    28 00000188 59                  <4>  pop ecx
    29 00000189 5A                  <4>  pop edx
    97 0000018A 83C402              <2>  add esp, 2
    98 0000018D 9D                  <2>  popf
    99 0000018E 61                  <2>  popa
   172                              <1> 
   173                              <1> 
   174 0000018F 9D                  <1> popf
   175 00000190 61                  <1> popa
    31                                      PUTCHAR 10
    68 00000191 60                  <1>  pusha
    69 00000192 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000193 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000195 83EC02              <1>  sub esp, 2
    94 00000198 89E7                <1>  mov edi, esp
    95 0000019A 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000019C 52                  <3>  push edx
    16 0000019D 51                  <3>  push ecx
    17 0000019E 53                  <3>  push ebx
    18 0000019F 6A04                <3>  push %1
    19 000001A1 6A01                <3>  push %2
    20 000001A3 57                  <3>  push %3
    21 000001A4 6A01                <3>  push %4
    22 000001A6 5A                  <3>  pop edx
    23 000001A7 59                  <3>  pop ecx
    24 000001A8 5B                  <3>  pop ebx
    25 000001A9 58                  <3>  pop eax
    26 000001AA CD80                <3>  int 0x80
    27 000001AC 5B                  <3>  pop ebx
    28 000001AD 59                  <3>  pop ecx
    29 000001AE 5A                  <3>  pop edx
    97 000001AF 83C402              <1>  add esp, 2
    98 000001B2 9D                  <1>  popf
    99 000001B3 61                  <1>  popa
    32                                  
    33 000001B4 660FBE05[00000000]          movsx ax, byte [a]
    34 000001BC 66A3[01000000]              mov word [b], ax
    35                                  
    36                                  
    37                                      PRINT "После присваивания: "
    56 000001C2 60                  <1>  pusha
    57 000001C3 9C                  <1>  pushf
    58 000001C4 EB25                <1>  jmp %%astr
    59 000001C6 D09FD0BED181D0BBD0- <1> %%str db %1
    59 000001CF B520D0BFD180D0B8D1- <1>
    59 000001D8 81D0B2D0B0D0B8D0B2- <1>
    59 000001E1 D0B0D0BDD0B8D18F3A- <1>
    59 000001EA 20                  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@29.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000001EB 52                  <3>  push edx
    16 000001EC 51                  <3>  push ecx
    17 000001ED 53                  <3>  push ebx
    18 000001EE 6A04                <3>  push %1
    19 000001F0 6A01                <3>  push %2
    20 000001F2 68[C6010000]        <3>  push %3
    21 000001F7 6A25                <3>  push %4
    22 000001F9 5A                  <3>  pop edx
    23 000001FA 59                  <3>  pop ecx
    24 000001FB 5B                  <3>  pop ebx
    25 000001FC 58                  <3>  pop eax
    26 000001FD CD80                <3>  int 0x80
    27 000001FF 5B                  <3>  pop ebx
    28 00000200 59                  <3>  pop ecx
    29 00000201 5A                  <3>  pop edx
    62 00000202 9D                  <1>  popf
    63 00000203 61                  <1>  popa
    38                                      PUTCHAR 10
    68 00000204 60                  <1>  pusha
    69 00000205 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000206 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000208 83EC02              <1>  sub esp, 2
    94 0000020B 89E7                <1>  mov edi, esp
    95 0000020D 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000020F 52                  <3>  push edx
    16 00000210 51                  <3>  push ecx
    17 00000211 53                  <3>  push ebx
    18 00000212 6A04                <3>  push %1
    19 00000214 6A01                <3>  push %2
    20 00000216 57                  <3>  push %3
    21 00000217 6A01                <3>  push %4
    22 00000219 5A                  <3>  pop edx
    23 0000021A 59                  <3>  pop ecx
    24 0000021B 5B                  <3>  pop ebx
    25 0000021C 58                  <3>  pop eax
    26 0000021D CD80                <3>  int 0x80
    27 0000021F 5B                  <3>  pop ebx
    28 00000220 59                  <3>  pop ecx
    29 00000221 5A                  <3>  pop edx
    97 00000222 83C402              <1>  add esp, 2
    98 00000225 9D                  <1>  popf
    99 00000226 61                  <1>  popa
    39                                  
    40                                      PRINT "a = "
    56 00000227 60                  <1>  pusha
    57 00000228 9C                  <1>  pushf
    58 00000229 EB04                <1>  jmp %%astr
    59 0000022B 61203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@35.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000022F 52                  <3>  push edx
    16 00000230 51                  <3>  push ecx
    17 00000231 53                  <3>  push ebx
    18 00000232 6A04                <3>  push %1
    19 00000234 6A01                <3>  push %2
    20 00000236 68[2B020000]        <3>  push %3
    21 0000023B 6A04                <3>  push %4
    22 0000023D 5A                  <3>  pop edx
    23 0000023E 59                  <3>  pop ecx
    24 0000023F 5B                  <3>  pop ebx
    25 00000240 58                  <3>  pop eax
    26 00000241 CD80                <3>  int 0x80
    27 00000243 5B                  <3>  pop ebx
    28 00000244 59                  <3>  pop ecx
    29 00000245 5A                  <3>  pop edx
    62 00000246 9D                  <1>  popf
    63 00000247 61                  <1>  popa
    41 00000248 0FB605[00000000]            movzx eax, byte [a]
    42                                      UNSINT eax
   129 0000024F 60                  <1> pusha
   130 00000250 9C                  <1> pushf
   131 00000251 50                  <1> push dword %1
   132 00000252 58                  <1> pop eax
   133 00000253 89C7                <1> mov edi,eax
   134 00000255 BE0A000000          <1> mov esi,10
   135 0000025A 31DB                <1>  xor ebx,ebx
   136                              <1> %%m1:
   137 0000025C 31D2                <1>  xor edx,edx
   138 0000025E F7F6                <1>  div esi
   139 00000260 43                  <1>  inc ebx
   140 00000261 83F800              <1>  cmp eax,0
   141 00000264 75F6                <1>  jne %%m1
   142                              <1> 
   143 00000266 B801000000          <1>  mov eax,1
   144 0000026B 89D9                <1>  mov ecx,ebx
   145 0000026D 49                  <1>  dec ecx
   146                              <1> 
   147 0000026E 83F900              <1>  cmp ecx,0
   148 00000271 7441                <1>  je %%m4
   149 00000273 F7E6                <1> %%m2: mul esi
   150 00000275 E2FC                <1>  loop %%m2
   151                              <1> 
   152 00000277 89C3                <1>  mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155 00000279 89F8                <1>  mov eax,edi
   156 0000027B 31D2                <1>  xor edx,edx
   157 0000027D F7F3                <1>  div ebx
   158 0000027F 0430                <1>  add al,'0'
   159                              <1>  PUTCHAR al
    68 00000281 60                  <2>  pusha
    69 00000282 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75 00000283 90                  <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000284 83EC02              <2>  sub esp, 2
    94 00000287 89E7                <2>  mov edi, esp
    95 00000289 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000028B 52                  <4>  push edx
    16 0000028C 51                  <4>  push ecx
    17 0000028D 53                  <4>  push ebx
    18 0000028E 6A04                <4>  push %1
    19 00000290 6A01                <4>  push %2
    20 00000292 57                  <4>  push %3
    21 00000293 6A01                <4>  push %4
    22 00000295 5A                  <4>  pop edx
    23 00000296 59                  <4>  pop ecx
    24 00000297 5B                  <4>  pop ebx
    25 00000298 58                  <4>  pop eax
    26 00000299 CD80                <4>  int 0x80
    27 0000029B 5B                  <4>  pop ebx
    28 0000029C 59                  <4>  pop ecx
    29 0000029D 5A                  <4>  pop edx
    97 0000029E 83C402              <2>  add esp, 2
    98 000002A1 9D                  <2>  popf
    99 000002A2 61                  <2>  popa
   160 000002A3 89D7                <1>  mov edi,edx
   161 000002A5 31D2                <1>  xor edx,edx
   162 000002A7 89D8                <1>  mov eax,ebx
   163 000002A9 F7F6                <1>  div esi
   164 000002AB 83F801              <1>  cmp eax,1
   165 000002AE 7404                <1>  je %%m4
   166 000002B0 89C3                <1>  mov ebx,eax
   167 000002B2 EBC5                <1>  jmp %%m3
   168                              <1>  %%m4:
   169 000002B4 89FA                <1>  mov edx,edi
   170 000002B6 80C230              <1>  add dl,'0'
   171                              <1>  PUTCHAR dl
    68 000002B9 60                  <2>  pusha
    69 000002BA 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87 000002BB 88D0                <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000002BD 83EC02              <2>  sub esp, 2
    94 000002C0 89E7                <2>  mov edi, esp
    95 000002C2 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000002C4 52                  <4>  push edx
    16 000002C5 51                  <4>  push ecx
    17 000002C6 53                  <4>  push ebx
    18 000002C7 6A04                <4>  push %1
    19 000002C9 6A01                <4>  push %2
    20 000002CB 57                  <4>  push %3
    21 000002CC 6A01                <4>  push %4
    22 000002CE 5A                  <4>  pop edx
    23 000002CF 59                  <4>  pop ecx
    24 000002D0 5B                  <4>  pop ebx
    25 000002D1 58                  <4>  pop eax
    26 000002D2 CD80                <4>  int 0x80
    27 000002D4 5B                  <4>  pop ebx
    28 000002D5 59                  <4>  pop ecx
    29 000002D6 5A                  <4>  pop edx
    97 000002D7 83C402              <2>  add esp, 2
    98 000002DA 9D                  <2>  popf
    99 000002DB 61                  <2>  popa
   172                              <1> 
   173                              <1> 
   174 000002DC 9D                  <1> popf
   175 000002DD 61                  <1> popa
    43                                      PUTCHAR 10
    68 000002DE 60                  <1>  pusha
    69 000002DF 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 000002E0 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 000002E2 83EC02              <1>  sub esp, 2
    94 000002E5 89E7                <1>  mov edi, esp
    95 000002E7 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000002E9 52                  <3>  push edx
    16 000002EA 51                  <3>  push ecx
    17 000002EB 53                  <3>  push ebx
    18 000002EC 6A04                <3>  push %1
    19 000002EE 6A01                <3>  push %2
    20 000002F0 57                  <3>  push %3
    21 000002F1 6A01                <3>  push %4
    22 000002F3 5A                  <3>  pop edx
    23 000002F4 59                  <3>  pop ecx
    24 000002F5 5B                  <3>  pop ebx
    25 000002F6 58                  <3>  pop eax
    26 000002F7 CD80                <3>  int 0x80
    27 000002F9 5B                  <3>  pop ebx
    28 000002FA 59                  <3>  pop ecx
    29 000002FB 5A                  <3>  pop edx
    97 000002FC 83C402              <1>  add esp, 2
    98 000002FF 9D                  <1>  popf
    99 00000300 61                  <1>  popa
    44                                  
    45                                      PRINT "b = "
    56 00000301 60                  <1>  pusha
    57 00000302 9C                  <1>  pushf
    58 00000303 EB04                <1>  jmp %%astr
    59 00000305 62203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@48.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000309 52                  <3>  push edx
    16 0000030A 51                  <3>  push ecx
    17 0000030B 53                  <3>  push ebx
    18 0000030C 6A04                <3>  push %1
    19 0000030E 6A01                <3>  push %2
    20 00000310 68[05030000]        <3>  push %3
    21 00000315 6A04                <3>  push %4
    22 00000317 5A                  <3>  pop edx
    23 00000318 59                  <3>  pop ecx
    24 00000319 5B                  <3>  pop ebx
    25 0000031A 58                  <3>  pop eax
    26 0000031B CD80                <3>  int 0x80
    27 0000031D 5B                  <3>  pop ebx
    28 0000031E 59                  <3>  pop ecx
    29 0000031F 5A                  <3>  pop edx
    62 00000320 9D                  <1>  popf
    63 00000321 61                  <1>  popa
    46 00000322 0FBE05[01000000]            movsx eax, byte [b]
    47                                      UNSINT eax
   129 00000329 60                  <1> pusha
   130 0000032A 9C                  <1> pushf
   131 0000032B 50                  <1> push dword %1
   132 0000032C 58                  <1> pop eax
   133 0000032D 89C7                <1> mov edi,eax
   134 0000032F BE0A000000          <1> mov esi,10
   135 00000334 31DB                <1>  xor ebx,ebx
   136                              <1> %%m1:
   137 00000336 31D2                <1>  xor edx,edx
   138 00000338 F7F6                <1>  div esi
   139 0000033A 43                  <1>  inc ebx
   140 0000033B 83F800              <1>  cmp eax,0
   141 0000033E 75F6                <1>  jne %%m1
   142                              <1> 
   143 00000340 B801000000          <1>  mov eax,1
   144 00000345 89D9                <1>  mov ecx,ebx
   145 00000347 49                  <1>  dec ecx
   146                              <1> 
   147 00000348 83F900              <1>  cmp ecx,0
   148 0000034B 7441                <1>  je %%m4
   149 0000034D F7E6                <1> %%m2: mul esi
   150 0000034F E2FC                <1>  loop %%m2
   151                              <1> 
   152 00000351 89C3                <1>  mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155 00000353 89F8                <1>  mov eax,edi
   156 00000355 31D2                <1>  xor edx,edx
   157 00000357 F7F3                <1>  div ebx
   158 00000359 0430                <1>  add al,'0'
   159                              <1>  PUTCHAR al
    68 0000035B 60                  <2>  pusha
    69 0000035C 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75 0000035D 90                  <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000035E 83EC02              <2>  sub esp, 2
    94 00000361 89E7                <2>  mov edi, esp
    95 00000363 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000365 52                  <4>  push edx
    16 00000366 51                  <4>  push ecx
    17 00000367 53                  <4>  push ebx
    18 00000368 6A04                <4>  push %1
    19 0000036A 6A01                <4>  push %2
    20 0000036C 57                  <4>  push %3
    21 0000036D 6A01                <4>  push %4
    22 0000036F 5A                  <4>  pop edx
    23 00000370 59                  <4>  pop ecx
    24 00000371 5B                  <4>  pop ebx
    25 00000372 58                  <4>  pop eax
    26 00000373 CD80                <4>  int 0x80
    27 00000375 5B                  <4>  pop ebx
    28 00000376 59                  <4>  pop ecx
    29 00000377 5A                  <4>  pop edx
    97 00000378 83C402              <2>  add esp, 2
    98 0000037B 9D                  <2>  popf
    99 0000037C 61                  <2>  popa
   160 0000037D 89D7                <1>  mov edi,edx
   161 0000037F 31D2                <1>  xor edx,edx
   162 00000381 89D8                <1>  mov eax,ebx
   163 00000383 F7F6                <1>  div esi
   164 00000385 83F801              <1>  cmp eax,1
   165 00000388 7404                <1>  je %%m4
   166 0000038A 89C3                <1>  mov ebx,eax
   167 0000038C EBC5                <1>  jmp %%m3
   168                              <1>  %%m4:
   169 0000038E 89FA                <1>  mov edx,edi
   170 00000390 80C230              <1>  add dl,'0'
   171                              <1>  PUTCHAR dl
    68 00000393 60                  <2>  pusha
    69 00000394 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87 00000395 88D0                <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000397 83EC02              <2>  sub esp, 2
    94 0000039A 89E7                <2>  mov edi, esp
    95 0000039C 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000039E 52                  <4>  push edx
    16 0000039F 51                  <4>  push ecx
    17 000003A0 53                  <4>  push ebx
    18 000003A1 6A04                <4>  push %1
    19 000003A3 6A01                <4>  push %2
    20 000003A5 57                  <4>  push %3
    21 000003A6 6A01                <4>  push %4
    22 000003A8 5A                  <4>  pop edx
    23 000003A9 59                  <4>  pop ecx
    24 000003AA 5B                  <4>  pop ebx
    25 000003AB 58                  <4>  pop eax
    26 000003AC CD80                <4>  int 0x80
    27 000003AE 5B                  <4>  pop ebx
    28 000003AF 59                  <4>  pop ecx
    29 000003B0 5A                  <4>  pop edx
    97 000003B1 83C402              <2>  add esp, 2
    98 000003B4 9D                  <2>  popf
    99 000003B5 61                  <2>  popa
   172                              <1> 
   173                              <1> 
   174 000003B6 9D                  <1> popf
   175 000003B7 61                  <1> popa
    48                                      PUTCHAR 10
    68 000003B8 60                  <1>  pusha
    69 000003B9 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 000003BA B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 000003BC 83EC02              <1>  sub esp, 2
    94 000003BF 89E7                <1>  mov edi, esp
    95 000003C1 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000003C3 52                  <3>  push edx
    16 000003C4 51                  <3>  push ecx
    17 000003C5 53                  <3>  push ebx
    18 000003C6 6A04                <3>  push %1
    19 000003C8 6A01                <3>  push %2
    20 000003CA 57                  <3>  push %3
    21 000003CB 6A01                <3>  push %4
    22 000003CD 5A                  <3>  pop edx
    23 000003CE 59                  <3>  pop ecx
    24 000003CF 5B                  <3>  pop ebx
    25 000003D0 58                  <3>  pop eax
    26 000003D1 CD80                <3>  int 0x80
    27 000003D3 5B                  <3>  pop ebx
    28 000003D4 59                  <3>  pop ecx
    29 000003D5 5A                  <3>  pop edx
    97 000003D6 83C402              <1>  add esp, 2
    98 000003D9 9D                  <1>  popf
    99 000003DA 61                  <1>  popa
    49                                  
    50                                      FINISH
   125                              <1>  _syscall_exit %1
    34 000003DB BB00000000          <2>  mov ebx, %1
    35 000003E0 B801000000          <2>  mov eax, 1
    36 000003E5 CD80                <2>  int 0x80
