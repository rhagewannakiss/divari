     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020)
     9                              <1> 
    10                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                              <1> ;; system dependend part
    12                              <1> 
    13                              <1> ; generic 3-param syscall
    14                              <1> %macro _syscall_3 4
    15                              <1> 	push edx
    16                              <1> 	push ecx
    17                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    18                              <1> 	push %1
    19                              <1> 	push %2
    20                              <1> 	push %3
    21                              <1> 	push %4
    22                              <1> 	pop edx
    23                              <1> 	pop ecx
    24                              <1> 	pop ebx
    25                              <1> 	pop eax
    26                              <1> 	int 0x80
    27                              <1> 	pop ebx
    28                              <1> 	pop ecx
    29                              <1> 	pop edx
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    33                              <1> %macro _syscall_exit 1
    34                              <1> 	mov ebx, %1	; exit code
    35                              <1> 	mov eax, 1	; 1 = sys_exit
    36                              <1> 	int 0x80
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> ;; system dependent part ends here
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length
    43                              <1> ; output: eax: read bytes
    44                              <1> %macro _syscall_read 3
    45                              <1> 	_syscall_3 3,%1,%2,%3
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length
    49                              <1> ; output: eax: written bytes
    50                              <1> %macro _syscall_write 3
    51                              <1> 	_syscall_3 4,%1,%2,%3
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    55                              <1> %macro 	PRINT 1
    56                              <1> 	pusha
    57                              <1> 	pushf
    58                              <1> 	jmp %%astr
    59                              <1> %%str	db	%1     ;, 0
    60                              <1> %%strln	equ	$-%%str
    61                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    62                              <1> 	popf
    63                              <1> 	popa
    64                              <1> %endmacro
    65                              <1> 
    66                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    67                              <1> %macro	PUTCHAR 1
    68                              <1> 	pusha
    69                              <1> 	pushf
    70                              <1> %ifstr %1
    71                              <1> 	mov	al, %1
    72                              <1> %elifnum %1
    73                              <1> 	mov	al, %1
    74                              <1> %elifidni %1,al
    75                              <1> 	nop
    76                              <1> %elifidni %1,ah
    77                              <1> 	mov	al, ah
    78                              <1> %elifidni %1,bl
    79                              <1> 	mov	al, bl
    80                              <1> %elifidni %1,bh
    81                              <1> 	mov	al, bh
    82                              <1> %elifidni %1,cl
    83                              <1> 	mov	al, cl
    84                              <1> %elifidni %1,ch
    85                              <1> 	mov	al, ch
    86                              <1> %elifidni %1,dl
    87                              <1> 	mov	al, dl
    88                              <1> %elifidni %1,dh
    89                              <1> 	mov	al, dh
    90                              <1> %else
    91                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    92                              <1> %endif
    93                              <1> 	sub	esp, 2  ; reserve memory for buffer
    94                              <1> 	mov	edi, esp
    95                              <1> 	mov	[edi], al
    96                              <1> 	_syscall_write 1, edi, 1
    97                              <1> 	add	esp, 2
    98                              <1> 	popf
    99                              <1> 	popa
   100                              <1> %endmacro
   101                              <1> 
   102                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   103                              <1> %macro	GETCHAR 0
   104                              <1> 	pushf
   105                              <1> 	push	edi
   106                              <1> 	sub	esp, 2
   107                              <1> 	mov	edi, esp
   108                              <1> 	_syscall_read 0, edi, 1
   109                              <1> 	cmp	eax, 1
   110                              <1> 	jne	%%eof_reached
   111                              <1> 	xor	eax,eax
   112                              <1> 	mov	al, [edi]
   113                              <1> 	jmp	%%gcquit
   114                              <1> %%eof_reached:
   115                              <1> 	xor	eax, eax
   116                              <1> 	not	eax 		; eax := -1
   117                              <1> %%gcquit:
   118                              <1> 	add	esp, 2
   119                              <1> 	pop	edi
   120                              <1> 	popf
   121                              <1> %endmacro
   122                              <1> 
   123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   124                              <1> %macro FINISH 0-1 0
   125                              <1> 	_syscall_exit %1
   126                              <1> %endmacro
   127                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   128                              <1> %macro UNSINT 1
   129                              <1> pusha
   130                              <1> pushf
   131                              <1> push dword %1
   132                              <1> pop eax
   133                              <1> mov edi,eax
   134                              <1> mov esi,10
   135                              <1>   xor ebx,ebx
   136                              <1> %%m1:
   137                              <1>    xor edx,edx
   138                              <1>    div esi
   139                              <1>    inc ebx
   140                              <1>    cmp eax,0
   141                              <1>    jne %%m1
   142                              <1> 
   143                              <1>    mov eax,1
   144                              <1>    mov ecx,ebx
   145                              <1>    dec ecx
   146                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   147                              <1>     cmp ecx,0
   148                              <1>      je %%m4
   149                              <1> %%m2:  mul esi
   150                              <1>        loop %%m2
   151                              <1> 
   152                              <1>        mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:
   155                              <1>       mov eax,edi
   156                              <1>       xor edx,edx
   157                              <1>       div ebx
   158                              <1>       add al,'0'
   159                              <1>       PUTCHAR al
   160                              <1>       mov edi,edx
   161                              <1>       xor edx,edx
   162                              <1>       mov eax,ebx
   163                              <1>       div esi
   164                              <1>       cmp eax,1
   165                              <1>       je %%m4
   166                              <1>       mov ebx,eax
   167                              <1>       jmp %%m3
   168                              <1>  %%m4:
   169                              <1>       mov edx,edi
   170                              <1>       add dl,'0'
   171                              <1>       PUTCHAR dl
   172                              <1> 
   173                              <1> 
   174                              <1> popf
   175                              <1> popa
   176                              <1> %endmacro
   177                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                              <1> %macro SIGNINT 1
   179                              <1> pusha
   180                              <1> pushf
   181                              <1> push dword %1
   182                              <1> pop eax
   183                              <1>     cmp eax,0
   184                              <1>     jge %%m5
   185                              <1>     PUTCHAR '-'
   186                              <1>     neg eax
   187                              <1> %%m5:
   188                              <1>       UNSINT eax
   189                              <1> popf
   190                              <1> popa
   191                              <1> %endmacro
   192                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   193                              <1> %macro GETUN 1
   194                              <1> pushad
   195                              <1> pushfd
   196                              <1> ;;;;;;;;;;;;;;;;;;;;;;
   197                              <1> xor edi,edi
   198                              <1> xor esi,esi
   199                              <1> %%m1:
   200                              <1> GETCHAR
   201                              <1> cmp al,0xA
   202                              <1> je %%m2
   203                              <1> cmp al,'0'
   204                              <1> jb %%m_err
   205                              <1> cmp al,'9'
   206                              <1> ja %%m_err
   207                              <1> inc edi
   208                              <1> xor ecx,ecx
   209                              <1> mov cl,al
   210                              <1> mov eax,esi
   211                              <1> mov ebx,10
   212                              <1> mul ebx
   213                              <1> sub cl,48
   214                              <1> add eax,ecx
   215                              <1> jc %%m3
   216                              <1> mov esi,eax
   217                              <1> jmp %%m1
   218                              <1> %%m2:
   219                              <1> cmp edi,0
   220                              <1> je %%m1
   221                              <1> jmp %%m4
   222                              <1> %%m3: PRINT "too big number"
   223                              <1> PUTCHAR 10
   224                              <1> jmp %%m4
   225                              <1> %%m_err: PRINT "ERROR!!!"
   226                              <1> PUTCHAR 0xa
   227                              <1> %%m4:
   228                              <1> ;;;;;;;;;;;;;;;;;;
   229                              <1> push esi
   230                              <1> add esp,4
   231                              <1> popfd
   232                              <1> popad
   233                              <1> sub esp,40
   234                              <1> pop dword %1
   235                              <1> add esp,36
   236                              <1> %endmacro
   237                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   238                              <1> %macro GETSIG 1
   239                              <1> pushad
   240                              <1> pushfd
   241                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   242                              <1> xor edi,edi
   243                              <1> xor esi,esi
   244                              <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   246                              <1> cmp al,0xa
   247                              <1> je %%m_st1
   248                              <1> cmp al,'-'
   249                              <1> jne %%s1
   250                              <1> mov ebx,-10
   251                              <1> push ebx
   252                              <1> GETCHAR
   253                              <1> cmp al,0xa
   254                              <1> je %%m_err
   255                              <1> jmp %%m_st21
   256                              <1> %%s1: push ebx
   257                              <1> cmp al,'+'
   258                              <1> jne %%m_st21
   259                              <1> GETCHAR
   260                              <1> cmp al,0xa
   261                              <1> je %%m_err
   262                              <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   264                              <1> %%m_st21:  cmp al,0xa
   265                              <1> je %%pr_end
   266                              <1> cmp al,'0'
   267                              <1> jb %%m_err
   268                              <1> cmp al,'9'
   269                              <1> ja %%m_err
   270                              <1> inc edi
   271                              <1> xor ecx,ecx
   272                              <1> mov cl,al
   273                              <1> mov eax,esi
   274                              <1> imul ebx
   275                              <1> sub cl,48
   276                              <1> cmp dword[esp],-10
   277                              <1> je %%j_s
   278                              <1> add eax,ecx
   279                              <1> jmp %%j_per
   280                              <1> %%j_s: sub eax,ecx
   281                              <1> %%j_per: jo %%m_b
   282                              <1> mov esi,eax
   283                              <1> cmp dword[esp],-10
   284                              <1> jne %%m_st2
   285                              <1> neg esi
   286                              <1> jmp %%m_st2
   287                              <1> %%pr_end:  cmp edi,0
   288                              <1> je %%m_st2
   289                              <1> jmp %%m_k
   290                              <1> ;;;;;;;;;
   291                              <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
   293                              <1> PUTCHAR 0xa
   294                              <1> jmp %%m_end
   295                              <1> %%m_b: pop ebx
   296                              <1> cmp ebx,-10
   297                              <1> je  %%m_l
   298                              <1> PRINT "too big"
   299                              <1> PUTCHAR 0xa
   300                              <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   302                              <1> PUTCHAR 0xa
   303                              <1> jmp %%m_end
   304                              <1> %%m_k: pop ebx
   305                              <1> cmp ebx,-10
   306                              <1> jne %%m_p
   307                              <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> 
   312                              <1> push esi
   313                              <1> add esp,4
   314                              <1> popfd
   315                              <1> popad
   316                              <1> sub esp,40
   317                              <1> pop dword %1
   318                              <1> add esp,36
   319                              <1> jmp %%mm_e
   320                              <1> %%m_end:
   321                              <1> popfd
   322                              <1> popad
   323                              <1> %%mm_e:
   324                              <1> %endmacro
     2                                  
     3                                  
     4                                  ;6.	Вычислить значение z
     5                                  ;
     6                                  ;z=10*a/(a+b)+10*b/(c+d)
     7                                  ;
     8                                  ;a, b, c – байт со знаком
     9                                  ;d        -  слово со знаком
    10                                  
    11                                  
    12                                  section .bss
    13 00000000 ??                          a resb 1
    14 00000001 ??                          b resb 1
    15 00000002 ??                          c resb 1
    16 00000003 ????                        d resw 1
    17                                  
    18                                  section .text
    19                                      global _start
    20                                  
    21                                  _start:
    22                                      PRINT "Введите a: "
    56 00000000 60                  <1>  pusha
    57 00000001 9C                  <1>  pushf
    58 00000002 EB12                <1>  jmp %%astr
    59 00000004 D092D0B2D0B5D0B4D0- <1> %%str db %1
    59 0000000D B8D182D0B520613A20  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@3.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000016 52                  <3>  push edx
    16 00000017 51                  <3>  push ecx
    17 00000018 53                  <3>  push ebx
    18 00000019 6A04                <3>  push %1
    19 0000001B 6A01                <3>  push %2
    20 0000001D 68[04000000]        <3>  push %3
    21 00000022 6A12                <3>  push %4
    22 00000024 5A                  <3>  pop edx
    23 00000025 59                  <3>  pop ecx
    24 00000026 5B                  <3>  pop ebx
    25 00000027 58                  <3>  pop eax
    26 00000028 CD80                <3>  int 0x80
    27 0000002A 5B                  <3>  pop ebx
    28 0000002B 59                  <3>  pop ecx
    29 0000002C 5A                  <3>  pop edx
    62 0000002D 9D                  <1>  popf
    63 0000002E 61                  <1>  popa
    23                                      GETSIG dword [a]
   239 0000002F 60                  <1> pushad
   240 00000030 9C                  <1> pushfd
   241                              <1> 
   242 00000031 31FF                <1> xor edi,edi
   243 00000033 31F6                <1> xor esi,esi
   244 00000035 BB0A000000          <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   245                              <2> ..@6.m_st1: 
   104 0000003A 9C                  <2>  pushf
   105 0000003B 57                  <2>  push edi
   106 0000003C 83EC02              <2>  sub esp, 2
   107 0000003F 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000041 52                  <4>  push edx
    16 00000042 51                  <4>  push ecx
    17 00000043 53                  <4>  push ebx
    18 00000044 6A03                <4>  push %1
    19 00000046 6A00                <4>  push %2
    20 00000048 57                  <4>  push %3
    21 00000049 6A01                <4>  push %4
    22 0000004B 5A                  <4>  pop edx
    23 0000004C 59                  <4>  pop ecx
    24 0000004D 5B                  <4>  pop ebx
    25 0000004E 58                  <4>  pop eax
    26 0000004F CD80                <4>  int 0x80
    27 00000051 5B                  <4>  pop ebx
    28 00000052 59                  <4>  pop ecx
    29 00000053 5A                  <4>  pop edx
   109 00000054 83F801              <2>  cmp eax, 1
   110 00000057 7506                <2>  jne %%eof_reached
   111 00000059 31C0                <2>  xor eax,eax
   112 0000005B 8A07                <2>  mov al, [edi]
   113 0000005D EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 0000005F 31C0                <2>  xor eax, eax
   116 00000061 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000063 83C402              <2>  add esp, 2
   119 00000066 5F                  <2>  pop edi
   120 00000067 9D                  <2>  popf
   246 00000068 3C0A                <1> cmp al,0xa
   247 0000006A 74CE                <1> je %%m_st1
   248 0000006C 3C2D                <1> cmp al,'-'
   249 0000006E 753E                <1> jne %%s1
   250 00000070 BBF6FFFFFF          <1> mov ebx,-10
   251 00000075 53                  <1> push ebx
   252                              <1> GETCHAR
   104 00000076 9C                  <2>  pushf
   105 00000077 57                  <2>  push edi
   106 00000078 83EC02              <2>  sub esp, 2
   107 0000007B 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 0000007D 52                  <4>  push edx
    16 0000007E 51                  <4>  push ecx
    17 0000007F 53                  <4>  push ebx
    18 00000080 6A03                <4>  push %1
    19 00000082 6A00                <4>  push %2
    20 00000084 57                  <4>  push %3
    21 00000085 6A01                <4>  push %4
    22 00000087 5A                  <4>  pop edx
    23 00000088 59                  <4>  pop ecx
    24 00000089 5B                  <4>  pop ebx
    25 0000008A 58                  <4>  pop eax
    26 0000008B CD80                <4>  int 0x80
    27 0000008D 5B                  <4>  pop ebx
    28 0000008E 59                  <4>  pop ecx
    29 0000008F 5A                  <4>  pop edx
   109 00000090 83F801              <2>  cmp eax, 1
   110 00000093 7506                <2>  jne %%eof_reached
   111 00000095 31C0                <2>  xor eax,eax
   112 00000097 8A07                <2>  mov al, [edi]
   113 00000099 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 0000009B 31C0                <2>  xor eax, eax
   116 0000009D F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 0000009F 83C402              <2>  add esp, 2
   119 000000A2 5F                  <2>  pop edi
   120 000000A3 9D                  <2>  popf
   253 000000A4 3C0A                <1> cmp al,0xa
   254 000000A6 0F84A5000000        <1> je %%m_err
   255 000000AC EB67                <1> jmp %%m_st21
   256 000000AE 53                  <1> %%s1: push ebx
   257 000000AF 3C2B                <1> cmp al,'+'
   258 000000B1 7562                <1> jne %%m_st21
   259                              <1> GETCHAR
   104 000000B3 9C                  <2>  pushf
   105 000000B4 57                  <2>  push edi
   106 000000B5 83EC02              <2>  sub esp, 2
   107 000000B8 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 000000BA 52                  <4>  push edx
    16 000000BB 51                  <4>  push ecx
    17 000000BC 53                  <4>  push ebx
    18 000000BD 6A03                <4>  push %1
    19 000000BF 6A00                <4>  push %2
    20 000000C1 57                  <4>  push %3
    21 000000C2 6A01                <4>  push %4
    22 000000C4 5A                  <4>  pop edx
    23 000000C5 59                  <4>  pop ecx
    24 000000C6 5B                  <4>  pop ebx
    25 000000C7 58                  <4>  pop eax
    26 000000C8 CD80                <4>  int 0x80
    27 000000CA 5B                  <4>  pop ebx
    28 000000CB 59                  <4>  pop ecx
    29 000000CC 5A                  <4>  pop edx
   109 000000CD 83F801              <2>  cmp eax, 1
   110 000000D0 7506                <2>  jne %%eof_reached
   111 000000D2 31C0                <2>  xor eax,eax
   112 000000D4 8A07                <2>  mov al, [edi]
   113 000000D6 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 000000D8 31C0                <2>  xor eax, eax
   116 000000DA F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 000000DC 83C402              <2>  add esp, 2
   119 000000DF 5F                  <2>  pop edi
   120 000000E0 9D                  <2>  popf
   260 000000E1 3C0A                <1> cmp al,0xa
   261 000000E3 746C                <1> je %%m_err
   262 000000E5 EB2E                <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   263                              <2> ..@6.m_st2: 
   104 000000E7 9C                  <2>  pushf
   105 000000E8 57                  <2>  push edi
   106 000000E9 83EC02              <2>  sub esp, 2
   107 000000EC 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 000000EE 52                  <4>  push edx
    16 000000EF 51                  <4>  push ecx
    17 000000F0 53                  <4>  push ebx
    18 000000F1 6A03                <4>  push %1
    19 000000F3 6A00                <4>  push %2
    20 000000F5 57                  <4>  push %3
    21 000000F6 6A01                <4>  push %4
    22 000000F8 5A                  <4>  pop edx
    23 000000F9 59                  <4>  pop ecx
    24 000000FA 5B                  <4>  pop ebx
    25 000000FB 58                  <4>  pop eax
    26 000000FC CD80                <4>  int 0x80
    27 000000FE 5B                  <4>  pop ebx
    28 000000FF 59                  <4>  pop ecx
    29 00000100 5A                  <4>  pop edx
   109 00000101 83F801              <2>  cmp eax, 1
   110 00000104 7506                <2>  jne %%eof_reached
   111 00000106 31C0                <2>  xor eax,eax
   112 00000108 8A07                <2>  mov al, [edi]
   113 0000010A EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 0000010C 31C0                <2>  xor eax, eax
   116 0000010E F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000110 83C402              <2>  add esp, 2
   119 00000113 5F                  <2>  pop edi
   120 00000114 9D                  <2>  popf
   264 00000115 3C0A                <1> %%m_st21: cmp al,0xa
   265 00000117 742E                <1> je %%pr_end
   266 00000119 3C30                <1> cmp al,'0'
   267 0000011B 7234                <1> jb %%m_err
   268 0000011D 3C39                <1> cmp al,'9'
   269 0000011F 7730                <1> ja %%m_err
   270 00000121 47                  <1> inc edi
   271 00000122 31C9                <1> xor ecx,ecx
   272 00000124 88C1                <1> mov cl,al
   273 00000126 89F0                <1> mov eax,esi
   274 00000128 F7EB                <1> imul ebx
   275 0000012A 80E930              <1> sub cl,48
   276 0000012D 833C24F6            <1> cmp dword[esp],-10
   277 00000131 7404                <1> je %%j_s
   278 00000133 01C8                <1> add eax,ecx
   279 00000135 EB02                <1> jmp %%j_per
   280 00000137 29C8                <1> %%j_s: sub eax,ecx
   281 00000139 7061                <1> %%j_per: jo %%m_b
   282 0000013B 89C6                <1> mov esi,eax
   283 0000013D 833C24F6            <1> cmp dword[esp],-10
   284 00000141 75A4                <1> jne %%m_st2
   285 00000143 F7DE                <1> neg esi
   286 00000145 EBA0                <1> jmp %%m_st2
   287 00000147 83FF00              <1> %%pr_end: cmp edi,0
   288 0000014A 749B                <1> je %%m_st2
   289 0000014C E9E4000000          <1> jmp %%m_k
   290                              <1> 
   291 00000151 5B                  <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
    56 00000152 60                  <2>  pusha
    57 00000153 9C                  <2>  pushf
    58 00000154 EB05                <2>  jmp %%astr
    59 00000156 4552524F52          <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@19.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000015B 52                  <4>  push edx
    16 0000015C 51                  <4>  push ecx
    17 0000015D 53                  <4>  push ebx
    18 0000015E 6A04                <4>  push %1
    19 00000160 6A01                <4>  push %2
    20 00000162 68[56010000]        <4>  push %3
    21 00000167 6A05                <4>  push %4
    22 00000169 5A                  <4>  pop edx
    23 0000016A 59                  <4>  pop ecx
    24 0000016B 5B                  <4>  pop ebx
    25 0000016C 58                  <4>  pop eax
    26 0000016D CD80                <4>  int 0x80
    27 0000016F 5B                  <4>  pop ebx
    28 00000170 59                  <4>  pop ecx
    29 00000171 5A                  <4>  pop edx
    62 00000172 9D                  <2>  popf
    63 00000173 61                  <2>  popa
   293                              <1> PUTCHAR 0xa
    68 00000174 60                  <2>  pusha
    69 00000175 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 00000176 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000178 83EC02              <2>  sub esp, 2
    94 0000017B 89E7                <2>  mov edi, esp
    95 0000017D 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000017F 52                  <4>  push edx
    16 00000180 51                  <4>  push ecx
    17 00000181 53                  <4>  push ebx
    18 00000182 6A04                <4>  push %1
    19 00000184 6A01                <4>  push %2
    20 00000186 57                  <4>  push %3
    21 00000187 6A01                <4>  push %4
    22 00000189 5A                  <4>  pop edx
    23 0000018A 59                  <4>  pop ecx
    24 0000018B 5B                  <4>  pop ebx
    25 0000018C 58                  <4>  pop eax
    26 0000018D CD80                <4>  int 0x80
    27 0000018F 5B                  <4>  pop ebx
    28 00000190 59                  <4>  pop ecx
    29 00000191 5A                  <4>  pop edx
    97 00000192 83C402              <2>  add esp, 2
    98 00000195 9D                  <2>  popf
    99 00000196 61                  <2>  popa
   294 00000197 E9B5000000          <1> jmp %%m_end
   295 0000019C 5B                  <1> %%m_b: pop ebx
   296 0000019D 83FBF6              <1> cmp ebx,-10
   297 000001A0 7449                <1> je %%m_l
   298                              <1> PRINT "too big"
    56 000001A2 60                  <2>  pusha
    57 000001A3 9C                  <2>  pushf
    58 000001A4 EB07                <2>  jmp %%astr
    59 000001A6 746F6F20626967      <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@25.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000001AD 52                  <4>  push edx
    16 000001AE 51                  <4>  push ecx
    17 000001AF 53                  <4>  push ebx
    18 000001B0 6A04                <4>  push %1
    19 000001B2 6A01                <4>  push %2
    20 000001B4 68[A6010000]        <4>  push %3
    21 000001B9 6A07                <4>  push %4
    22 000001BB 5A                  <4>  pop edx
    23 000001BC 59                  <4>  pop ecx
    24 000001BD 5B                  <4>  pop ebx
    25 000001BE 58                  <4>  pop eax
    26 000001BF CD80                <4>  int 0x80
    27 000001C1 5B                  <4>  pop ebx
    28 000001C2 59                  <4>  pop ecx
    29 000001C3 5A                  <4>  pop edx
    62 000001C4 9D                  <2>  popf
    63 000001C5 61                  <2>  popa
   299                              <1> PUTCHAR 0xa
    68 000001C6 60                  <2>  pusha
    69 000001C7 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 000001C8 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000001CA 83EC02              <2>  sub esp, 2
    94 000001CD 89E7                <2>  mov edi, esp
    95 000001CF 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000001D1 52                  <4>  push edx
    16 000001D2 51                  <4>  push ecx
    17 000001D3 53                  <4>  push ebx
    18 000001D4 6A04                <4>  push %1
    19 000001D6 6A01                <4>  push %2
    20 000001D8 57                  <4>  push %3
    21 000001D9 6A01                <4>  push %4
    22 000001DB 5A                  <4>  pop edx
    23 000001DC 59                  <4>  pop ecx
    24 000001DD 5B                  <4>  pop ebx
    25 000001DE 58                  <4>  pop eax
    26 000001DF CD80                <4>  int 0x80
    27 000001E1 5B                  <4>  pop ebx
    28 000001E2 59                  <4>  pop ecx
    29 000001E3 5A                  <4>  pop edx
    97 000001E4 83C402              <2>  add esp, 2
    98 000001E7 9D                  <2>  popf
    99 000001E8 61                  <2>  popa
   300 000001E9 EB66                <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   301                              <2> ..@6.m_l: 
    56 000001EB 60                  <2>  pusha
    57 000001EC 9C                  <2>  pushf
    58 000001ED EB08                <2>  jmp %%astr
    59 000001EF 746F6F206C657373    <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@31.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000001F7 52                  <4>  push edx
    16 000001F8 51                  <4>  push ecx
    17 000001F9 53                  <4>  push ebx
    18 000001FA 6A04                <4>  push %1
    19 000001FC 6A01                <4>  push %2
    20 000001FE 68[EF010000]        <4>  push %3
    21 00000203 6A08                <4>  push %4
    22 00000205 5A                  <4>  pop edx
    23 00000206 59                  <4>  pop ecx
    24 00000207 5B                  <4>  pop ebx
    25 00000208 58                  <4>  pop eax
    26 00000209 CD80                <4>  int 0x80
    27 0000020B 5B                  <4>  pop ebx
    28 0000020C 59                  <4>  pop ecx
    29 0000020D 5A                  <4>  pop edx
    62 0000020E 9D                  <2>  popf
    63 0000020F 61                  <2>  popa
   302                              <1> PUTCHAR 0xa
    68 00000210 60                  <2>  pusha
    69 00000211 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 00000212 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000214 83EC02              <2>  sub esp, 2
    94 00000217 89E7                <2>  mov edi, esp
    95 00000219 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000021B 52                  <4>  push edx
    16 0000021C 51                  <4>  push ecx
    17 0000021D 53                  <4>  push ebx
    18 0000021E 6A04                <4>  push %1
    19 00000220 6A01                <4>  push %2
    20 00000222 57                  <4>  push %3
    21 00000223 6A01                <4>  push %4
    22 00000225 5A                  <4>  pop edx
    23 00000226 59                  <4>  pop ecx
    24 00000227 5B                  <4>  pop ebx
    25 00000228 58                  <4>  pop eax
    26 00000229 CD80                <4>  int 0x80
    27 0000022B 5B                  <4>  pop ebx
    28 0000022C 59                  <4>  pop ecx
    29 0000022D 5A                  <4>  pop edx
    97 0000022E 83C402              <2>  add esp, 2
    98 00000231 9D                  <2>  popf
    99 00000232 61                  <2>  popa
   303 00000233 EB1C                <1> jmp %%m_end
   304 00000235 5B                  <1> %%m_k: pop ebx
   305 00000236 83FBF6              <1> cmp ebx,-10
   306 00000239 7502                <1> jne %%m_p
   307 0000023B F7DE                <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> 
   311                              <1> 
   312 0000023D 56                  <1> push esi
   313 0000023E 83C404              <1> add esp,4
   314 00000241 9D                  <1> popfd
   315 00000242 61                  <1> popad
   316 00000243 83EC28              <1> sub esp,40
   317 00000246 8F05[00000000]      <1> pop dword %1
   318 0000024C 83C424              <1> add esp,36
   319 0000024F EB02                <1> jmp %%mm_e
   320                              <1> %%m_end:
   321 00000251 9D                  <1> popfd
   322 00000252 61                  <1> popad
   323                              <1> %%mm_e:
    24                                  
    25                                      PRINT "Введите b: "
    56 00000253 60                  <1>  pusha
    57 00000254 9C                  <1>  pushf
    58 00000255 EB12                <1>  jmp %%astr
    59 00000257 D092D0B2D0B5D0B4D0- <1> %%str db %1
    59 00000260 B8D182D0B520623A20  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@37.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000269 52                  <3>  push edx
    16 0000026A 51                  <3>  push ecx
    17 0000026B 53                  <3>  push ebx
    18 0000026C 6A04                <3>  push %1
    19 0000026E 6A01                <3>  push %2
    20 00000270 68[57020000]        <3>  push %3
    21 00000275 6A12                <3>  push %4
    22 00000277 5A                  <3>  pop edx
    23 00000278 59                  <3>  pop ecx
    24 00000279 5B                  <3>  pop ebx
    25 0000027A 58                  <3>  pop eax
    26 0000027B CD80                <3>  int 0x80
    27 0000027D 5B                  <3>  pop ebx
    28 0000027E 59                  <3>  pop ecx
    29 0000027F 5A                  <3>  pop edx
    62 00000280 9D                  <1>  popf
    63 00000281 61                  <1>  popa
    26                                      GETSIG dword [b]
   239 00000282 60                  <1> pushad
   240 00000283 9C                  <1> pushfd
   241                              <1> 
   242 00000284 31FF                <1> xor edi,edi
   243 00000286 31F6                <1> xor esi,esi
   244 00000288 BB0A000000          <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   245                              <2> ..@40.m_st1: 
   104 0000028D 9C                  <2>  pushf
   105 0000028E 57                  <2>  push edi
   106 0000028F 83EC02              <2>  sub esp, 2
   107 00000292 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000294 52                  <4>  push edx
    16 00000295 51                  <4>  push ecx
    17 00000296 53                  <4>  push ebx
    18 00000297 6A03                <4>  push %1
    19 00000299 6A00                <4>  push %2
    20 0000029B 57                  <4>  push %3
    21 0000029C 6A01                <4>  push %4
    22 0000029E 5A                  <4>  pop edx
    23 0000029F 59                  <4>  pop ecx
    24 000002A0 5B                  <4>  pop ebx
    25 000002A1 58                  <4>  pop eax
    26 000002A2 CD80                <4>  int 0x80
    27 000002A4 5B                  <4>  pop ebx
    28 000002A5 59                  <4>  pop ecx
    29 000002A6 5A                  <4>  pop edx
   109 000002A7 83F801              <2>  cmp eax, 1
   110 000002AA 7506                <2>  jne %%eof_reached
   111 000002AC 31C0                <2>  xor eax,eax
   112 000002AE 8A07                <2>  mov al, [edi]
   113 000002B0 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 000002B2 31C0                <2>  xor eax, eax
   116 000002B4 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 000002B6 83C402              <2>  add esp, 2
   119 000002B9 5F                  <2>  pop edi
   120 000002BA 9D                  <2>  popf
   246 000002BB 3C0A                <1> cmp al,0xa
   247 000002BD 74CE                <1> je %%m_st1
   248 000002BF 3C2D                <1> cmp al,'-'
   249 000002C1 753E                <1> jne %%s1
   250 000002C3 BBF6FFFFFF          <1> mov ebx,-10
   251 000002C8 53                  <1> push ebx
   252                              <1> GETCHAR
   104 000002C9 9C                  <2>  pushf
   105 000002CA 57                  <2>  push edi
   106 000002CB 83EC02              <2>  sub esp, 2
   107 000002CE 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 000002D0 52                  <4>  push edx
    16 000002D1 51                  <4>  push ecx
    17 000002D2 53                  <4>  push ebx
    18 000002D3 6A03                <4>  push %1
    19 000002D5 6A00                <4>  push %2
    20 000002D7 57                  <4>  push %3
    21 000002D8 6A01                <4>  push %4
    22 000002DA 5A                  <4>  pop edx
    23 000002DB 59                  <4>  pop ecx
    24 000002DC 5B                  <4>  pop ebx
    25 000002DD 58                  <4>  pop eax
    26 000002DE CD80                <4>  int 0x80
    27 000002E0 5B                  <4>  pop ebx
    28 000002E1 59                  <4>  pop ecx
    29 000002E2 5A                  <4>  pop edx
   109 000002E3 83F801              <2>  cmp eax, 1
   110 000002E6 7506                <2>  jne %%eof_reached
   111 000002E8 31C0                <2>  xor eax,eax
   112 000002EA 8A07                <2>  mov al, [edi]
   113 000002EC EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 000002EE 31C0                <2>  xor eax, eax
   116 000002F0 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 000002F2 83C402              <2>  add esp, 2
   119 000002F5 5F                  <2>  pop edi
   120 000002F6 9D                  <2>  popf
   253 000002F7 3C0A                <1> cmp al,0xa
   254 000002F9 0F84A5000000        <1> je %%m_err
   255 000002FF EB67                <1> jmp %%m_st21
   256 00000301 53                  <1> %%s1: push ebx
   257 00000302 3C2B                <1> cmp al,'+'
   258 00000304 7562                <1> jne %%m_st21
   259                              <1> GETCHAR
   104 00000306 9C                  <2>  pushf
   105 00000307 57                  <2>  push edi
   106 00000308 83EC02              <2>  sub esp, 2
   107 0000030B 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 0000030D 52                  <4>  push edx
    16 0000030E 51                  <4>  push ecx
    17 0000030F 53                  <4>  push ebx
    18 00000310 6A03                <4>  push %1
    19 00000312 6A00                <4>  push %2
    20 00000314 57                  <4>  push %3
    21 00000315 6A01                <4>  push %4
    22 00000317 5A                  <4>  pop edx
    23 00000318 59                  <4>  pop ecx
    24 00000319 5B                  <4>  pop ebx
    25 0000031A 58                  <4>  pop eax
    26 0000031B CD80                <4>  int 0x80
    27 0000031D 5B                  <4>  pop ebx
    28 0000031E 59                  <4>  pop ecx
    29 0000031F 5A                  <4>  pop edx
   109 00000320 83F801              <2>  cmp eax, 1
   110 00000323 7506                <2>  jne %%eof_reached
   111 00000325 31C0                <2>  xor eax,eax
   112 00000327 8A07                <2>  mov al, [edi]
   113 00000329 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 0000032B 31C0                <2>  xor eax, eax
   116 0000032D F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 0000032F 83C402              <2>  add esp, 2
   119 00000332 5F                  <2>  pop edi
   120 00000333 9D                  <2>  popf
   260 00000334 3C0A                <1> cmp al,0xa
   261 00000336 746C                <1> je %%m_err
   262 00000338 EB2E                <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   263                              <2> ..@40.m_st2: 
   104 0000033A 9C                  <2>  pushf
   105 0000033B 57                  <2>  push edi
   106 0000033C 83EC02              <2>  sub esp, 2
   107 0000033F 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000341 52                  <4>  push edx
    16 00000342 51                  <4>  push ecx
    17 00000343 53                  <4>  push ebx
    18 00000344 6A03                <4>  push %1
    19 00000346 6A00                <4>  push %2
    20 00000348 57                  <4>  push %3
    21 00000349 6A01                <4>  push %4
    22 0000034B 5A                  <4>  pop edx
    23 0000034C 59                  <4>  pop ecx
    24 0000034D 5B                  <4>  pop ebx
    25 0000034E 58                  <4>  pop eax
    26 0000034F CD80                <4>  int 0x80
    27 00000351 5B                  <4>  pop ebx
    28 00000352 59                  <4>  pop ecx
    29 00000353 5A                  <4>  pop edx
   109 00000354 83F801              <2>  cmp eax, 1
   110 00000357 7506                <2>  jne %%eof_reached
   111 00000359 31C0                <2>  xor eax,eax
   112 0000035B 8A07                <2>  mov al, [edi]
   113 0000035D EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 0000035F 31C0                <2>  xor eax, eax
   116 00000361 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000363 83C402              <2>  add esp, 2
   119 00000366 5F                  <2>  pop edi
   120 00000367 9D                  <2>  popf
   264 00000368 3C0A                <1> %%m_st21: cmp al,0xa
   265 0000036A 742E                <1> je %%pr_end
   266 0000036C 3C30                <1> cmp al,'0'
   267 0000036E 7234                <1> jb %%m_err
   268 00000370 3C39                <1> cmp al,'9'
   269 00000372 7730                <1> ja %%m_err
   270 00000374 47                  <1> inc edi
   271 00000375 31C9                <1> xor ecx,ecx
   272 00000377 88C1                <1> mov cl,al
   273 00000379 89F0                <1> mov eax,esi
   274 0000037B F7EB                <1> imul ebx
   275 0000037D 80E930              <1> sub cl,48
   276 00000380 833C24F6            <1> cmp dword[esp],-10
   277 00000384 7404                <1> je %%j_s
   278 00000386 01C8                <1> add eax,ecx
   279 00000388 EB02                <1> jmp %%j_per
   280 0000038A 29C8                <1> %%j_s: sub eax,ecx
   281 0000038C 7061                <1> %%j_per: jo %%m_b
   282 0000038E 89C6                <1> mov esi,eax
   283 00000390 833C24F6            <1> cmp dword[esp],-10
   284 00000394 75A4                <1> jne %%m_st2
   285 00000396 F7DE                <1> neg esi
   286 00000398 EBA0                <1> jmp %%m_st2
   287 0000039A 83FF00              <1> %%pr_end: cmp edi,0
   288 0000039D 749B                <1> je %%m_st2
   289 0000039F E9E4000000          <1> jmp %%m_k
   290                              <1> 
   291 000003A4 5B                  <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
    56 000003A5 60                  <2>  pusha
    57 000003A6 9C                  <2>  pushf
    58 000003A7 EB05                <2>  jmp %%astr
    59 000003A9 4552524F52          <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@53.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000003AE 52                  <4>  push edx
    16 000003AF 51                  <4>  push ecx
    17 000003B0 53                  <4>  push ebx
    18 000003B1 6A04                <4>  push %1
    19 000003B3 6A01                <4>  push %2
    20 000003B5 68[A9030000]        <4>  push %3
    21 000003BA 6A05                <4>  push %4
    22 000003BC 5A                  <4>  pop edx
    23 000003BD 59                  <4>  pop ecx
    24 000003BE 5B                  <4>  pop ebx
    25 000003BF 58                  <4>  pop eax
    26 000003C0 CD80                <4>  int 0x80
    27 000003C2 5B                  <4>  pop ebx
    28 000003C3 59                  <4>  pop ecx
    29 000003C4 5A                  <4>  pop edx
    62 000003C5 9D                  <2>  popf
    63 000003C6 61                  <2>  popa
   293                              <1> PUTCHAR 0xa
    68 000003C7 60                  <2>  pusha
    69 000003C8 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 000003C9 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000003CB 83EC02              <2>  sub esp, 2
    94 000003CE 89E7                <2>  mov edi, esp
    95 000003D0 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000003D2 52                  <4>  push edx
    16 000003D3 51                  <4>  push ecx
    17 000003D4 53                  <4>  push ebx
    18 000003D5 6A04                <4>  push %1
    19 000003D7 6A01                <4>  push %2
    20 000003D9 57                  <4>  push %3
    21 000003DA 6A01                <4>  push %4
    22 000003DC 5A                  <4>  pop edx
    23 000003DD 59                  <4>  pop ecx
    24 000003DE 5B                  <4>  pop ebx
    25 000003DF 58                  <4>  pop eax
    26 000003E0 CD80                <4>  int 0x80
    27 000003E2 5B                  <4>  pop ebx
    28 000003E3 59                  <4>  pop ecx
    29 000003E4 5A                  <4>  pop edx
    97 000003E5 83C402              <2>  add esp, 2
    98 000003E8 9D                  <2>  popf
    99 000003E9 61                  <2>  popa
   294 000003EA E9B5000000          <1> jmp %%m_end
   295 000003EF 5B                  <1> %%m_b: pop ebx
   296 000003F0 83FBF6              <1> cmp ebx,-10
   297 000003F3 7449                <1> je %%m_l
   298                              <1> PRINT "too big"
    56 000003F5 60                  <2>  pusha
    57 000003F6 9C                  <2>  pushf
    58 000003F7 EB07                <2>  jmp %%astr
    59 000003F9 746F6F20626967      <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@59.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000400 52                  <4>  push edx
    16 00000401 51                  <4>  push ecx
    17 00000402 53                  <4>  push ebx
    18 00000403 6A04                <4>  push %1
    19 00000405 6A01                <4>  push %2
    20 00000407 68[F9030000]        <4>  push %3
    21 0000040C 6A07                <4>  push %4
    22 0000040E 5A                  <4>  pop edx
    23 0000040F 59                  <4>  pop ecx
    24 00000410 5B                  <4>  pop ebx
    25 00000411 58                  <4>  pop eax
    26 00000412 CD80                <4>  int 0x80
    27 00000414 5B                  <4>  pop ebx
    28 00000415 59                  <4>  pop ecx
    29 00000416 5A                  <4>  pop edx
    62 00000417 9D                  <2>  popf
    63 00000418 61                  <2>  popa
   299                              <1> PUTCHAR 0xa
    68 00000419 60                  <2>  pusha
    69 0000041A 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 0000041B B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000041D 83EC02              <2>  sub esp, 2
    94 00000420 89E7                <2>  mov edi, esp
    95 00000422 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000424 52                  <4>  push edx
    16 00000425 51                  <4>  push ecx
    17 00000426 53                  <4>  push ebx
    18 00000427 6A04                <4>  push %1
    19 00000429 6A01                <4>  push %2
    20 0000042B 57                  <4>  push %3
    21 0000042C 6A01                <4>  push %4
    22 0000042E 5A                  <4>  pop edx
    23 0000042F 59                  <4>  pop ecx
    24 00000430 5B                  <4>  pop ebx
    25 00000431 58                  <4>  pop eax
    26 00000432 CD80                <4>  int 0x80
    27 00000434 5B                  <4>  pop ebx
    28 00000435 59                  <4>  pop ecx
    29 00000436 5A                  <4>  pop edx
    97 00000437 83C402              <2>  add esp, 2
    98 0000043A 9D                  <2>  popf
    99 0000043B 61                  <2>  popa
   300 0000043C EB66                <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   301                              <2> ..@40.m_l: 
    56 0000043E 60                  <2>  pusha
    57 0000043F 9C                  <2>  pushf
    58 00000440 EB08                <2>  jmp %%astr
    59 00000442 746F6F206C657373    <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@65.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000044A 52                  <4>  push edx
    16 0000044B 51                  <4>  push ecx
    17 0000044C 53                  <4>  push ebx
    18 0000044D 6A04                <4>  push %1
    19 0000044F 6A01                <4>  push %2
    20 00000451 68[42040000]        <4>  push %3
    21 00000456 6A08                <4>  push %4
    22 00000458 5A                  <4>  pop edx
    23 00000459 59                  <4>  pop ecx
    24 0000045A 5B                  <4>  pop ebx
    25 0000045B 58                  <4>  pop eax
    26 0000045C CD80                <4>  int 0x80
    27 0000045E 5B                  <4>  pop ebx
    28 0000045F 59                  <4>  pop ecx
    29 00000460 5A                  <4>  pop edx
    62 00000461 9D                  <2>  popf
    63 00000462 61                  <2>  popa
   302                              <1> PUTCHAR 0xa
    68 00000463 60                  <2>  pusha
    69 00000464 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 00000465 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000467 83EC02              <2>  sub esp, 2
    94 0000046A 89E7                <2>  mov edi, esp
    95 0000046C 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000046E 52                  <4>  push edx
    16 0000046F 51                  <4>  push ecx
    17 00000470 53                  <4>  push ebx
    18 00000471 6A04                <4>  push %1
    19 00000473 6A01                <4>  push %2
    20 00000475 57                  <4>  push %3
    21 00000476 6A01                <4>  push %4
    22 00000478 5A                  <4>  pop edx
    23 00000479 59                  <4>  pop ecx
    24 0000047A 5B                  <4>  pop ebx
    25 0000047B 58                  <4>  pop eax
    26 0000047C CD80                <4>  int 0x80
    27 0000047E 5B                  <4>  pop ebx
    28 0000047F 59                  <4>  pop ecx
    29 00000480 5A                  <4>  pop edx
    97 00000481 83C402              <2>  add esp, 2
    98 00000484 9D                  <2>  popf
    99 00000485 61                  <2>  popa
   303 00000486 EB1C                <1> jmp %%m_end
   304 00000488 5B                  <1> %%m_k: pop ebx
   305 00000489 83FBF6              <1> cmp ebx,-10
   306 0000048C 7502                <1> jne %%m_p
   307 0000048E F7DE                <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> 
   311                              <1> 
   312 00000490 56                  <1> push esi
   313 00000491 83C404              <1> add esp,4
   314 00000494 9D                  <1> popfd
   315 00000495 61                  <1> popad
   316 00000496 83EC28              <1> sub esp,40
   317 00000499 8F05[01000000]      <1> pop dword %1
   318 0000049F 83C424              <1> add esp,36
   319 000004A2 EB02                <1> jmp %%mm_e
   320                              <1> %%m_end:
   321 000004A4 9D                  <1> popfd
   322 000004A5 61                  <1> popad
   323                              <1> %%mm_e:
    27                                  
    28                                      PRINT "Введите c: "
    56 000004A6 60                  <1>  pusha
    57 000004A7 9C                  <1>  pushf
    58 000004A8 EB12                <1>  jmp %%astr
    59 000004AA D092D0B2D0B5D0B4D0- <1> %%str db %1
    59 000004B3 B8D182D0B520633A20  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@71.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 000004BC 52                  <3>  push edx
    16 000004BD 51                  <3>  push ecx
    17 000004BE 53                  <3>  push ebx
    18 000004BF 6A04                <3>  push %1
    19 000004C1 6A01                <3>  push %2
    20 000004C3 68[AA040000]        <3>  push %3
    21 000004C8 6A12                <3>  push %4
    22 000004CA 5A                  <3>  pop edx
    23 000004CB 59                  <3>  pop ecx
    24 000004CC 5B                  <3>  pop ebx
    25 000004CD 58                  <3>  pop eax
    26 000004CE CD80                <3>  int 0x80
    27 000004D0 5B                  <3>  pop ebx
    28 000004D1 59                  <3>  pop ecx
    29 000004D2 5A                  <3>  pop edx
    62 000004D3 9D                  <1>  popf
    63 000004D4 61                  <1>  popa
    29                                      GETSIG dword [c]
   239 000004D5 60                  <1> pushad
   240 000004D6 9C                  <1> pushfd
   241                              <1> 
   242 000004D7 31FF                <1> xor edi,edi
   243 000004D9 31F6                <1> xor esi,esi
   244 000004DB BB0A000000          <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   245                              <2> ..@74.m_st1: 
   104 000004E0 9C                  <2>  pushf
   105 000004E1 57                  <2>  push edi
   106 000004E2 83EC02              <2>  sub esp, 2
   107 000004E5 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 000004E7 52                  <4>  push edx
    16 000004E8 51                  <4>  push ecx
    17 000004E9 53                  <4>  push ebx
    18 000004EA 6A03                <4>  push %1
    19 000004EC 6A00                <4>  push %2
    20 000004EE 57                  <4>  push %3
    21 000004EF 6A01                <4>  push %4
    22 000004F1 5A                  <4>  pop edx
    23 000004F2 59                  <4>  pop ecx
    24 000004F3 5B                  <4>  pop ebx
    25 000004F4 58                  <4>  pop eax
    26 000004F5 CD80                <4>  int 0x80
    27 000004F7 5B                  <4>  pop ebx
    28 000004F8 59                  <4>  pop ecx
    29 000004F9 5A                  <4>  pop edx
   109 000004FA 83F801              <2>  cmp eax, 1
   110 000004FD 7506                <2>  jne %%eof_reached
   111 000004FF 31C0                <2>  xor eax,eax
   112 00000501 8A07                <2>  mov al, [edi]
   113 00000503 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 00000505 31C0                <2>  xor eax, eax
   116 00000507 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000509 83C402              <2>  add esp, 2
   119 0000050C 5F                  <2>  pop edi
   120 0000050D 9D                  <2>  popf
   246 0000050E 3C0A                <1> cmp al,0xa
   247 00000510 74CE                <1> je %%m_st1
   248 00000512 3C2D                <1> cmp al,'-'
   249 00000514 753E                <1> jne %%s1
   250 00000516 BBF6FFFFFF          <1> mov ebx,-10
   251 0000051B 53                  <1> push ebx
   252                              <1> GETCHAR
   104 0000051C 9C                  <2>  pushf
   105 0000051D 57                  <2>  push edi
   106 0000051E 83EC02              <2>  sub esp, 2
   107 00000521 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000523 52                  <4>  push edx
    16 00000524 51                  <4>  push ecx
    17 00000525 53                  <4>  push ebx
    18 00000526 6A03                <4>  push %1
    19 00000528 6A00                <4>  push %2
    20 0000052A 57                  <4>  push %3
    21 0000052B 6A01                <4>  push %4
    22 0000052D 5A                  <4>  pop edx
    23 0000052E 59                  <4>  pop ecx
    24 0000052F 5B                  <4>  pop ebx
    25 00000530 58                  <4>  pop eax
    26 00000531 CD80                <4>  int 0x80
    27 00000533 5B                  <4>  pop ebx
    28 00000534 59                  <4>  pop ecx
    29 00000535 5A                  <4>  pop edx
   109 00000536 83F801              <2>  cmp eax, 1
   110 00000539 7506                <2>  jne %%eof_reached
   111 0000053B 31C0                <2>  xor eax,eax
   112 0000053D 8A07                <2>  mov al, [edi]
   113 0000053F EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 00000541 31C0                <2>  xor eax, eax
   116 00000543 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000545 83C402              <2>  add esp, 2
   119 00000548 5F                  <2>  pop edi
   120 00000549 9D                  <2>  popf
   253 0000054A 3C0A                <1> cmp al,0xa
   254 0000054C 0F84A5000000        <1> je %%m_err
   255 00000552 EB67                <1> jmp %%m_st21
   256 00000554 53                  <1> %%s1: push ebx
   257 00000555 3C2B                <1> cmp al,'+'
   258 00000557 7562                <1> jne %%m_st21
   259                              <1> GETCHAR
   104 00000559 9C                  <2>  pushf
   105 0000055A 57                  <2>  push edi
   106 0000055B 83EC02              <2>  sub esp, 2
   107 0000055E 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000560 52                  <4>  push edx
    16 00000561 51                  <4>  push ecx
    17 00000562 53                  <4>  push ebx
    18 00000563 6A03                <4>  push %1
    19 00000565 6A00                <4>  push %2
    20 00000567 57                  <4>  push %3
    21 00000568 6A01                <4>  push %4
    22 0000056A 5A                  <4>  pop edx
    23 0000056B 59                  <4>  pop ecx
    24 0000056C 5B                  <4>  pop ebx
    25 0000056D 58                  <4>  pop eax
    26 0000056E CD80                <4>  int 0x80
    27 00000570 5B                  <4>  pop ebx
    28 00000571 59                  <4>  pop ecx
    29 00000572 5A                  <4>  pop edx
   109 00000573 83F801              <2>  cmp eax, 1
   110 00000576 7506                <2>  jne %%eof_reached
   111 00000578 31C0                <2>  xor eax,eax
   112 0000057A 8A07                <2>  mov al, [edi]
   113 0000057C EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 0000057E 31C0                <2>  xor eax, eax
   116 00000580 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000582 83C402              <2>  add esp, 2
   119 00000585 5F                  <2>  pop edi
   120 00000586 9D                  <2>  popf
   260 00000587 3C0A                <1> cmp al,0xa
   261 00000589 746C                <1> je %%m_err
   262 0000058B EB2E                <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   263                              <2> ..@74.m_st2: 
   104 0000058D 9C                  <2>  pushf
   105 0000058E 57                  <2>  push edi
   106 0000058F 83EC02              <2>  sub esp, 2
   107 00000592 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000594 52                  <4>  push edx
    16 00000595 51                  <4>  push ecx
    17 00000596 53                  <4>  push ebx
    18 00000597 6A03                <4>  push %1
    19 00000599 6A00                <4>  push %2
    20 0000059B 57                  <4>  push %3
    21 0000059C 6A01                <4>  push %4
    22 0000059E 5A                  <4>  pop edx
    23 0000059F 59                  <4>  pop ecx
    24 000005A0 5B                  <4>  pop ebx
    25 000005A1 58                  <4>  pop eax
    26 000005A2 CD80                <4>  int 0x80
    27 000005A4 5B                  <4>  pop ebx
    28 000005A5 59                  <4>  pop ecx
    29 000005A6 5A                  <4>  pop edx
   109 000005A7 83F801              <2>  cmp eax, 1
   110 000005AA 7506                <2>  jne %%eof_reached
   111 000005AC 31C0                <2>  xor eax,eax
   112 000005AE 8A07                <2>  mov al, [edi]
   113 000005B0 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 000005B2 31C0                <2>  xor eax, eax
   116 000005B4 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 000005B6 83C402              <2>  add esp, 2
   119 000005B9 5F                  <2>  pop edi
   120 000005BA 9D                  <2>  popf
   264 000005BB 3C0A                <1> %%m_st21: cmp al,0xa
   265 000005BD 742E                <1> je %%pr_end
   266 000005BF 3C30                <1> cmp al,'0'
   267 000005C1 7234                <1> jb %%m_err
   268 000005C3 3C39                <1> cmp al,'9'
   269 000005C5 7730                <1> ja %%m_err
   270 000005C7 47                  <1> inc edi
   271 000005C8 31C9                <1> xor ecx,ecx
   272 000005CA 88C1                <1> mov cl,al
   273 000005CC 89F0                <1> mov eax,esi
   274 000005CE F7EB                <1> imul ebx
   275 000005D0 80E930              <1> sub cl,48
   276 000005D3 833C24F6            <1> cmp dword[esp],-10
   277 000005D7 7404                <1> je %%j_s
   278 000005D9 01C8                <1> add eax,ecx
   279 000005DB EB02                <1> jmp %%j_per
   280 000005DD 29C8                <1> %%j_s: sub eax,ecx
   281 000005DF 7061                <1> %%j_per: jo %%m_b
   282 000005E1 89C6                <1> mov esi,eax
   283 000005E3 833C24F6            <1> cmp dword[esp],-10
   284 000005E7 75A4                <1> jne %%m_st2
   285 000005E9 F7DE                <1> neg esi
   286 000005EB EBA0                <1> jmp %%m_st2
   287 000005ED 83FF00              <1> %%pr_end: cmp edi,0
   288 000005F0 749B                <1> je %%m_st2
   289 000005F2 E9E4000000          <1> jmp %%m_k
   290                              <1> 
   291 000005F7 5B                  <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
    56 000005F8 60                  <2>  pusha
    57 000005F9 9C                  <2>  pushf
    58 000005FA EB05                <2>  jmp %%astr
    59 000005FC 4552524F52          <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@87.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000601 52                  <4>  push edx
    16 00000602 51                  <4>  push ecx
    17 00000603 53                  <4>  push ebx
    18 00000604 6A04                <4>  push %1
    19 00000606 6A01                <4>  push %2
    20 00000608 68[FC050000]        <4>  push %3
    21 0000060D 6A05                <4>  push %4
    22 0000060F 5A                  <4>  pop edx
    23 00000610 59                  <4>  pop ecx
    24 00000611 5B                  <4>  pop ebx
    25 00000612 58                  <4>  pop eax
    26 00000613 CD80                <4>  int 0x80
    27 00000615 5B                  <4>  pop ebx
    28 00000616 59                  <4>  pop ecx
    29 00000617 5A                  <4>  pop edx
    62 00000618 9D                  <2>  popf
    63 00000619 61                  <2>  popa
   293                              <1> PUTCHAR 0xa
    68 0000061A 60                  <2>  pusha
    69 0000061B 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 0000061C B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000061E 83EC02              <2>  sub esp, 2
    94 00000621 89E7                <2>  mov edi, esp
    95 00000623 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000625 52                  <4>  push edx
    16 00000626 51                  <4>  push ecx
    17 00000627 53                  <4>  push ebx
    18 00000628 6A04                <4>  push %1
    19 0000062A 6A01                <4>  push %2
    20 0000062C 57                  <4>  push %3
    21 0000062D 6A01                <4>  push %4
    22 0000062F 5A                  <4>  pop edx
    23 00000630 59                  <4>  pop ecx
    24 00000631 5B                  <4>  pop ebx
    25 00000632 58                  <4>  pop eax
    26 00000633 CD80                <4>  int 0x80
    27 00000635 5B                  <4>  pop ebx
    28 00000636 59                  <4>  pop ecx
    29 00000637 5A                  <4>  pop edx
    97 00000638 83C402              <2>  add esp, 2
    98 0000063B 9D                  <2>  popf
    99 0000063C 61                  <2>  popa
   294 0000063D E9B5000000          <1> jmp %%m_end
   295 00000642 5B                  <1> %%m_b: pop ebx
   296 00000643 83FBF6              <1> cmp ebx,-10
   297 00000646 7449                <1> je %%m_l
   298                              <1> PRINT "too big"
    56 00000648 60                  <2>  pusha
    57 00000649 9C                  <2>  pushf
    58 0000064A EB07                <2>  jmp %%astr
    59 0000064C 746F6F20626967      <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@93.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000653 52                  <4>  push edx
    16 00000654 51                  <4>  push ecx
    17 00000655 53                  <4>  push ebx
    18 00000656 6A04                <4>  push %1
    19 00000658 6A01                <4>  push %2
    20 0000065A 68[4C060000]        <4>  push %3
    21 0000065F 6A07                <4>  push %4
    22 00000661 5A                  <4>  pop edx
    23 00000662 59                  <4>  pop ecx
    24 00000663 5B                  <4>  pop ebx
    25 00000664 58                  <4>  pop eax
    26 00000665 CD80                <4>  int 0x80
    27 00000667 5B                  <4>  pop ebx
    28 00000668 59                  <4>  pop ecx
    29 00000669 5A                  <4>  pop edx
    62 0000066A 9D                  <2>  popf
    63 0000066B 61                  <2>  popa
   299                              <1> PUTCHAR 0xa
    68 0000066C 60                  <2>  pusha
    69 0000066D 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 0000066E B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000670 83EC02              <2>  sub esp, 2
    94 00000673 89E7                <2>  mov edi, esp
    95 00000675 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000677 52                  <4>  push edx
    16 00000678 51                  <4>  push ecx
    17 00000679 53                  <4>  push ebx
    18 0000067A 6A04                <4>  push %1
    19 0000067C 6A01                <4>  push %2
    20 0000067E 57                  <4>  push %3
    21 0000067F 6A01                <4>  push %4
    22 00000681 5A                  <4>  pop edx
    23 00000682 59                  <4>  pop ecx
    24 00000683 5B                  <4>  pop ebx
    25 00000684 58                  <4>  pop eax
    26 00000685 CD80                <4>  int 0x80
    27 00000687 5B                  <4>  pop ebx
    28 00000688 59                  <4>  pop ecx
    29 00000689 5A                  <4>  pop edx
    97 0000068A 83C402              <2>  add esp, 2
    98 0000068D 9D                  <2>  popf
    99 0000068E 61                  <2>  popa
   300 0000068F EB66                <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   301                              <2> ..@74.m_l: 
    56 00000691 60                  <2>  pusha
    57 00000692 9C                  <2>  pushf
    58 00000693 EB08                <2>  jmp %%astr
    59 00000695 746F6F206C657373    <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@99.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 0000069D 52                  <4>  push edx
    16 0000069E 51                  <4>  push ecx
    17 0000069F 53                  <4>  push ebx
    18 000006A0 6A04                <4>  push %1
    19 000006A2 6A01                <4>  push %2
    20 000006A4 68[95060000]        <4>  push %3
    21 000006A9 6A08                <4>  push %4
    22 000006AB 5A                  <4>  pop edx
    23 000006AC 59                  <4>  pop ecx
    24 000006AD 5B                  <4>  pop ebx
    25 000006AE 58                  <4>  pop eax
    26 000006AF CD80                <4>  int 0x80
    27 000006B1 5B                  <4>  pop ebx
    28 000006B2 59                  <4>  pop ecx
    29 000006B3 5A                  <4>  pop edx
    62 000006B4 9D                  <2>  popf
    63 000006B5 61                  <2>  popa
   302                              <1> PUTCHAR 0xa
    68 000006B6 60                  <2>  pusha
    69 000006B7 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 000006B8 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000006BA 83EC02              <2>  sub esp, 2
    94 000006BD 89E7                <2>  mov edi, esp
    95 000006BF 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000006C1 52                  <4>  push edx
    16 000006C2 51                  <4>  push ecx
    17 000006C3 53                  <4>  push ebx
    18 000006C4 6A04                <4>  push %1
    19 000006C6 6A01                <4>  push %2
    20 000006C8 57                  <4>  push %3
    21 000006C9 6A01                <4>  push %4
    22 000006CB 5A                  <4>  pop edx
    23 000006CC 59                  <4>  pop ecx
    24 000006CD 5B                  <4>  pop ebx
    25 000006CE 58                  <4>  pop eax
    26 000006CF CD80                <4>  int 0x80
    27 000006D1 5B                  <4>  pop ebx
    28 000006D2 59                  <4>  pop ecx
    29 000006D3 5A                  <4>  pop edx
    97 000006D4 83C402              <2>  add esp, 2
    98 000006D7 9D                  <2>  popf
    99 000006D8 61                  <2>  popa
   303 000006D9 EB1C                <1> jmp %%m_end
   304 000006DB 5B                  <1> %%m_k: pop ebx
   305 000006DC 83FBF6              <1> cmp ebx,-10
   306 000006DF 7502                <1> jne %%m_p
   307 000006E1 F7DE                <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> 
   311                              <1> 
   312 000006E3 56                  <1> push esi
   313 000006E4 83C404              <1> add esp,4
   314 000006E7 9D                  <1> popfd
   315 000006E8 61                  <1> popad
   316 000006E9 83EC28              <1> sub esp,40
   317 000006EC 8F05[02000000]      <1> pop dword %1
   318 000006F2 83C424              <1> add esp,36
   319 000006F5 EB02                <1> jmp %%mm_e
   320                              <1> %%m_end:
   321 000006F7 9D                  <1> popfd
   322 000006F8 61                  <1> popad
   323                              <1> %%mm_e:
    30                                  
    31                                      PRINT "Введите d: "
    56 000006F9 60                  <1>  pusha
    57 000006FA 9C                  <1>  pushf
    58 000006FB EB12                <1>  jmp %%astr
    59 000006FD D092D0B2D0B5D0B4D0- <1> %%str db %1
    59 00000706 B8D182D0B520643A20  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@105.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000070F 52                  <3>  push edx
    16 00000710 51                  <3>  push ecx
    17 00000711 53                  <3>  push ebx
    18 00000712 6A04                <3>  push %1
    19 00000714 6A01                <3>  push %2
    20 00000716 68[FD060000]        <3>  push %3
    21 0000071B 6A12                <3>  push %4
    22 0000071D 5A                  <3>  pop edx
    23 0000071E 59                  <3>  pop ecx
    24 0000071F 5B                  <3>  pop ebx
    25 00000720 58                  <3>  pop eax
    26 00000721 CD80                <3>  int 0x80
    27 00000723 5B                  <3>  pop ebx
    28 00000724 59                  <3>  pop ecx
    29 00000725 5A                  <3>  pop edx
    62 00000726 9D                  <1>  popf
    63 00000727 61                  <1>  popa
    32                                      GETSIG dword [d]
   239 00000728 60                  <1> pushad
   240 00000729 9C                  <1> pushfd
   241                              <1> 
   242 0000072A 31FF                <1> xor edi,edi
   243 0000072C 31F6                <1> xor esi,esi
   244 0000072E BB0A000000          <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   245                              <2> ..@108.m_st1: 
   104 00000733 9C                  <2>  pushf
   105 00000734 57                  <2>  push edi
   106 00000735 83EC02              <2>  sub esp, 2
   107 00000738 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 0000073A 52                  <4>  push edx
    16 0000073B 51                  <4>  push ecx
    17 0000073C 53                  <4>  push ebx
    18 0000073D 6A03                <4>  push %1
    19 0000073F 6A00                <4>  push %2
    20 00000741 57                  <4>  push %3
    21 00000742 6A01                <4>  push %4
    22 00000744 5A                  <4>  pop edx
    23 00000745 59                  <4>  pop ecx
    24 00000746 5B                  <4>  pop ebx
    25 00000747 58                  <4>  pop eax
    26 00000748 CD80                <4>  int 0x80
    27 0000074A 5B                  <4>  pop ebx
    28 0000074B 59                  <4>  pop ecx
    29 0000074C 5A                  <4>  pop edx
   109 0000074D 83F801              <2>  cmp eax, 1
   110 00000750 7506                <2>  jne %%eof_reached
   111 00000752 31C0                <2>  xor eax,eax
   112 00000754 8A07                <2>  mov al, [edi]
   113 00000756 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 00000758 31C0                <2>  xor eax, eax
   116 0000075A F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 0000075C 83C402              <2>  add esp, 2
   119 0000075F 5F                  <2>  pop edi
   120 00000760 9D                  <2>  popf
   246 00000761 3C0A                <1> cmp al,0xa
   247 00000763 74CE                <1> je %%m_st1
   248 00000765 3C2D                <1> cmp al,'-'
   249 00000767 753E                <1> jne %%s1
   250 00000769 BBF6FFFFFF          <1> mov ebx,-10
   251 0000076E 53                  <1> push ebx
   252                              <1> GETCHAR
   104 0000076F 9C                  <2>  pushf
   105 00000770 57                  <2>  push edi
   106 00000771 83EC02              <2>  sub esp, 2
   107 00000774 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 00000776 52                  <4>  push edx
    16 00000777 51                  <4>  push ecx
    17 00000778 53                  <4>  push ebx
    18 00000779 6A03                <4>  push %1
    19 0000077B 6A00                <4>  push %2
    20 0000077D 57                  <4>  push %3
    21 0000077E 6A01                <4>  push %4
    22 00000780 5A                  <4>  pop edx
    23 00000781 59                  <4>  pop ecx
    24 00000782 5B                  <4>  pop ebx
    25 00000783 58                  <4>  pop eax
    26 00000784 CD80                <4>  int 0x80
    27 00000786 5B                  <4>  pop ebx
    28 00000787 59                  <4>  pop ecx
    29 00000788 5A                  <4>  pop edx
   109 00000789 83F801              <2>  cmp eax, 1
   110 0000078C 7506                <2>  jne %%eof_reached
   111 0000078E 31C0                <2>  xor eax,eax
   112 00000790 8A07                <2>  mov al, [edi]
   113 00000792 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 00000794 31C0                <2>  xor eax, eax
   116 00000796 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000798 83C402              <2>  add esp, 2
   119 0000079B 5F                  <2>  pop edi
   120 0000079C 9D                  <2>  popf
   253 0000079D 3C0A                <1> cmp al,0xa
   254 0000079F 0F84A5000000        <1> je %%m_err
   255 000007A5 EB67                <1> jmp %%m_st21
   256 000007A7 53                  <1> %%s1: push ebx
   257 000007A8 3C2B                <1> cmp al,'+'
   258 000007AA 7562                <1> jne %%m_st21
   259                              <1> GETCHAR
   104 000007AC 9C                  <2>  pushf
   105 000007AD 57                  <2>  push edi
   106 000007AE 83EC02              <2>  sub esp, 2
   107 000007B1 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 000007B3 52                  <4>  push edx
    16 000007B4 51                  <4>  push ecx
    17 000007B5 53                  <4>  push ebx
    18 000007B6 6A03                <4>  push %1
    19 000007B8 6A00                <4>  push %2
    20 000007BA 57                  <4>  push %3
    21 000007BB 6A01                <4>  push %4
    22 000007BD 5A                  <4>  pop edx
    23 000007BE 59                  <4>  pop ecx
    24 000007BF 5B                  <4>  pop ebx
    25 000007C0 58                  <4>  pop eax
    26 000007C1 CD80                <4>  int 0x80
    27 000007C3 5B                  <4>  pop ebx
    28 000007C4 59                  <4>  pop ecx
    29 000007C5 5A                  <4>  pop edx
   109 000007C6 83F801              <2>  cmp eax, 1
   110 000007C9 7506                <2>  jne %%eof_reached
   111 000007CB 31C0                <2>  xor eax,eax
   112 000007CD 8A07                <2>  mov al, [edi]
   113 000007CF EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 000007D1 31C0                <2>  xor eax, eax
   116 000007D3 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 000007D5 83C402              <2>  add esp, 2
   119 000007D8 5F                  <2>  pop edi
   120 000007D9 9D                  <2>  popf
   260 000007DA 3C0A                <1> cmp al,0xa
   261 000007DC 746C                <1> je %%m_err
   262 000007DE EB2E                <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   263                              <2> ..@108.m_st2: 
   104 000007E0 9C                  <2>  pushf
   105 000007E1 57                  <2>  push edi
   106 000007E2 83EC02              <2>  sub esp, 2
   107 000007E5 89E7                <2>  mov edi, esp
   108                              <2>  _syscall_read 0, edi, 1
    45                              <3>  _syscall_3 3,%1,%2,%3
    15 000007E7 52                  <4>  push edx
    16 000007E8 51                  <4>  push ecx
    17 000007E9 53                  <4>  push ebx
    18 000007EA 6A03                <4>  push %1
    19 000007EC 6A00                <4>  push %2
    20 000007EE 57                  <4>  push %3
    21 000007EF 6A01                <4>  push %4
    22 000007F1 5A                  <4>  pop edx
    23 000007F2 59                  <4>  pop ecx
    24 000007F3 5B                  <4>  pop ebx
    25 000007F4 58                  <4>  pop eax
    26 000007F5 CD80                <4>  int 0x80
    27 000007F7 5B                  <4>  pop ebx
    28 000007F8 59                  <4>  pop ecx
    29 000007F9 5A                  <4>  pop edx
   109 000007FA 83F801              <2>  cmp eax, 1
   110 000007FD 7506                <2>  jne %%eof_reached
   111 000007FF 31C0                <2>  xor eax,eax
   112 00000801 8A07                <2>  mov al, [edi]
   113 00000803 EB04                <2>  jmp %%gcquit
   114                              <2> %%eof_reached:
   115 00000805 31C0                <2>  xor eax, eax
   116 00000807 F7D0                <2>  not eax
   117                              <2> %%gcquit:
   118 00000809 83C402              <2>  add esp, 2
   119 0000080C 5F                  <2>  pop edi
   120 0000080D 9D                  <2>  popf
   264 0000080E 3C0A                <1> %%m_st21: cmp al,0xa
   265 00000810 742E                <1> je %%pr_end
   266 00000812 3C30                <1> cmp al,'0'
   267 00000814 7234                <1> jb %%m_err
   268 00000816 3C39                <1> cmp al,'9'
   269 00000818 7730                <1> ja %%m_err
   270 0000081A 47                  <1> inc edi
   271 0000081B 31C9                <1> xor ecx,ecx
   272 0000081D 88C1                <1> mov cl,al
   273 0000081F 89F0                <1> mov eax,esi
   274 00000821 F7EB                <1> imul ebx
   275 00000823 80E930              <1> sub cl,48
   276 00000826 833C24F6            <1> cmp dword[esp],-10
   277 0000082A 7404                <1> je %%j_s
   278 0000082C 01C8                <1> add eax,ecx
   279 0000082E EB02                <1> jmp %%j_per
   280 00000830 29C8                <1> %%j_s: sub eax,ecx
   281 00000832 7061                <1> %%j_per: jo %%m_b
   282 00000834 89C6                <1> mov esi,eax
   283 00000836 833C24F6            <1> cmp dword[esp],-10
   284 0000083A 75A4                <1> jne %%m_st2
   285 0000083C F7DE                <1> neg esi
   286 0000083E EBA0                <1> jmp %%m_st2
   287 00000840 83FF00              <1> %%pr_end: cmp edi,0
   288 00000843 749B                <1> je %%m_st2
   289 00000845 E9E4000000          <1> jmp %%m_k
   290                              <1> 
   291 0000084A 5B                  <1> %%m_err: pop ebx
   292                              <1> PRINT "ERROR"
    56 0000084B 60                  <2>  pusha
    57 0000084C 9C                  <2>  pushf
    58 0000084D EB05                <2>  jmp %%astr
    59 0000084F 4552524F52          <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@121.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000854 52                  <4>  push edx
    16 00000855 51                  <4>  push ecx
    17 00000856 53                  <4>  push ebx
    18 00000857 6A04                <4>  push %1
    19 00000859 6A01                <4>  push %2
    20 0000085B 68[4F080000]        <4>  push %3
    21 00000860 6A05                <4>  push %4
    22 00000862 5A                  <4>  pop edx
    23 00000863 59                  <4>  pop ecx
    24 00000864 5B                  <4>  pop ebx
    25 00000865 58                  <4>  pop eax
    26 00000866 CD80                <4>  int 0x80
    27 00000868 5B                  <4>  pop ebx
    28 00000869 59                  <4>  pop ecx
    29 0000086A 5A                  <4>  pop edx
    62 0000086B 9D                  <2>  popf
    63 0000086C 61                  <2>  popa
   293                              <1> PUTCHAR 0xa
    68 0000086D 60                  <2>  pusha
    69 0000086E 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 0000086F B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000871 83EC02              <2>  sub esp, 2
    94 00000874 89E7                <2>  mov edi, esp
    95 00000876 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000878 52                  <4>  push edx
    16 00000879 51                  <4>  push ecx
    17 0000087A 53                  <4>  push ebx
    18 0000087B 6A04                <4>  push %1
    19 0000087D 6A01                <4>  push %2
    20 0000087F 57                  <4>  push %3
    21 00000880 6A01                <4>  push %4
    22 00000882 5A                  <4>  pop edx
    23 00000883 59                  <4>  pop ecx
    24 00000884 5B                  <4>  pop ebx
    25 00000885 58                  <4>  pop eax
    26 00000886 CD80                <4>  int 0x80
    27 00000888 5B                  <4>  pop ebx
    28 00000889 59                  <4>  pop ecx
    29 0000088A 5A                  <4>  pop edx
    97 0000088B 83C402              <2>  add esp, 2
    98 0000088E 9D                  <2>  popf
    99 0000088F 61                  <2>  popa
   294 00000890 E9B5000000          <1> jmp %%m_end
   295 00000895 5B                  <1> %%m_b: pop ebx
   296 00000896 83FBF6              <1> cmp ebx,-10
   297 00000899 7449                <1> je %%m_l
   298                              <1> PRINT "too big"
    56 0000089B 60                  <2>  pusha
    57 0000089C 9C                  <2>  pushf
    58 0000089D EB07                <2>  jmp %%astr
    59 0000089F 746F6F20626967      <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@127.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000008A6 52                  <4>  push edx
    16 000008A7 51                  <4>  push ecx
    17 000008A8 53                  <4>  push ebx
    18 000008A9 6A04                <4>  push %1
    19 000008AB 6A01                <4>  push %2
    20 000008AD 68[9F080000]        <4>  push %3
    21 000008B2 6A07                <4>  push %4
    22 000008B4 5A                  <4>  pop edx
    23 000008B5 59                  <4>  pop ecx
    24 000008B6 5B                  <4>  pop ebx
    25 000008B7 58                  <4>  pop eax
    26 000008B8 CD80                <4>  int 0x80
    27 000008BA 5B                  <4>  pop ebx
    28 000008BB 59                  <4>  pop ecx
    29 000008BC 5A                  <4>  pop edx
    62 000008BD 9D                  <2>  popf
    63 000008BE 61                  <2>  popa
   299                              <1> PUTCHAR 0xa
    68 000008BF 60                  <2>  pusha
    69 000008C0 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 000008C1 B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000008C3 83EC02              <2>  sub esp, 2
    94 000008C6 89E7                <2>  mov edi, esp
    95 000008C8 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000008CA 52                  <4>  push edx
    16 000008CB 51                  <4>  push ecx
    17 000008CC 53                  <4>  push ebx
    18 000008CD 6A04                <4>  push %1
    19 000008CF 6A01                <4>  push %2
    20 000008D1 57                  <4>  push %3
    21 000008D2 6A01                <4>  push %4
    22 000008D4 5A                  <4>  pop edx
    23 000008D5 59                  <4>  pop ecx
    24 000008D6 5B                  <4>  pop ebx
    25 000008D7 58                  <4>  pop eax
    26 000008D8 CD80                <4>  int 0x80
    27 000008DA 5B                  <4>  pop ebx
    28 000008DB 59                  <4>  pop ecx
    29 000008DC 5A                  <4>  pop edx
    97 000008DD 83C402              <2>  add esp, 2
    98 000008E0 9D                  <2>  popf
    99 000008E1 61                  <2>  popa
   300 000008E2 EB66                <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   301                              <2> ..@108.m_l: 
    56 000008E4 60                  <2>  pusha
    57 000008E5 9C                  <2>  pushf
    58 000008E6 EB08                <2>  jmp %%astr
    59 000008E8 746F6F206C657373    <2> %%str db %1
    60                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@133.astr: 
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000008F0 52                  <4>  push edx
    16 000008F1 51                  <4>  push ecx
    17 000008F2 53                  <4>  push ebx
    18 000008F3 6A04                <4>  push %1
    19 000008F5 6A01                <4>  push %2
    20 000008F7 68[E8080000]        <4>  push %3
    21 000008FC 6A08                <4>  push %4
    22 000008FE 5A                  <4>  pop edx
    23 000008FF 59                  <4>  pop ecx
    24 00000900 5B                  <4>  pop ebx
    25 00000901 58                  <4>  pop eax
    26 00000902 CD80                <4>  int 0x80
    27 00000904 5B                  <4>  pop ebx
    28 00000905 59                  <4>  pop ecx
    29 00000906 5A                  <4>  pop edx
    62 00000907 9D                  <2>  popf
    63 00000908 61                  <2>  popa
   302                              <1> PUTCHAR 0xa
    68 00000909 60                  <2>  pusha
    69 0000090A 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71                              <2>  mov al, %1
    72                              <2> %elifnum %1
    73 0000090B B00A                <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000090D 83EC02              <2>  sub esp, 2
    94 00000910 89E7                <2>  mov edi, esp
    95 00000912 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000914 52                  <4>  push edx
    16 00000915 51                  <4>  push ecx
    17 00000916 53                  <4>  push ebx
    18 00000917 6A04                <4>  push %1
    19 00000919 6A01                <4>  push %2
    20 0000091B 57                  <4>  push %3
    21 0000091C 6A01                <4>  push %4
    22 0000091E 5A                  <4>  pop edx
    23 0000091F 59                  <4>  pop ecx
    24 00000920 5B                  <4>  pop ebx
    25 00000921 58                  <4>  pop eax
    26 00000922 CD80                <4>  int 0x80
    27 00000924 5B                  <4>  pop ebx
    28 00000925 59                  <4>  pop ecx
    29 00000926 5A                  <4>  pop edx
    97 00000927 83C402              <2>  add esp, 2
    98 0000092A 9D                  <2>  popf
    99 0000092B 61                  <2>  popa
   303 0000092C EB1C                <1> jmp %%m_end
   304 0000092E 5B                  <1> %%m_k: pop ebx
   305 0000092F 83FBF6              <1> cmp ebx,-10
   306 00000932 7502                <1> jne %%m_p
   307 00000934 F7DE                <1> neg esi
   308                              <1> %%m_p:
   309                              <1> 
   310                              <1> 
   311                              <1> 
   312 00000936 56                  <1> push esi
   313 00000937 83C404              <1> add esp,4
   314 0000093A 9D                  <1> popfd
   315 0000093B 61                  <1> popad
   316 0000093C 83EC28              <1> sub esp,40
   317 0000093F 8F05[03000000]      <1> pop dword %1
   318 00000945 83C424              <1> add esp,36
   319 00000948 EB02                <1> jmp %%mm_e
   320                              <1> %%m_end:
   321 0000094A 9D                  <1> popfd
   322 0000094B 61                  <1> popad
   323                              <1> %%mm_e:
    33                                  
    34                                      PUTCHAR 10
    68 0000094C 60                  <1>  pusha
    69 0000094D 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 0000094E B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000950 83EC02              <1>  sub esp, 2
    94 00000953 89E7                <1>  mov edi, esp
    95 00000955 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000957 52                  <3>  push edx
    16 00000958 51                  <3>  push ecx
    17 00000959 53                  <3>  push ebx
    18 0000095A 6A04                <3>  push %1
    19 0000095C 6A01                <3>  push %2
    20 0000095E 57                  <3>  push %3
    21 0000095F 6A01                <3>  push %4
    22 00000961 5A                  <3>  pop edx
    23 00000962 59                  <3>  pop ecx
    24 00000963 5B                  <3>  pop ebx
    25 00000964 58                  <3>  pop eax
    26 00000965 CD80                <3>  int 0x80
    27 00000967 5B                  <3>  pop ebx
    28 00000968 59                  <3>  pop ecx
    29 00000969 5A                  <3>  pop edx
    97 0000096A 83C402              <1>  add esp, 2
    98 0000096D 9D                  <1>  popf
    99 0000096E 61                  <1>  popa
    35                                  
    36 0000096F 0FBE05[00000000]            movsx eax, byte [a]
    37 00000976 0FBE1D[01000000]            movsx ebx, byte [b]
    38 0000097D 01D8                        add eax, ebx
    39 0000097F 89C3                        mov ebx, eax                ; ebx = a + b
    40                                  
    41                                      PRINT "a + b = "
    56 00000981 60                  <1>  pusha
    57 00000982 9C                  <1>  pushf
    58 00000983 EB08                <1>  jmp %%astr
    59 00000985 61202B2062203D20    <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@142.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000098D 52                  <3>  push edx
    16 0000098E 51                  <3>  push ecx
    17 0000098F 53                  <3>  push ebx
    18 00000990 6A04                <3>  push %1
    19 00000992 6A01                <3>  push %2
    20 00000994 68[85090000]        <3>  push %3
    21 00000999 6A08                <3>  push %4
    22 0000099B 5A                  <3>  pop edx
    23 0000099C 59                  <3>  pop ecx
    24 0000099D 5B                  <3>  pop ebx
    25 0000099E 58                  <3>  pop eax
    26 0000099F CD80                <3>  int 0x80
    27 000009A1 5B                  <3>  pop ebx
    28 000009A2 59                  <3>  pop ecx
    29 000009A3 5A                  <3>  pop edx
    62 000009A4 9D                  <1>  popf
    63 000009A5 61                  <1>  popa
    42                                      SIGNINT ebx
   179 000009A6 60                  <1> pusha
   180 000009A7 9C                  <1> pushf
   181 000009A8 53                  <1> push dword %1
   182 000009A9 58                  <1> pop eax
   183 000009AA 83F800              <1>  cmp eax,0
   184 000009AD 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 000009AF 60                  <2>  pusha
    69 000009B0 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 000009B1 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 000009B3 83EC02              <2>  sub esp, 2
    94 000009B6 89E7                <2>  mov edi, esp
    95 000009B8 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 000009BA 52                  <4>  push edx
    16 000009BB 51                  <4>  push ecx
    17 000009BC 53                  <4>  push ebx
    18 000009BD 6A04                <4>  push %1
    19 000009BF 6A01                <4>  push %2
    20 000009C1 57                  <4>  push %3
    21 000009C2 6A01                <4>  push %4
    22 000009C4 5A                  <4>  pop edx
    23 000009C5 59                  <4>  pop ecx
    24 000009C6 5B                  <4>  pop ebx
    25 000009C7 58                  <4>  pop eax
    26 000009C8 CD80                <4>  int 0x80
    27 000009CA 5B                  <4>  pop ebx
    28 000009CB 59                  <4>  pop ecx
    29 000009CC 5A                  <4>  pop edx
    97 000009CD 83C402              <2>  add esp, 2
    98 000009D0 9D                  <2>  popf
    99 000009D1 61                  <2>  popa
   186 000009D2 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 000009D4 60                  <2> pusha
   130 000009D5 9C                  <2> pushf
   131 000009D6 50                  <2> push dword %1
   132 000009D7 58                  <2> pop eax
   133 000009D8 89C7                <2> mov edi,eax
   134 000009DA BE0A000000          <2> mov esi,10
   135 000009DF 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 000009E1 31D2                <2>  xor edx,edx
   138 000009E3 F7F6                <2>  div esi
   139 000009E5 43                  <2>  inc ebx
   140 000009E6 83F800              <2>  cmp eax,0
   141 000009E9 75F6                <2>  jne %%m1
   142                              <2> 
   143 000009EB B801000000          <2>  mov eax,1
   144 000009F0 89D9                <2>  mov ecx,ebx
   145 000009F2 49                  <2>  dec ecx
   146                              <2> 
   147 000009F3 83F900              <2>  cmp ecx,0
   148 000009F6 7441                <2>  je %%m4
   149 000009F8 F7E6                <2> %%m2: mul esi
   150 000009FA E2FC                <2>  loop %%m2
   151                              <2> 
   152 000009FC 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 000009FE 89F8                <2>  mov eax,edi
   156 00000A00 31D2                <2>  xor edx,edx
   157 00000A02 F7F3                <2>  div ebx
   158 00000A04 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000A06 60                  <3>  pusha
    69 00000A07 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000A08 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000A09 83EC02              <3>  sub esp, 2
    94 00000A0C 89E7                <3>  mov edi, esp
    95 00000A0E 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000A10 52                  <5>  push edx
    16 00000A11 51                  <5>  push ecx
    17 00000A12 53                  <5>  push ebx
    18 00000A13 6A04                <5>  push %1
    19 00000A15 6A01                <5>  push %2
    20 00000A17 57                  <5>  push %3
    21 00000A18 6A01                <5>  push %4
    22 00000A1A 5A                  <5>  pop edx
    23 00000A1B 59                  <5>  pop ecx
    24 00000A1C 5B                  <5>  pop ebx
    25 00000A1D 58                  <5>  pop eax
    26 00000A1E CD80                <5>  int 0x80
    27 00000A20 5B                  <5>  pop ebx
    28 00000A21 59                  <5>  pop ecx
    29 00000A22 5A                  <5>  pop edx
    97 00000A23 83C402              <3>  add esp, 2
    98 00000A26 9D                  <3>  popf
    99 00000A27 61                  <3>  popa
   160 00000A28 89D7                <2>  mov edi,edx
   161 00000A2A 31D2                <2>  xor edx,edx
   162 00000A2C 89D8                <2>  mov eax,ebx
   163 00000A2E F7F6                <2>  div esi
   164 00000A30 83F801              <2>  cmp eax,1
   165 00000A33 7404                <2>  je %%m4
   166 00000A35 89C3                <2>  mov ebx,eax
   167 00000A37 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000A39 89FA                <2>  mov edx,edi
   170 00000A3B 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000A3E 60                  <3>  pusha
    69 00000A3F 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000A40 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000A42 83EC02              <3>  sub esp, 2
    94 00000A45 89E7                <3>  mov edi, esp
    95 00000A47 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000A49 52                  <5>  push edx
    16 00000A4A 51                  <5>  push ecx
    17 00000A4B 53                  <5>  push ebx
    18 00000A4C 6A04                <5>  push %1
    19 00000A4E 6A01                <5>  push %2
    20 00000A50 57                  <5>  push %3
    21 00000A51 6A01                <5>  push %4
    22 00000A53 5A                  <5>  pop edx
    23 00000A54 59                  <5>  pop ecx
    24 00000A55 5B                  <5>  pop ebx
    25 00000A56 58                  <5>  pop eax
    26 00000A57 CD80                <5>  int 0x80
    27 00000A59 5B                  <5>  pop ebx
    28 00000A5A 59                  <5>  pop ecx
    29 00000A5B 5A                  <5>  pop edx
    97 00000A5C 83C402              <3>  add esp, 2
    98 00000A5F 9D                  <3>  popf
    99 00000A60 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000A61 9D                  <2> popf
   175 00000A62 61                  <2> popa
   189 00000A63 9D                  <1> popf
   190 00000A64 61                  <1> popa
    43                                      PUTCHAR 10
    68 00000A65 60                  <1>  pusha
    69 00000A66 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000A67 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000A69 83EC02              <1>  sub esp, 2
    94 00000A6C 89E7                <1>  mov edi, esp
    95 00000A6E 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000A70 52                  <3>  push edx
    16 00000A71 51                  <3>  push ecx
    17 00000A72 53                  <3>  push ebx
    18 00000A73 6A04                <3>  push %1
    19 00000A75 6A01                <3>  push %2
    20 00000A77 57                  <3>  push %3
    21 00000A78 6A01                <3>  push %4
    22 00000A7A 5A                  <3>  pop edx
    23 00000A7B 59                  <3>  pop ecx
    24 00000A7C 5B                  <3>  pop ebx
    25 00000A7D 58                  <3>  pop eax
    26 00000A7E CD80                <3>  int 0x80
    27 00000A80 5B                  <3>  pop ebx
    28 00000A81 59                  <3>  pop ecx
    29 00000A82 5A                  <3>  pop edx
    97 00000A83 83C402              <1>  add esp, 2
    98 00000A86 9D                  <1>  popf
    99 00000A87 61                  <1>  popa
    44                                  
    45 00000A88 0FBE05[00000000]            movsx eax, byte [a]         ; eax = a
    46 00000A8F B90A000000                  mov ecx, 10                 ; ecx = 10
    47 00000A94 F7E9                        imul ecx                    ; eax = 10 * a
    48                                  
    49                                      PRINT "10 * a = "
    56 00000A96 60                  <1>  pusha
    57 00000A97 9C                  <1>  pushf
    58 00000A98 EB09                <1>  jmp %%astr
    59 00000A9A 3130202A2061203D20  <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@159.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000AA3 52                  <3>  push edx
    16 00000AA4 51                  <3>  push ecx
    17 00000AA5 53                  <3>  push ebx
    18 00000AA6 6A04                <3>  push %1
    19 00000AA8 6A01                <3>  push %2
    20 00000AAA 68[9A0A0000]        <3>  push %3
    21 00000AAF 6A09                <3>  push %4
    22 00000AB1 5A                  <3>  pop edx
    23 00000AB2 59                  <3>  pop ecx
    24 00000AB3 5B                  <3>  pop ebx
    25 00000AB4 58                  <3>  pop eax
    26 00000AB5 CD80                <3>  int 0x80
    27 00000AB7 5B                  <3>  pop ebx
    28 00000AB8 59                  <3>  pop ecx
    29 00000AB9 5A                  <3>  pop edx
    62 00000ABA 9D                  <1>  popf
    63 00000ABB 61                  <1>  popa
    50                                      SIGNINT eax
   179 00000ABC 60                  <1> pusha
   180 00000ABD 9C                  <1> pushf
   181 00000ABE 50                  <1> push dword %1
   182 00000ABF 58                  <1> pop eax
   183 00000AC0 83F800              <1>  cmp eax,0
   184 00000AC3 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000AC5 60                  <2>  pusha
    69 00000AC6 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000AC7 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000AC9 83EC02              <2>  sub esp, 2
    94 00000ACC 89E7                <2>  mov edi, esp
    95 00000ACE 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000AD0 52                  <4>  push edx
    16 00000AD1 51                  <4>  push ecx
    17 00000AD2 53                  <4>  push ebx
    18 00000AD3 6A04                <4>  push %1
    19 00000AD5 6A01                <4>  push %2
    20 00000AD7 57                  <4>  push %3
    21 00000AD8 6A01                <4>  push %4
    22 00000ADA 5A                  <4>  pop edx
    23 00000ADB 59                  <4>  pop ecx
    24 00000ADC 5B                  <4>  pop ebx
    25 00000ADD 58                  <4>  pop eax
    26 00000ADE CD80                <4>  int 0x80
    27 00000AE0 5B                  <4>  pop ebx
    28 00000AE1 59                  <4>  pop ecx
    29 00000AE2 5A                  <4>  pop edx
    97 00000AE3 83C402              <2>  add esp, 2
    98 00000AE6 9D                  <2>  popf
    99 00000AE7 61                  <2>  popa
   186 00000AE8 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000AEA 60                  <2> pusha
   130 00000AEB 9C                  <2> pushf
   131 00000AEC 50                  <2> push dword %1
   132 00000AED 58                  <2> pop eax
   133 00000AEE 89C7                <2> mov edi,eax
   134 00000AF0 BE0A000000          <2> mov esi,10
   135 00000AF5 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000AF7 31D2                <2>  xor edx,edx
   138 00000AF9 F7F6                <2>  div esi
   139 00000AFB 43                  <2>  inc ebx
   140 00000AFC 83F800              <2>  cmp eax,0
   141 00000AFF 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000B01 B801000000          <2>  mov eax,1
   144 00000B06 89D9                <2>  mov ecx,ebx
   145 00000B08 49                  <2>  dec ecx
   146                              <2> 
   147 00000B09 83F900              <2>  cmp ecx,0
   148 00000B0C 7441                <2>  je %%m4
   149 00000B0E F7E6                <2> %%m2: mul esi
   150 00000B10 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000B12 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000B14 89F8                <2>  mov eax,edi
   156 00000B16 31D2                <2>  xor edx,edx
   157 00000B18 F7F3                <2>  div ebx
   158 00000B1A 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000B1C 60                  <3>  pusha
    69 00000B1D 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000B1E 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000B1F 83EC02              <3>  sub esp, 2
    94 00000B22 89E7                <3>  mov edi, esp
    95 00000B24 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000B26 52                  <5>  push edx
    16 00000B27 51                  <5>  push ecx
    17 00000B28 53                  <5>  push ebx
    18 00000B29 6A04                <5>  push %1
    19 00000B2B 6A01                <5>  push %2
    20 00000B2D 57                  <5>  push %3
    21 00000B2E 6A01                <5>  push %4
    22 00000B30 5A                  <5>  pop edx
    23 00000B31 59                  <5>  pop ecx
    24 00000B32 5B                  <5>  pop ebx
    25 00000B33 58                  <5>  pop eax
    26 00000B34 CD80                <5>  int 0x80
    27 00000B36 5B                  <5>  pop ebx
    28 00000B37 59                  <5>  pop ecx
    29 00000B38 5A                  <5>  pop edx
    97 00000B39 83C402              <3>  add esp, 2
    98 00000B3C 9D                  <3>  popf
    99 00000B3D 61                  <3>  popa
   160 00000B3E 89D7                <2>  mov edi,edx
   161 00000B40 31D2                <2>  xor edx,edx
   162 00000B42 89D8                <2>  mov eax,ebx
   163 00000B44 F7F6                <2>  div esi
   164 00000B46 83F801              <2>  cmp eax,1
   165 00000B49 7404                <2>  je %%m4
   166 00000B4B 89C3                <2>  mov ebx,eax
   167 00000B4D EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000B4F 89FA                <2>  mov edx,edi
   170 00000B51 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000B54 60                  <3>  pusha
    69 00000B55 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000B56 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000B58 83EC02              <3>  sub esp, 2
    94 00000B5B 89E7                <3>  mov edi, esp
    95 00000B5D 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000B5F 52                  <5>  push edx
    16 00000B60 51                  <5>  push ecx
    17 00000B61 53                  <5>  push ebx
    18 00000B62 6A04                <5>  push %1
    19 00000B64 6A01                <5>  push %2
    20 00000B66 57                  <5>  push %3
    21 00000B67 6A01                <5>  push %4
    22 00000B69 5A                  <5>  pop edx
    23 00000B6A 59                  <5>  pop ecx
    24 00000B6B 5B                  <5>  pop ebx
    25 00000B6C 58                  <5>  pop eax
    26 00000B6D CD80                <5>  int 0x80
    27 00000B6F 5B                  <5>  pop ebx
    28 00000B70 59                  <5>  pop ecx
    29 00000B71 5A                  <5>  pop edx
    97 00000B72 83C402              <3>  add esp, 2
    98 00000B75 9D                  <3>  popf
    99 00000B76 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000B77 9D                  <2> popf
   175 00000B78 61                  <2> popa
   189 00000B79 9D                  <1> popf
   190 00000B7A 61                  <1> popa
    51                                      PUTCHAR 10
    68 00000B7B 60                  <1>  pusha
    69 00000B7C 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000B7D B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000B7F 83EC02              <1>  sub esp, 2
    94 00000B82 89E7                <1>  mov edi, esp
    95 00000B84 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000B86 52                  <3>  push edx
    16 00000B87 51                  <3>  push ecx
    17 00000B88 53                  <3>  push ebx
    18 00000B89 6A04                <3>  push %1
    19 00000B8B 6A01                <3>  push %2
    20 00000B8D 57                  <3>  push %3
    21 00000B8E 6A01                <3>  push %4
    22 00000B90 5A                  <3>  pop edx
    23 00000B91 59                  <3>  pop ecx
    24 00000B92 5B                  <3>  pop ebx
    25 00000B93 58                  <3>  pop eax
    26 00000B94 CD80                <3>  int 0x80
    27 00000B96 5B                  <3>  pop ebx
    28 00000B97 59                  <3>  pop ecx
    29 00000B98 5A                  <3>  pop edx
    97 00000B99 83C402              <1>  add esp, 2
    98 00000B9C 9D                  <1>  popf
    99 00000B9D 61                  <1>  popa
    52                                  
    53 00000B9E 99                          cdq                         ; расширяем
    54 00000B9F F7FB                        idiv ebx                    ; eax = eax / ebx = 10 * a / (a + b)
    55                                  
    56                                      PRINT "10 * a / (a + b) = "
    56 00000BA1 60                  <1>  pusha
    57 00000BA2 9C                  <1>  pushf
    58 00000BA3 EB13                <1>  jmp %%astr
    59 00000BA5 3130202A2061202F20- <1> %%str db %1
    59 00000BAE 2861202B206229203D- <1>
    59 00000BB7 20                  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@176.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000BB8 52                  <3>  push edx
    16 00000BB9 51                  <3>  push ecx
    17 00000BBA 53                  <3>  push ebx
    18 00000BBB 6A04                <3>  push %1
    19 00000BBD 6A01                <3>  push %2
    20 00000BBF 68[A50B0000]        <3>  push %3
    21 00000BC4 6A13                <3>  push %4
    22 00000BC6 5A                  <3>  pop edx
    23 00000BC7 59                  <3>  pop ecx
    24 00000BC8 5B                  <3>  pop ebx
    25 00000BC9 58                  <3>  pop eax
    26 00000BCA CD80                <3>  int 0x80
    27 00000BCC 5B                  <3>  pop ebx
    28 00000BCD 59                  <3>  pop ecx
    29 00000BCE 5A                  <3>  pop edx
    62 00000BCF 9D                  <1>  popf
    63 00000BD0 61                  <1>  popa
    57                                      SIGNINT eax
   179 00000BD1 60                  <1> pusha
   180 00000BD2 9C                  <1> pushf
   181 00000BD3 50                  <1> push dword %1
   182 00000BD4 58                  <1> pop eax
   183 00000BD5 83F800              <1>  cmp eax,0
   184 00000BD8 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000BDA 60                  <2>  pusha
    69 00000BDB 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000BDC B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000BDE 83EC02              <2>  sub esp, 2
    94 00000BE1 89E7                <2>  mov edi, esp
    95 00000BE3 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000BE5 52                  <4>  push edx
    16 00000BE6 51                  <4>  push ecx
    17 00000BE7 53                  <4>  push ebx
    18 00000BE8 6A04                <4>  push %1
    19 00000BEA 6A01                <4>  push %2
    20 00000BEC 57                  <4>  push %3
    21 00000BED 6A01                <4>  push %4
    22 00000BEF 5A                  <4>  pop edx
    23 00000BF0 59                  <4>  pop ecx
    24 00000BF1 5B                  <4>  pop ebx
    25 00000BF2 58                  <4>  pop eax
    26 00000BF3 CD80                <4>  int 0x80
    27 00000BF5 5B                  <4>  pop ebx
    28 00000BF6 59                  <4>  pop ecx
    29 00000BF7 5A                  <4>  pop edx
    97 00000BF8 83C402              <2>  add esp, 2
    98 00000BFB 9D                  <2>  popf
    99 00000BFC 61                  <2>  popa
   186 00000BFD F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000BFF 60                  <2> pusha
   130 00000C00 9C                  <2> pushf
   131 00000C01 50                  <2> push dword %1
   132 00000C02 58                  <2> pop eax
   133 00000C03 89C7                <2> mov edi,eax
   134 00000C05 BE0A000000          <2> mov esi,10
   135 00000C0A 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000C0C 31D2                <2>  xor edx,edx
   138 00000C0E F7F6                <2>  div esi
   139 00000C10 43                  <2>  inc ebx
   140 00000C11 83F800              <2>  cmp eax,0
   141 00000C14 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000C16 B801000000          <2>  mov eax,1
   144 00000C1B 89D9                <2>  mov ecx,ebx
   145 00000C1D 49                  <2>  dec ecx
   146                              <2> 
   147 00000C1E 83F900              <2>  cmp ecx,0
   148 00000C21 7441                <2>  je %%m4
   149 00000C23 F7E6                <2> %%m2: mul esi
   150 00000C25 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000C27 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000C29 89F8                <2>  mov eax,edi
   156 00000C2B 31D2                <2>  xor edx,edx
   157 00000C2D F7F3                <2>  div ebx
   158 00000C2F 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000C31 60                  <3>  pusha
    69 00000C32 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000C33 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000C34 83EC02              <3>  sub esp, 2
    94 00000C37 89E7                <3>  mov edi, esp
    95 00000C39 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000C3B 52                  <5>  push edx
    16 00000C3C 51                  <5>  push ecx
    17 00000C3D 53                  <5>  push ebx
    18 00000C3E 6A04                <5>  push %1
    19 00000C40 6A01                <5>  push %2
    20 00000C42 57                  <5>  push %3
    21 00000C43 6A01                <5>  push %4
    22 00000C45 5A                  <5>  pop edx
    23 00000C46 59                  <5>  pop ecx
    24 00000C47 5B                  <5>  pop ebx
    25 00000C48 58                  <5>  pop eax
    26 00000C49 CD80                <5>  int 0x80
    27 00000C4B 5B                  <5>  pop ebx
    28 00000C4C 59                  <5>  pop ecx
    29 00000C4D 5A                  <5>  pop edx
    97 00000C4E 83C402              <3>  add esp, 2
    98 00000C51 9D                  <3>  popf
    99 00000C52 61                  <3>  popa
   160 00000C53 89D7                <2>  mov edi,edx
   161 00000C55 31D2                <2>  xor edx,edx
   162 00000C57 89D8                <2>  mov eax,ebx
   163 00000C59 F7F6                <2>  div esi
   164 00000C5B 83F801              <2>  cmp eax,1
   165 00000C5E 7404                <2>  je %%m4
   166 00000C60 89C3                <2>  mov ebx,eax
   167 00000C62 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000C64 89FA                <2>  mov edx,edi
   170 00000C66 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000C69 60                  <3>  pusha
    69 00000C6A 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000C6B 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000C6D 83EC02              <3>  sub esp, 2
    94 00000C70 89E7                <3>  mov edi, esp
    95 00000C72 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000C74 52                  <5>  push edx
    16 00000C75 51                  <5>  push ecx
    17 00000C76 53                  <5>  push ebx
    18 00000C77 6A04                <5>  push %1
    19 00000C79 6A01                <5>  push %2
    20 00000C7B 57                  <5>  push %3
    21 00000C7C 6A01                <5>  push %4
    22 00000C7E 5A                  <5>  pop edx
    23 00000C7F 59                  <5>  pop ecx
    24 00000C80 5B                  <5>  pop ebx
    25 00000C81 58                  <5>  pop eax
    26 00000C82 CD80                <5>  int 0x80
    27 00000C84 5B                  <5>  pop ebx
    28 00000C85 59                  <5>  pop ecx
    29 00000C86 5A                  <5>  pop edx
    97 00000C87 83C402              <3>  add esp, 2
    98 00000C8A 9D                  <3>  popf
    99 00000C8B 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000C8C 9D                  <2> popf
   175 00000C8D 61                  <2> popa
   189 00000C8E 9D                  <1> popf
   190 00000C8F 61                  <1> popa
    58                                      PUTCHAR 10
    68 00000C90 60                  <1>  pusha
    69 00000C91 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000C92 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000C94 83EC02              <1>  sub esp, 2
    94 00000C97 89E7                <1>  mov edi, esp
    95 00000C99 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000C9B 52                  <3>  push edx
    16 00000C9C 51                  <3>  push ecx
    17 00000C9D 53                  <3>  push ebx
    18 00000C9E 6A04                <3>  push %1
    19 00000CA0 6A01                <3>  push %2
    20 00000CA2 57                  <3>  push %3
    21 00000CA3 6A01                <3>  push %4
    22 00000CA5 5A                  <3>  pop edx
    23 00000CA6 59                  <3>  pop ecx
    24 00000CA7 5B                  <3>  pop ebx
    25 00000CA8 58                  <3>  pop eax
    26 00000CA9 CD80                <3>  int 0x80
    27 00000CAB 5B                  <3>  pop ebx
    28 00000CAC 59                  <3>  pop ecx
    29 00000CAD 5A                  <3>  pop edx
    97 00000CAE 83C402              <1>  add esp, 2
    98 00000CB1 9D                  <1>  popf
    99 00000CB2 61                  <1>  popa
    59                                  
    60 00000CB3 89C6                        mov esi, eax                ;записали в edx = 10 * a / (a + b)
    61                                  
    62 00000CB5 0FBE05[02000000]            movsx eax, byte [c]
    63 00000CBC 0FBF1D[03000000]            movsx ebx, word [d]
    64 00000CC3 01D8                        add eax, ebx
    65 00000CC5 89C3                        mov ebx, eax                ; ebx = c + d
    66                                  
    67                                      PRINT "c + d = "
    56 00000CC7 60                  <1>  pusha
    57 00000CC8 9C                  <1>  pushf
    58 00000CC9 EB08                <1>  jmp %%astr
    59 00000CCB 63202B2064203D20    <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@193.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000CD3 52                  <3>  push edx
    16 00000CD4 51                  <3>  push ecx
    17 00000CD5 53                  <3>  push ebx
    18 00000CD6 6A04                <3>  push %1
    19 00000CD8 6A01                <3>  push %2
    20 00000CDA 68[CB0C0000]        <3>  push %3
    21 00000CDF 6A08                <3>  push %4
    22 00000CE1 5A                  <3>  pop edx
    23 00000CE2 59                  <3>  pop ecx
    24 00000CE3 5B                  <3>  pop ebx
    25 00000CE4 58                  <3>  pop eax
    26 00000CE5 CD80                <3>  int 0x80
    27 00000CE7 5B                  <3>  pop ebx
    28 00000CE8 59                  <3>  pop ecx
    29 00000CE9 5A                  <3>  pop edx
    62 00000CEA 9D                  <1>  popf
    63 00000CEB 61                  <1>  popa
    68                                      SIGNINT ebx
   179 00000CEC 60                  <1> pusha
   180 00000CED 9C                  <1> pushf
   181 00000CEE 53                  <1> push dword %1
   182 00000CEF 58                  <1> pop eax
   183 00000CF0 83F800              <1>  cmp eax,0
   184 00000CF3 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000CF5 60                  <2>  pusha
    69 00000CF6 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000CF7 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000CF9 83EC02              <2>  sub esp, 2
    94 00000CFC 89E7                <2>  mov edi, esp
    95 00000CFE 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000D00 52                  <4>  push edx
    16 00000D01 51                  <4>  push ecx
    17 00000D02 53                  <4>  push ebx
    18 00000D03 6A04                <4>  push %1
    19 00000D05 6A01                <4>  push %2
    20 00000D07 57                  <4>  push %3
    21 00000D08 6A01                <4>  push %4
    22 00000D0A 5A                  <4>  pop edx
    23 00000D0B 59                  <4>  pop ecx
    24 00000D0C 5B                  <4>  pop ebx
    25 00000D0D 58                  <4>  pop eax
    26 00000D0E CD80                <4>  int 0x80
    27 00000D10 5B                  <4>  pop ebx
    28 00000D11 59                  <4>  pop ecx
    29 00000D12 5A                  <4>  pop edx
    97 00000D13 83C402              <2>  add esp, 2
    98 00000D16 9D                  <2>  popf
    99 00000D17 61                  <2>  popa
   186 00000D18 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000D1A 60                  <2> pusha
   130 00000D1B 9C                  <2> pushf
   131 00000D1C 50                  <2> push dword %1
   132 00000D1D 58                  <2> pop eax
   133 00000D1E 89C7                <2> mov edi,eax
   134 00000D20 BE0A000000          <2> mov esi,10
   135 00000D25 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000D27 31D2                <2>  xor edx,edx
   138 00000D29 F7F6                <2>  div esi
   139 00000D2B 43                  <2>  inc ebx
   140 00000D2C 83F800              <2>  cmp eax,0
   141 00000D2F 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000D31 B801000000          <2>  mov eax,1
   144 00000D36 89D9                <2>  mov ecx,ebx
   145 00000D38 49                  <2>  dec ecx
   146                              <2> 
   147 00000D39 83F900              <2>  cmp ecx,0
   148 00000D3C 7441                <2>  je %%m4
   149 00000D3E F7E6                <2> %%m2: mul esi
   150 00000D40 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000D42 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000D44 89F8                <2>  mov eax,edi
   156 00000D46 31D2                <2>  xor edx,edx
   157 00000D48 F7F3                <2>  div ebx
   158 00000D4A 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000D4C 60                  <3>  pusha
    69 00000D4D 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000D4E 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000D4F 83EC02              <3>  sub esp, 2
    94 00000D52 89E7                <3>  mov edi, esp
    95 00000D54 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000D56 52                  <5>  push edx
    16 00000D57 51                  <5>  push ecx
    17 00000D58 53                  <5>  push ebx
    18 00000D59 6A04                <5>  push %1
    19 00000D5B 6A01                <5>  push %2
    20 00000D5D 57                  <5>  push %3
    21 00000D5E 6A01                <5>  push %4
    22 00000D60 5A                  <5>  pop edx
    23 00000D61 59                  <5>  pop ecx
    24 00000D62 5B                  <5>  pop ebx
    25 00000D63 58                  <5>  pop eax
    26 00000D64 CD80                <5>  int 0x80
    27 00000D66 5B                  <5>  pop ebx
    28 00000D67 59                  <5>  pop ecx
    29 00000D68 5A                  <5>  pop edx
    97 00000D69 83C402              <3>  add esp, 2
    98 00000D6C 9D                  <3>  popf
    99 00000D6D 61                  <3>  popa
   160 00000D6E 89D7                <2>  mov edi,edx
   161 00000D70 31D2                <2>  xor edx,edx
   162 00000D72 89D8                <2>  mov eax,ebx
   163 00000D74 F7F6                <2>  div esi
   164 00000D76 83F801              <2>  cmp eax,1
   165 00000D79 7404                <2>  je %%m4
   166 00000D7B 89C3                <2>  mov ebx,eax
   167 00000D7D EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000D7F 89FA                <2>  mov edx,edi
   170 00000D81 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000D84 60                  <3>  pusha
    69 00000D85 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000D86 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000D88 83EC02              <3>  sub esp, 2
    94 00000D8B 89E7                <3>  mov edi, esp
    95 00000D8D 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000D8F 52                  <5>  push edx
    16 00000D90 51                  <5>  push ecx
    17 00000D91 53                  <5>  push ebx
    18 00000D92 6A04                <5>  push %1
    19 00000D94 6A01                <5>  push %2
    20 00000D96 57                  <5>  push %3
    21 00000D97 6A01                <5>  push %4
    22 00000D99 5A                  <5>  pop edx
    23 00000D9A 59                  <5>  pop ecx
    24 00000D9B 5B                  <5>  pop ebx
    25 00000D9C 58                  <5>  pop eax
    26 00000D9D CD80                <5>  int 0x80
    27 00000D9F 5B                  <5>  pop ebx
    28 00000DA0 59                  <5>  pop ecx
    29 00000DA1 5A                  <5>  pop edx
    97 00000DA2 83C402              <3>  add esp, 2
    98 00000DA5 9D                  <3>  popf
    99 00000DA6 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000DA7 9D                  <2> popf
   175 00000DA8 61                  <2> popa
   189 00000DA9 9D                  <1> popf
   190 00000DAA 61                  <1> popa
    69                                      PUTCHAR 10
    68 00000DAB 60                  <1>  pusha
    69 00000DAC 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000DAD B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000DAF 83EC02              <1>  sub esp, 2
    94 00000DB2 89E7                <1>  mov edi, esp
    95 00000DB4 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000DB6 52                  <3>  push edx
    16 00000DB7 51                  <3>  push ecx
    17 00000DB8 53                  <3>  push ebx
    18 00000DB9 6A04                <3>  push %1
    19 00000DBB 6A01                <3>  push %2
    20 00000DBD 57                  <3>  push %3
    21 00000DBE 6A01                <3>  push %4
    22 00000DC0 5A                  <3>  pop edx
    23 00000DC1 59                  <3>  pop ecx
    24 00000DC2 5B                  <3>  pop ebx
    25 00000DC3 58                  <3>  pop eax
    26 00000DC4 CD80                <3>  int 0x80
    27 00000DC6 5B                  <3>  pop ebx
    28 00000DC7 59                  <3>  pop ecx
    29 00000DC8 5A                  <3>  pop edx
    97 00000DC9 83C402              <1>  add esp, 2
    98 00000DCC 9D                  <1>  popf
    99 00000DCD 61                  <1>  popa
    70                                  
    71 00000DCE 0FBE05[01000000]            movsx eax, byte [b]         ; eax = b
    72 00000DD5 B90A000000                  mov ecx, 10                 ;ecx = 10
    73 00000DDA F7E9                        imul ecx                    ; eax = eax *ecx = 10 * b
    74                                  
    75                                      PRINT "10 * b = "
    56 00000DDC 60                  <1>  pusha
    57 00000DDD 9C                  <1>  pushf
    58 00000DDE EB09                <1>  jmp %%astr
    59 00000DE0 3130202A2062203D20  <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@210.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000DE9 52                  <3>  push edx
    16 00000DEA 51                  <3>  push ecx
    17 00000DEB 53                  <3>  push ebx
    18 00000DEC 6A04                <3>  push %1
    19 00000DEE 6A01                <3>  push %2
    20 00000DF0 68[E00D0000]        <3>  push %3
    21 00000DF5 6A09                <3>  push %4
    22 00000DF7 5A                  <3>  pop edx
    23 00000DF8 59                  <3>  pop ecx
    24 00000DF9 5B                  <3>  pop ebx
    25 00000DFA 58                  <3>  pop eax
    26 00000DFB CD80                <3>  int 0x80
    27 00000DFD 5B                  <3>  pop ebx
    28 00000DFE 59                  <3>  pop ecx
    29 00000DFF 5A                  <3>  pop edx
    62 00000E00 9D                  <1>  popf
    63 00000E01 61                  <1>  popa
    76                                      SIGNINT eax
   179 00000E02 60                  <1> pusha
   180 00000E03 9C                  <1> pushf
   181 00000E04 50                  <1> push dword %1
   182 00000E05 58                  <1> pop eax
   183 00000E06 83F800              <1>  cmp eax,0
   184 00000E09 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000E0B 60                  <2>  pusha
    69 00000E0C 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000E0D B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000E0F 83EC02              <2>  sub esp, 2
    94 00000E12 89E7                <2>  mov edi, esp
    95 00000E14 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000E16 52                  <4>  push edx
    16 00000E17 51                  <4>  push ecx
    17 00000E18 53                  <4>  push ebx
    18 00000E19 6A04                <4>  push %1
    19 00000E1B 6A01                <4>  push %2
    20 00000E1D 57                  <4>  push %3
    21 00000E1E 6A01                <4>  push %4
    22 00000E20 5A                  <4>  pop edx
    23 00000E21 59                  <4>  pop ecx
    24 00000E22 5B                  <4>  pop ebx
    25 00000E23 58                  <4>  pop eax
    26 00000E24 CD80                <4>  int 0x80
    27 00000E26 5B                  <4>  pop ebx
    28 00000E27 59                  <4>  pop ecx
    29 00000E28 5A                  <4>  pop edx
    97 00000E29 83C402              <2>  add esp, 2
    98 00000E2C 9D                  <2>  popf
    99 00000E2D 61                  <2>  popa
   186 00000E2E F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000E30 60                  <2> pusha
   130 00000E31 9C                  <2> pushf
   131 00000E32 50                  <2> push dword %1
   132 00000E33 58                  <2> pop eax
   133 00000E34 89C7                <2> mov edi,eax
   134 00000E36 BE0A000000          <2> mov esi,10
   135 00000E3B 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000E3D 31D2                <2>  xor edx,edx
   138 00000E3F F7F6                <2>  div esi
   139 00000E41 43                  <2>  inc ebx
   140 00000E42 83F800              <2>  cmp eax,0
   141 00000E45 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000E47 B801000000          <2>  mov eax,1
   144 00000E4C 89D9                <2>  mov ecx,ebx
   145 00000E4E 49                  <2>  dec ecx
   146                              <2> 
   147 00000E4F 83F900              <2>  cmp ecx,0
   148 00000E52 7441                <2>  je %%m4
   149 00000E54 F7E6                <2> %%m2: mul esi
   150 00000E56 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000E58 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000E5A 89F8                <2>  mov eax,edi
   156 00000E5C 31D2                <2>  xor edx,edx
   157 00000E5E F7F3                <2>  div ebx
   158 00000E60 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000E62 60                  <3>  pusha
    69 00000E63 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000E64 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000E65 83EC02              <3>  sub esp, 2
    94 00000E68 89E7                <3>  mov edi, esp
    95 00000E6A 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000E6C 52                  <5>  push edx
    16 00000E6D 51                  <5>  push ecx
    17 00000E6E 53                  <5>  push ebx
    18 00000E6F 6A04                <5>  push %1
    19 00000E71 6A01                <5>  push %2
    20 00000E73 57                  <5>  push %3
    21 00000E74 6A01                <5>  push %4
    22 00000E76 5A                  <5>  pop edx
    23 00000E77 59                  <5>  pop ecx
    24 00000E78 5B                  <5>  pop ebx
    25 00000E79 58                  <5>  pop eax
    26 00000E7A CD80                <5>  int 0x80
    27 00000E7C 5B                  <5>  pop ebx
    28 00000E7D 59                  <5>  pop ecx
    29 00000E7E 5A                  <5>  pop edx
    97 00000E7F 83C402              <3>  add esp, 2
    98 00000E82 9D                  <3>  popf
    99 00000E83 61                  <3>  popa
   160 00000E84 89D7                <2>  mov edi,edx
   161 00000E86 31D2                <2>  xor edx,edx
   162 00000E88 89D8                <2>  mov eax,ebx
   163 00000E8A F7F6                <2>  div esi
   164 00000E8C 83F801              <2>  cmp eax,1
   165 00000E8F 7404                <2>  je %%m4
   166 00000E91 89C3                <2>  mov ebx,eax
   167 00000E93 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000E95 89FA                <2>  mov edx,edi
   170 00000E97 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000E9A 60                  <3>  pusha
    69 00000E9B 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000E9C 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000E9E 83EC02              <3>  sub esp, 2
    94 00000EA1 89E7                <3>  mov edi, esp
    95 00000EA3 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000EA5 52                  <5>  push edx
    16 00000EA6 51                  <5>  push ecx
    17 00000EA7 53                  <5>  push ebx
    18 00000EA8 6A04                <5>  push %1
    19 00000EAA 6A01                <5>  push %2
    20 00000EAC 57                  <5>  push %3
    21 00000EAD 6A01                <5>  push %4
    22 00000EAF 5A                  <5>  pop edx
    23 00000EB0 59                  <5>  pop ecx
    24 00000EB1 5B                  <5>  pop ebx
    25 00000EB2 58                  <5>  pop eax
    26 00000EB3 CD80                <5>  int 0x80
    27 00000EB5 5B                  <5>  pop ebx
    28 00000EB6 59                  <5>  pop ecx
    29 00000EB7 5A                  <5>  pop edx
    97 00000EB8 83C402              <3>  add esp, 2
    98 00000EBB 9D                  <3>  popf
    99 00000EBC 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000EBD 9D                  <2> popf
   175 00000EBE 61                  <2> popa
   189 00000EBF 9D                  <1> popf
   190 00000EC0 61                  <1> popa
    77                                      PUTCHAR 10
    68 00000EC1 60                  <1>  pusha
    69 00000EC2 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000EC3 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000EC5 83EC02              <1>  sub esp, 2
    94 00000EC8 89E7                <1>  mov edi, esp
    95 00000ECA 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000ECC 52                  <3>  push edx
    16 00000ECD 51                  <3>  push ecx
    17 00000ECE 53                  <3>  push ebx
    18 00000ECF 6A04                <3>  push %1
    19 00000ED1 6A01                <3>  push %2
    20 00000ED3 57                  <3>  push %3
    21 00000ED4 6A01                <3>  push %4
    22 00000ED6 5A                  <3>  pop edx
    23 00000ED7 59                  <3>  pop ecx
    24 00000ED8 5B                  <3>  pop ebx
    25 00000ED9 58                  <3>  pop eax
    26 00000EDA CD80                <3>  int 0x80
    27 00000EDC 5B                  <3>  pop ebx
    28 00000EDD 59                  <3>  pop ecx
    29 00000EDE 5A                  <3>  pop edx
    97 00000EDF 83C402              <1>  add esp, 2
    98 00000EE2 9D                  <1>  popf
    99 00000EE3 61                  <1>  popa
    78                                  
    79 00000EE4 99                          cdq                         ; расширяем
    80 00000EE5 F7FB                        idiv ebx                    ;eax = eax / ebx = 10 * b / (c + d)
    81                                  
    82                                      PRINT "10 * b / (c + d) = "
    56 00000EE7 60                  <1>  pusha
    57 00000EE8 9C                  <1>  pushf
    58 00000EE9 EB13                <1>  jmp %%astr
    59 00000EEB 3130202A2062202F20- <1> %%str db %1
    59 00000EF4 2863202B206429203D- <1>
    59 00000EFD 20                  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@227.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000EFE 52                  <3>  push edx
    16 00000EFF 51                  <3>  push ecx
    17 00000F00 53                  <3>  push ebx
    18 00000F01 6A04                <3>  push %1
    19 00000F03 6A01                <3>  push %2
    20 00000F05 68[EB0E0000]        <3>  push %3
    21 00000F0A 6A13                <3>  push %4
    22 00000F0C 5A                  <3>  pop edx
    23 00000F0D 59                  <3>  pop ecx
    24 00000F0E 5B                  <3>  pop ebx
    25 00000F0F 58                  <3>  pop eax
    26 00000F10 CD80                <3>  int 0x80
    27 00000F12 5B                  <3>  pop ebx
    28 00000F13 59                  <3>  pop ecx
    29 00000F14 5A                  <3>  pop edx
    62 00000F15 9D                  <1>  popf
    63 00000F16 61                  <1>  popa
    83                                      SIGNINT eax
   179 00000F17 60                  <1> pusha
   180 00000F18 9C                  <1> pushf
   181 00000F19 50                  <1> push dword %1
   182 00000F1A 58                  <1> pop eax
   183 00000F1B 83F800              <1>  cmp eax,0
   184 00000F1E 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00000F20 60                  <2>  pusha
    69 00000F21 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 00000F22 B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 00000F24 83EC02              <2>  sub esp, 2
    94 00000F27 89E7                <2>  mov edi, esp
    95 00000F29 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00000F2B 52                  <4>  push edx
    16 00000F2C 51                  <4>  push ecx
    17 00000F2D 53                  <4>  push ebx
    18 00000F2E 6A04                <4>  push %1
    19 00000F30 6A01                <4>  push %2
    20 00000F32 57                  <4>  push %3
    21 00000F33 6A01                <4>  push %4
    22 00000F35 5A                  <4>  pop edx
    23 00000F36 59                  <4>  pop ecx
    24 00000F37 5B                  <4>  pop ebx
    25 00000F38 58                  <4>  pop eax
    26 00000F39 CD80                <4>  int 0x80
    27 00000F3B 5B                  <4>  pop ebx
    28 00000F3C 59                  <4>  pop ecx
    29 00000F3D 5A                  <4>  pop edx
    97 00000F3E 83C402              <2>  add esp, 2
    98 00000F41 9D                  <2>  popf
    99 00000F42 61                  <2>  popa
   186 00000F43 F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 00000F45 60                  <2> pusha
   130 00000F46 9C                  <2> pushf
   131 00000F47 50                  <2> push dword %1
   132 00000F48 58                  <2> pop eax
   133 00000F49 89C7                <2> mov edi,eax
   134 00000F4B BE0A000000          <2> mov esi,10
   135 00000F50 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 00000F52 31D2                <2>  xor edx,edx
   138 00000F54 F7F6                <2>  div esi
   139 00000F56 43                  <2>  inc ebx
   140 00000F57 83F800              <2>  cmp eax,0
   141 00000F5A 75F6                <2>  jne %%m1
   142                              <2> 
   143 00000F5C B801000000          <2>  mov eax,1
   144 00000F61 89D9                <2>  mov ecx,ebx
   145 00000F63 49                  <2>  dec ecx
   146                              <2> 
   147 00000F64 83F900              <2>  cmp ecx,0
   148 00000F67 7441                <2>  je %%m4
   149 00000F69 F7E6                <2> %%m2: mul esi
   150 00000F6B E2FC                <2>  loop %%m2
   151                              <2> 
   152 00000F6D 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00000F6F 89F8                <2>  mov eax,edi
   156 00000F71 31D2                <2>  xor edx,edx
   157 00000F73 F7F3                <2>  div ebx
   158 00000F75 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 00000F77 60                  <3>  pusha
    69 00000F78 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 00000F79 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000F7A 83EC02              <3>  sub esp, 2
    94 00000F7D 89E7                <3>  mov edi, esp
    95 00000F7F 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000F81 52                  <5>  push edx
    16 00000F82 51                  <5>  push ecx
    17 00000F83 53                  <5>  push ebx
    18 00000F84 6A04                <5>  push %1
    19 00000F86 6A01                <5>  push %2
    20 00000F88 57                  <5>  push %3
    21 00000F89 6A01                <5>  push %4
    22 00000F8B 5A                  <5>  pop edx
    23 00000F8C 59                  <5>  pop ecx
    24 00000F8D 5B                  <5>  pop ebx
    25 00000F8E 58                  <5>  pop eax
    26 00000F8F CD80                <5>  int 0x80
    27 00000F91 5B                  <5>  pop ebx
    28 00000F92 59                  <5>  pop ecx
    29 00000F93 5A                  <5>  pop edx
    97 00000F94 83C402              <3>  add esp, 2
    98 00000F97 9D                  <3>  popf
    99 00000F98 61                  <3>  popa
   160 00000F99 89D7                <2>  mov edi,edx
   161 00000F9B 31D2                <2>  xor edx,edx
   162 00000F9D 89D8                <2>  mov eax,ebx
   163 00000F9F F7F6                <2>  div esi
   164 00000FA1 83F801              <2>  cmp eax,1
   165 00000FA4 7404                <2>  je %%m4
   166 00000FA6 89C3                <2>  mov ebx,eax
   167 00000FA8 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 00000FAA 89FA                <2>  mov edx,edi
   170 00000FAC 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 00000FAF 60                  <3>  pusha
    69 00000FB0 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 00000FB1 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 00000FB3 83EC02              <3>  sub esp, 2
    94 00000FB6 89E7                <3>  mov edi, esp
    95 00000FB8 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 00000FBA 52                  <5>  push edx
    16 00000FBB 51                  <5>  push ecx
    17 00000FBC 53                  <5>  push ebx
    18 00000FBD 6A04                <5>  push %1
    19 00000FBF 6A01                <5>  push %2
    20 00000FC1 57                  <5>  push %3
    21 00000FC2 6A01                <5>  push %4
    22 00000FC4 5A                  <5>  pop edx
    23 00000FC5 59                  <5>  pop ecx
    24 00000FC6 5B                  <5>  pop ebx
    25 00000FC7 58                  <5>  pop eax
    26 00000FC8 CD80                <5>  int 0x80
    27 00000FCA 5B                  <5>  pop ebx
    28 00000FCB 59                  <5>  pop ecx
    29 00000FCC 5A                  <5>  pop edx
    97 00000FCD 83C402              <3>  add esp, 2
    98 00000FD0 9D                  <3>  popf
    99 00000FD1 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 00000FD2 9D                  <2> popf
   175 00000FD3 61                  <2> popa
   189 00000FD4 9D                  <1> popf
   190 00000FD5 61                  <1> popa
    84                                      PUTCHAR 10
    68 00000FD6 60                  <1>  pusha
    69 00000FD7 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000FD8 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000FDA 83EC02              <1>  sub esp, 2
    94 00000FDD 89E7                <1>  mov edi, esp
    95 00000FDF 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00000FE1 52                  <3>  push edx
    16 00000FE2 51                  <3>  push ecx
    17 00000FE3 53                  <3>  push ebx
    18 00000FE4 6A04                <3>  push %1
    19 00000FE6 6A01                <3>  push %2
    20 00000FE8 57                  <3>  push %3
    21 00000FE9 6A01                <3>  push %4
    22 00000FEB 5A                  <3>  pop edx
    23 00000FEC 59                  <3>  pop ecx
    24 00000FED 5B                  <3>  pop ebx
    25 00000FEE 58                  <3>  pop eax
    26 00000FEF CD80                <3>  int 0x80
    27 00000FF1 5B                  <3>  pop ebx
    28 00000FF2 59                  <3>  pop ecx
    29 00000FF3 5A                  <3>  pop edx
    97 00000FF4 83C402              <1>  add esp, 2
    98 00000FF7 9D                  <1>  popf
    99 00000FF8 61                  <1>  popa
    85                                      PUTCHAR 10
    68 00000FF9 60                  <1>  pusha
    69 00000FFA 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00000FFB B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00000FFD 83EC02              <1>  sub esp, 2
    94 00001000 89E7                <1>  mov edi, esp
    95 00001002 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00001004 52                  <3>  push edx
    16 00001005 51                  <3>  push ecx
    17 00001006 53                  <3>  push ebx
    18 00001007 6A04                <3>  push %1
    19 00001009 6A01                <3>  push %2
    20 0000100B 57                  <3>  push %3
    21 0000100C 6A01                <3>  push %4
    22 0000100E 5A                  <3>  pop edx
    23 0000100F 59                  <3>  pop ecx
    24 00001010 5B                  <3>  pop ebx
    25 00001011 58                  <3>  pop eax
    26 00001012 CD80                <3>  int 0x80
    27 00001014 5B                  <3>  pop ebx
    28 00001015 59                  <3>  pop ecx
    29 00001016 5A                  <3>  pop edx
    97 00001017 83C402              <1>  add esp, 2
    98 0000101A 9D                  <1>  popf
    99 0000101B 61                  <1>  popa
    86                                  
    87                                  
    88 0000101C 01F0                        add eax, esi                ;eax = 10 * a/ (a + b) + 10 * b / (c + d)
    89                                  
    90                                      PRINT "Z = "
    56 0000101E 60                  <1>  pusha
    57 0000101F 9C                  <1>  pushf
    58 00001020 EB04                <1>  jmp %%astr
    59 00001022 5A203D20            <1> %%str db %1
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@247.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00001026 52                  <3>  push edx
    16 00001027 51                  <3>  push ecx
    17 00001028 53                  <3>  push ebx
    18 00001029 6A04                <3>  push %1
    19 0000102B 6A01                <3>  push %2
    20 0000102D 68[22100000]        <3>  push %3
    21 00001032 6A04                <3>  push %4
    22 00001034 5A                  <3>  pop edx
    23 00001035 59                  <3>  pop ecx
    24 00001036 5B                  <3>  pop ebx
    25 00001037 58                  <3>  pop eax
    26 00001038 CD80                <3>  int 0x80
    27 0000103A 5B                  <3>  pop ebx
    28 0000103B 59                  <3>  pop ecx
    29 0000103C 5A                  <3>  pop edx
    62 0000103D 9D                  <1>  popf
    63 0000103E 61                  <1>  popa
    91                                      SIGNINT eax
   179 0000103F 60                  <1> pusha
   180 00001040 9C                  <1> pushf
   181 00001041 50                  <1> push dword %1
   182 00001042 58                  <1> pop eax
   183 00001043 83F800              <1>  cmp eax,0
   184 00001046 7D25                <1>  jge %%m5
   185                              <1>  PUTCHAR '-'
    68 00001048 60                  <2>  pusha
    69 00001049 9C                  <2>  pushf
    70                              <2> %ifstr %1
    71 0000104A B02D                <2>  mov al, %1
    72                              <2> %elifnum %1
    73                              <2>  mov al, %1
    74                              <2> %elifidni %1,al
    75                              <2>  nop
    76                              <2> %elifidni %1,ah
    77                              <2>  mov al, ah
    78                              <2> %elifidni %1,bl
    79                              <2>  mov al, bl
    80                              <2> %elifidni %1,bh
    81                              <2>  mov al, bh
    82                              <2> %elifidni %1,cl
    83                              <2>  mov al, cl
    84                              <2> %elifidni %1,ch
    85                              <2>  mov al, ch
    86                              <2> %elifidni %1,dl
    87                              <2>  mov al, dl
    88                              <2> %elifidni %1,dh
    89                              <2>  mov al, dh
    90                              <2> %else
    91                              <2>  mov al, %1
    92                              <2> %endif
    93 0000104C 83EC02              <2>  sub esp, 2
    94 0000104F 89E7                <2>  mov edi, esp
    95 00001051 8807                <2>  mov [edi], al
    96                              <2>  _syscall_write 1, edi, 1
    51                              <3>  _syscall_3 4,%1,%2,%3
    15 00001053 52                  <4>  push edx
    16 00001054 51                  <4>  push ecx
    17 00001055 53                  <4>  push ebx
    18 00001056 6A04                <4>  push %1
    19 00001058 6A01                <4>  push %2
    20 0000105A 57                  <4>  push %3
    21 0000105B 6A01                <4>  push %4
    22 0000105D 5A                  <4>  pop edx
    23 0000105E 59                  <4>  pop ecx
    24 0000105F 5B                  <4>  pop ebx
    25 00001060 58                  <4>  pop eax
    26 00001061 CD80                <4>  int 0x80
    27 00001063 5B                  <4>  pop ebx
    28 00001064 59                  <4>  pop ecx
    29 00001065 5A                  <4>  pop edx
    97 00001066 83C402              <2>  add esp, 2
    98 00001069 9D                  <2>  popf
    99 0000106A 61                  <2>  popa
   186 0000106B F7D8                <1>  neg eax
   187                              <1> %%m5:
   188                              <1>  UNSINT eax
   129 0000106D 60                  <2> pusha
   130 0000106E 9C                  <2> pushf
   131 0000106F 50                  <2> push dword %1
   132 00001070 58                  <2> pop eax
   133 00001071 89C7                <2> mov edi,eax
   134 00001073 BE0A000000          <2> mov esi,10
   135 00001078 31DB                <2>  xor ebx,ebx
   136                              <2> %%m1:
   137 0000107A 31D2                <2>  xor edx,edx
   138 0000107C F7F6                <2>  div esi
   139 0000107E 43                  <2>  inc ebx
   140 0000107F 83F800              <2>  cmp eax,0
   141 00001082 75F6                <2>  jne %%m1
   142                              <2> 
   143 00001084 B801000000          <2>  mov eax,1
   144 00001089 89D9                <2>  mov ecx,ebx
   145 0000108B 49                  <2>  dec ecx
   146                              <2> 
   147 0000108C 83F900              <2>  cmp ecx,0
   148 0000108F 7441                <2>  je %%m4
   149 00001091 F7E6                <2> %%m2: mul esi
   150 00001093 E2FC                <2>  loop %%m2
   151                              <2> 
   152 00001095 89C3                <2>  mov ebx,eax
   153                              <2> 
   154                              <2> %%m3:
   155 00001097 89F8                <2>  mov eax,edi
   156 00001099 31D2                <2>  xor edx,edx
   157 0000109B F7F3                <2>  div ebx
   158 0000109D 0430                <2>  add al,'0'
   159                              <2>  PUTCHAR al
    68 0000109F 60                  <3>  pusha
    69 000010A0 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75 000010A1 90                  <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87                              <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000010A2 83EC02              <3>  sub esp, 2
    94 000010A5 89E7                <3>  mov edi, esp
    95 000010A7 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000010A9 52                  <5>  push edx
    16 000010AA 51                  <5>  push ecx
    17 000010AB 53                  <5>  push ebx
    18 000010AC 6A04                <5>  push %1
    19 000010AE 6A01                <5>  push %2
    20 000010B0 57                  <5>  push %3
    21 000010B1 6A01                <5>  push %4
    22 000010B3 5A                  <5>  pop edx
    23 000010B4 59                  <5>  pop ecx
    24 000010B5 5B                  <5>  pop ebx
    25 000010B6 58                  <5>  pop eax
    26 000010B7 CD80                <5>  int 0x80
    27 000010B9 5B                  <5>  pop ebx
    28 000010BA 59                  <5>  pop ecx
    29 000010BB 5A                  <5>  pop edx
    97 000010BC 83C402              <3>  add esp, 2
    98 000010BF 9D                  <3>  popf
    99 000010C0 61                  <3>  popa
   160 000010C1 89D7                <2>  mov edi,edx
   161 000010C3 31D2                <2>  xor edx,edx
   162 000010C5 89D8                <2>  mov eax,ebx
   163 000010C7 F7F6                <2>  div esi
   164 000010C9 83F801              <2>  cmp eax,1
   165 000010CC 7404                <2>  je %%m4
   166 000010CE 89C3                <2>  mov ebx,eax
   167 000010D0 EBC5                <2>  jmp %%m3
   168                              <2>  %%m4:
   169 000010D2 89FA                <2>  mov edx,edi
   170 000010D4 80C230              <2>  add dl,'0'
   171                              <2>  PUTCHAR dl
    68 000010D7 60                  <3>  pusha
    69 000010D8 9C                  <3>  pushf
    70                              <3> %ifstr %1
    71                              <3>  mov al, %1
    72                              <3> %elifnum %1
    73                              <3>  mov al, %1
    74                              <3> %elifidni %1,al
    75                              <3>  nop
    76                              <3> %elifidni %1,ah
    77                              <3>  mov al, ah
    78                              <3> %elifidni %1,bl
    79                              <3>  mov al, bl
    80                              <3> %elifidni %1,bh
    81                              <3>  mov al, bh
    82                              <3> %elifidni %1,cl
    83                              <3>  mov al, cl
    84                              <3> %elifidni %1,ch
    85                              <3>  mov al, ch
    86                              <3> %elifidni %1,dl
    87 000010D9 88D0                <3>  mov al, dl
    88                              <3> %elifidni %1,dh
    89                              <3>  mov al, dh
    90                              <3> %else
    91                              <3>  mov al, %1
    92                              <3> %endif
    93 000010DB 83EC02              <3>  sub esp, 2
    94 000010DE 89E7                <3>  mov edi, esp
    95 000010E0 8807                <3>  mov [edi], al
    96                              <3>  _syscall_write 1, edi, 1
    51                              <4>  _syscall_3 4,%1,%2,%3
    15 000010E2 52                  <5>  push edx
    16 000010E3 51                  <5>  push ecx
    17 000010E4 53                  <5>  push ebx
    18 000010E5 6A04                <5>  push %1
    19 000010E7 6A01                <5>  push %2
    20 000010E9 57                  <5>  push %3
    21 000010EA 6A01                <5>  push %4
    22 000010EC 5A                  <5>  pop edx
    23 000010ED 59                  <5>  pop ecx
    24 000010EE 5B                  <5>  pop ebx
    25 000010EF 58                  <5>  pop eax
    26 000010F0 CD80                <5>  int 0x80
    27 000010F2 5B                  <5>  pop ebx
    28 000010F3 59                  <5>  pop ecx
    29 000010F4 5A                  <5>  pop edx
    97 000010F5 83C402              <3>  add esp, 2
    98 000010F8 9D                  <3>  popf
    99 000010F9 61                  <3>  popa
   172                              <2> 
   173                              <2> 
   174 000010FA 9D                  <2> popf
   175 000010FB 61                  <2> popa
   189 000010FC 9D                  <1> popf
   190 000010FD 61                  <1> popa
    92                                      PUTCHAR 10
    68 000010FE 60                  <1>  pusha
    69 000010FF 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00001100 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00001102 83EC02              <1>  sub esp, 2
    94 00001105 89E7                <1>  mov edi, esp
    95 00001107 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00001109 52                  <3>  push edx
    16 0000110A 51                  <3>  push ecx
    17 0000110B 53                  <3>  push ebx
    18 0000110C 6A04                <3>  push %1
    19 0000110E 6A01                <3>  push %2
    20 00001110 57                  <3>  push %3
    21 00001111 6A01                <3>  push %4
    22 00001113 5A                  <3>  pop edx
    23 00001114 59                  <3>  pop ecx
    24 00001115 5B                  <3>  pop ebx
    25 00001116 58                  <3>  pop eax
    26 00001117 CD80                <3>  int 0x80
    27 00001119 5B                  <3>  pop ebx
    28 0000111A 59                  <3>  pop ecx
    29 0000111B 5A                  <3>  pop edx
    97 0000111C 83C402              <1>  add esp, 2
    98 0000111F 9D                  <1>  popf
    99 00001120 61                  <1>  popa
    93                                  
    94                                      PRINT "C 8 марта! ^w^"
    56 00001121 60                  <1>  pusha
    57 00001122 9C                  <1>  pushf
    58 00001123 EB13                <1>  jmp %%astr
    59 00001125 43203820D0BCD0B0D1- <1> %%str db %1
    59 0000112E 80D182D0B021205E77- <1>
    59 00001137 5E                  <1>
    60                              <1> %%strln equ $-%%str
    61                              <1> %%astr: _syscall_write 1, %%str, %%strln
    61                              <2> ..@264.astr: 
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 00001138 52                  <3>  push edx
    16 00001139 51                  <3>  push ecx
    17 0000113A 53                  <3>  push ebx
    18 0000113B 6A04                <3>  push %1
    19 0000113D 6A01                <3>  push %2
    20 0000113F 68[25110000]        <3>  push %3
    21 00001144 6A13                <3>  push %4
    22 00001146 5A                  <3>  pop edx
    23 00001147 59                  <3>  pop ecx
    24 00001148 5B                  <3>  pop ebx
    25 00001149 58                  <3>  pop eax
    26 0000114A CD80                <3>  int 0x80
    27 0000114C 5B                  <3>  pop ebx
    28 0000114D 59                  <3>  pop ecx
    29 0000114E 5A                  <3>  pop edx
    62 0000114F 9D                  <1>  popf
    63 00001150 61                  <1>  popa
    95                                      PUTCHAR 10
    68 00001151 60                  <1>  pusha
    69 00001152 9C                  <1>  pushf
    70                              <1> %ifstr %1
    71                              <1>  mov al, %1
    72                              <1> %elifnum %1
    73 00001153 B00A                <1>  mov al, %1
    74                              <1> %elifidni %1,al
    75                              <1>  nop
    76                              <1> %elifidni %1,ah
    77                              <1>  mov al, ah
    78                              <1> %elifidni %1,bl
    79                              <1>  mov al, bl
    80                              <1> %elifidni %1,bh
    81                              <1>  mov al, bh
    82                              <1> %elifidni %1,cl
    83                              <1>  mov al, cl
    84                              <1> %elifidni %1,ch
    85                              <1>  mov al, ch
    86                              <1> %elifidni %1,dl
    87                              <1>  mov al, dl
    88                              <1> %elifidni %1,dh
    89                              <1>  mov al, dh
    90                              <1> %else
    91                              <1>  mov al, %1
    92                              <1> %endif
    93 00001155 83EC02              <1>  sub esp, 2
    94 00001158 89E7                <1>  mov edi, esp
    95 0000115A 8807                <1>  mov [edi], al
    96                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    15 0000115C 52                  <3>  push edx
    16 0000115D 51                  <3>  push ecx
    17 0000115E 53                  <3>  push ebx
    18 0000115F 6A04                <3>  push %1
    19 00001161 6A01                <3>  push %2
    20 00001163 57                  <3>  push %3
    21 00001164 6A01                <3>  push %4
    22 00001166 5A                  <3>  pop edx
    23 00001167 59                  <3>  pop ecx
    24 00001168 5B                  <3>  pop ebx
    25 00001169 58                  <3>  pop eax
    26 0000116A CD80                <3>  int 0x80
    27 0000116C 5B                  <3>  pop ebx
    28 0000116D 59                  <3>  pop ecx
    29 0000116E 5A                  <3>  pop edx
    97 0000116F 83C402              <1>  add esp, 2
    98 00001172 9D                  <1>  popf
    99 00001173 61                  <1>  popa
    96                                  
    97                                      FINISH
   125                              <1>  _syscall_exit %1
    34 00001174 BB00000000          <2>  mov ebx, %1
    35 00001179 B801000000          <2>  mov eax, 1
    36 0000117E CD80                <2>  int 0x80
